// This file was auto-generated by Fern from our API Definition.

package api

import (
	json "encoding/json"
	fmt "fmt"
	core "github.com/sayari-analytics/sayari-go/generated/go/core"
)

type GetProjectEntities struct {
	// The response format. Defaults to application/json.
	Accept GetProjectEntitiesAcceptHeader `json:"-"`
	// The pagination token for the next page of entities.
	Next *string `json:"-"`
	// The pagination token for the previous page of entities.
	Prev *string `json:"-"`
	// Limit total entities returned. Defaults to 10,000. Max 10,000.
	Limit *int `json:"-"`
	// Only return entities of the specified [entity type(s)](/sayari-library/ontology/entities). Defaults to all types.
	EntityTypes []*Entities `json:"-"`
	// Whether to include geo facets in the response. Defaults to false.
	GeoFacets *bool `json:"-"`
	// Only return entities with the specified HS code(s).
	HsCodes []*string `json:"-"`
	// Only return entities that received the specified HS code(s).
	ReceivedHsCodes []*string `json:"-"`
	// Only return entities that shipped the specified HS code(s).
	ShippedHsCodes []*string `json:"-"`
	// The language code to translate the entity labels to. Defaults to the user's preferred language.
	Translation *string    `json:"-"`
	Sort        *SortField `json:"-"`
	// Only return entities that match the specified filters.
	Filters []*ProjectEntitiesFilter `json:"-"`
	// Aggregations for entities in a project.
	Aggregations []*ProjectEntitiesAggsDefinition `json:"-"`
}

type GetProjects struct {
	// The pagination token for the next page of projects.
	Next *string `json:"-"`
	// The pagination token for the previous page of projects.
	Prev *string `json:"-"`
	// Limit total values returned for projects. Defaults to 100. Max 100.
	Limit *int `json:"-"`
	// Toggle between projects that have been archived (true) or not (false). Defaults to false.
	Archived *bool `json:"-"`
}

type GetProjectEntitiesAcceptHeader string

const (
	GetProjectEntitiesAcceptHeaderJson GetProjectEntitiesAcceptHeader = "application/json"
	GetProjectEntitiesAcceptHeaderCsv  GetProjectEntitiesAcceptHeader = "text/csv"
	GetProjectEntitiesAcceptHeaderXslx GetProjectEntitiesAcceptHeader = "application/vnd.ms-excel"
)

func NewGetProjectEntitiesAcceptHeaderFromString(s string) (GetProjectEntitiesAcceptHeader, error) {
	switch s {
	case "application/json":
		return GetProjectEntitiesAcceptHeaderJson, nil
	case "text/csv":
		return GetProjectEntitiesAcceptHeaderCsv, nil
	case "application/vnd.ms-excel":
		return GetProjectEntitiesAcceptHeaderXslx, nil
	}
	var t GetProjectEntitiesAcceptHeader
	return "", fmt.Errorf("%s is not a valid %T", s, t)
}

func (g GetProjectEntitiesAcceptHeader) Ptr() *GetProjectEntitiesAcceptHeader {
	return &g
}

type GetProjectEntitiesResponse struct {
	Limit        int                  `json:"limit"`
	Size         *QualifiedCount      `json:"size,omitempty"`
	Next         *string              `json:"next,omitempty"`
	Prev         *string              `json:"prev,omitempty"`
	Data         []*ProjectEntity     `json:"data,omitempty"`
	Aggregations *ProjectEntitiesAggs `json:"aggregations,omitempty"`

	_rawJSON json.RawMessage
}

func (g *GetProjectEntitiesResponse) UnmarshalJSON(data []byte) error {
	type unmarshaler GetProjectEntitiesResponse
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*g = GetProjectEntitiesResponse(value)
	g._rawJSON = json.RawMessage(data)
	return nil
}

func (g *GetProjectEntitiesResponse) String() string {
	if len(g._rawJSON) > 0 {
		if value, err := core.StringifyJSON(g._rawJSON); err == nil {
			return value
		}
	}
	if value, err := core.StringifyJSON(g); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", g)
}

type GetProjectsResponse struct {
	Next  *string               `json:"next,omitempty"`
	Prev  *string               `json:"prev,omitempty"`
	First *bool                 `json:"first,omitempty"`
	Last  *bool                 `json:"last,omitempty"`
	Limit int                   `json:"limit"`
	Data  []*ProjectWithMembers `json:"data,omitempty"`

	_rawJSON json.RawMessage
}

func (g *GetProjectsResponse) UnmarshalJSON(data []byte) error {
	type unmarshaler GetProjectsResponse
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*g = GetProjectsResponse(value)
	g._rawJSON = json.RawMessage(data)
	return nil
}

func (g *GetProjectsResponse) String() string {
	if len(g._rawJSON) > 0 {
		if value, err := core.StringifyJSON(g._rawJSON); err == nil {
			return value
		}
	}
	if value, err := core.StringifyJSON(g); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", g)
}

// Aggregations for entities in a project. Possible values are - hit_count Cardinality of unique entities. - country Count of entities per country. - upstream_country Count of entities per upstream country. - upstream_risk Count of entities per upstream risk factor. - source Count of entities per source. - business_purpose Count of entities per business purpose. - receiver_of Total number of shipments received by entities. - shipper_of Total number of shipments shipped by entities. - received_hs_codes Count of entities and shipments received per HS code. - shipped_hs_codes Count of entities and shipments shipped per HS code. - location Count of entities per grid cell within the specified `bounds` filter. Each cell corresponds to a [map tile](https://en.wikipedia.org/wiki/Tiled_web_map) as used by many online map sites. Each cell is labeled using a "{zoom}/{x}/{y}" format, where zoom is an automatically-selected precision. To use this aggregation, both `filters=bounds` and `geo_facets=true` query parameters must be provided. - <risk> where <risk> is a [risk factor](/sayari-library/ontology/risk-factors) ID. Count of entities per risk factor.
type ProjectEntitiesAggsDefinition = string

// Filter for entities in a project. The format is `field=value`, where the equal sign is encoded as `%3D`. Supported fields are as follows
//
// - risk Filter by [risk factor](/sayari-library/ontology/risk-factors) ID. - upstream_risk Filter by upstream (supply chain) [risk factor](/sayari-library/ontology/risk-factors) ID. - country Filter by [country](/sayari-library/ontology/enumerated-types#country). - upstream_country Filter by upstream (supply chain) [country](/sayari-library/ontology/enumerated-types#country). - business_purpose Filter by HS code, HS code description, or business description. - label.fuzzy Filter by entity label with fuzzy matching. - city.fuzzy Filter by entity city with fuzzy matching. - state.fuzzy Filter by entity address state with fuzzy matching. - identifier.fuzzy Filter by entity identifier attributes with fuzzy matching. - source.exact Filter by entity source ID. - status.exact Filter by entity [company status](/sayari-library/ontology/enumerated-types#company-status). - bounds Filter by a geographical bounding box. The value is a pipe-delimited set of four values representing the top, left, bottom, and right sides of the bounding box, in that order. The pipes should be URL-encoded as `%7C`. The top coordinate must greater than the bottom coordinate, and the left coordinate must be less than the right coordinate. A sample is `55.680357237879136|-71.53607290158526|41.10876347746233|-40.963927098414736`
type ProjectEntitiesFilter = string

// Defines a sort order on a field, either ascending or descending. The value must begin with either a '+' or a '-' to indicate an ascending or descending sort, respectively, followed by a field name to sort on.
type SortField string

const (
	// The date the entity was saved to the project, ascending.
	SortFieldCreatedAsc SortField = "+created"
	// The date the entity was saved to the project, descending.
	SortFieldCreatedDesc SortField = "-created"
	// The unique identifier of the saved entity within the project, e.g. `12200`, ascending.
	SortFieldIdAsc SortField = "+saved_resource_id"
	// The unique identifier of the saved entity within the project, e.g. `12200`, descending.
	SortFieldIdDesc SortField = "-saved_resource_id"
	// The unique identifier of the entity, e.g. `pLH5fpfZoWTiS1z8ieSTDQ`, ascending.
	SortFieldEntityIdAsc SortField = "+entity_id"
	// The unique identifier of the entity, e.g. `pLH5fpfZoWTiS1z8ieSTDQ`, descending.
	SortFieldEntityIdDesc SortField = "-entity_id"
	// The [country](/sayari-library/ontology/enumerated-types#country) of the entity, ascending.
	SortFieldCountryAsc SortField = "+country"
	// The [country](/sayari-library/ontology/enumerated-types#country) of the entity, descending.
	SortFieldCountryDesc SortField = "-country"
	// The most recent [company status](/sayari-library/ontology/enumerated-types#company-status) of the entity, ascending.
	SortFieldStatusAsc SortField = "+latest_status"
	// The most recent [company status](/sayari-library/ontology/enumerated-types#company-status) of the entity, descending.
	SortFieldStatusDesc SortField = "-latest_status"
	// The label (display name) of the entity, ascending.
	SortFieldLabelAsc SortField = "+label"
	// The label (display name) of the entity, descending.
	SortFieldLabelDesc SortField = "-label"
	// The number of shipments the entity has received, ascending.
	SortFieldReceiverOfAcc SortField = "+receiver_of"
	// The number of shipments the entity has received, descending.
	SortFieldReceiverOfDesc SortField = "-receiver_of"
	// The number of shipments the entity has shipped, ascending.
	SortFieldShipperOfAsc SortField = "+shipper_of"
	// The number of shipments the entity has shipped, descending.
	SortFieldShipperOfDesc SortField = "-shipper_of"
)

func NewSortFieldFromString(s string) (SortField, error) {
	switch s {
	case "+created":
		return SortFieldCreatedAsc, nil
	case "-created":
		return SortFieldCreatedDesc, nil
	case "+saved_resource_id":
		return SortFieldIdAsc, nil
	case "-saved_resource_id":
		return SortFieldIdDesc, nil
	case "+entity_id":
		return SortFieldEntityIdAsc, nil
	case "-entity_id":
		return SortFieldEntityIdDesc, nil
	case "+country":
		return SortFieldCountryAsc, nil
	case "-country":
		return SortFieldCountryDesc, nil
	case "+latest_status":
		return SortFieldStatusAsc, nil
	case "-latest_status":
		return SortFieldStatusDesc, nil
	case "+label":
		return SortFieldLabelAsc, nil
	case "-label":
		return SortFieldLabelDesc, nil
	case "+receiver_of":
		return SortFieldReceiverOfAcc, nil
	case "-receiver_of":
		return SortFieldReceiverOfDesc, nil
	case "+shipper_of":
		return SortFieldShipperOfAsc, nil
	case "-shipper_of":
		return SortFieldShipperOfDesc, nil
	}
	var t SortField
	return "", fmt.Errorf("%s is not a valid %T", s, t)
}

func (s SortField) Ptr() *SortField {
	return &s
}
