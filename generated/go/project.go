// This file was auto-generated by Fern from our API Definition.

package api

import (
	json "encoding/json"
	fmt "fmt"
	core "github.com/sayari-analytics/sayari-go/generated/go/core"
)

type GetProjectEntities struct {
	// The response format. Defaults to application/json.
	Accept GetProjectEntitiesAcceptHeader `json:"-" url:"-"`
	// The pagination token for the next page of entities.
	Next *string `json:"-" url:"next,omitempty"`
	// The pagination token for the previous page of entities.
	Prev *string `json:"-" url:"prev,omitempty"`
	// Limit total entities returned. Defaults to 1,000. Max 10,000.
	Limit *int `json:"-" url:"limit,omitempty"`
	// Only return entities of the specified [entity type(s)](/sayari-library/ontology/entities). Defaults to all types.
	EntityTypes []*Entities `json:"-" url:"entity_types,omitempty"`
	// Whether to include geo facets in the response. Defaults to false.
	GeoFacets *bool `json:"-" url:"geo_facets,omitempty"`
	// Only return entities with the specified HS code(s).
	HsCodes []*string `json:"-" url:"hs_codes,omitempty"`
	// Only return entities that received the specified HS code(s).
	ReceivedHsCodes []*string `json:"-" url:"received_hs_codes,omitempty"`
	// Only return entities that shipped the specified HS code(s).
	ShippedHsCodes []*string `json:"-" url:"shipped_hs_codes,omitempty"`
	// The language code to translate the entity labels to. Defaults to the user's preferred language.
	Translation *string    `json:"-" url:"translation,omitempty"`
	Sort        *SortField `json:"-" url:"sort,omitempty"`
	// Filter for entities in a project. The format is `field=value`, where the equal sign is encoded as `%3D`. Supported fields are as follows
	Filters []*ProjectEntitiesFilter `json:"-" url:"filters,omitempty"`
	// Aggregations that should be returned for entities in the project.
	Aggregations []*ProjectEntitiesAggsDefinition `json:"-" url:"aggregations,omitempty"`
}

type GetProjects struct {
	// The pagination token for the next page of projects.
	Next *string `json:"-" url:"next,omitempty"`
	// The pagination token for the previous page of projects.
	Prev *string `json:"-" url:"prev,omitempty"`
	// Limit total values returned for projects. Defaults to 100. Max 100.
	Limit *int `json:"-" url:"limit,omitempty"`
	// Toggle between projects that have been archived (true) or not (false). Defaults to false.
	Archived *bool `json:"-" url:"archived,omitempty"`
}

type CreateProjectRequest struct {
	Label string `json:"label" url:"label"`
	// Specifies access levels available to users in a project within an organization. For comprehensive access, the admin role is recommended.
	Share *ProjectShareOnCreate `json:"share,omitempty" url:"share,omitempty"`

	extraProperties map[string]interface{}
	_rawJSON        json.RawMessage
}

func (c *CreateProjectRequest) GetExtraProperties() map[string]interface{} {
	return c.extraProperties
}

func (c *CreateProjectRequest) UnmarshalJSON(data []byte) error {
	type unmarshaler CreateProjectRequest
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*c = CreateProjectRequest(value)

	extraProperties, err := core.ExtractExtraProperties(data, *c)
	if err != nil {
		return err
	}
	c.extraProperties = extraProperties

	c._rawJSON = json.RawMessage(data)
	return nil
}

func (c *CreateProjectRequest) String() string {
	if len(c._rawJSON) > 0 {
		if value, err := core.StringifyJSON(c._rawJSON); err == nil {
			return value
		}
	}
	if value, err := core.StringifyJSON(c); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", c)
}

type CreateProjectResponse struct {
	Data *Project `json:"data,omitempty" url:"data,omitempty"`

	extraProperties map[string]interface{}
	_rawJSON        json.RawMessage
}

func (c *CreateProjectResponse) GetExtraProperties() map[string]interface{} {
	return c.extraProperties
}

func (c *CreateProjectResponse) UnmarshalJSON(data []byte) error {
	type unmarshaler CreateProjectResponse
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*c = CreateProjectResponse(value)

	extraProperties, err := core.ExtractExtraProperties(data, *c)
	if err != nil {
		return err
	}
	c.extraProperties = extraProperties

	c._rawJSON = json.RawMessage(data)
	return nil
}

func (c *CreateProjectResponse) String() string {
	if len(c._rawJSON) > 0 {
		if value, err := core.StringifyJSON(c._rawJSON); err == nil {
			return value
		}
	}
	if value, err := core.StringifyJSON(c); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", c)
}

type DeleteProjectResponse struct {
	Data *Project `json:"data,omitempty" url:"data,omitempty"`

	extraProperties map[string]interface{}
	_rawJSON        json.RawMessage
}

func (d *DeleteProjectResponse) GetExtraProperties() map[string]interface{} {
	return d.extraProperties
}

func (d *DeleteProjectResponse) UnmarshalJSON(data []byte) error {
	type unmarshaler DeleteProjectResponse
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*d = DeleteProjectResponse(value)

	extraProperties, err := core.ExtractExtraProperties(data, *d)
	if err != nil {
		return err
	}
	d.extraProperties = extraProperties

	d._rawJSON = json.RawMessage(data)
	return nil
}

func (d *DeleteProjectResponse) String() string {
	if len(d._rawJSON) > 0 {
		if value, err := core.StringifyJSON(d._rawJSON); err == nil {
			return value
		}
	}
	if value, err := core.StringifyJSON(d); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", d)
}

type GetProjectEntitiesAcceptHeader string

const (
	GetProjectEntitiesAcceptHeaderJson GetProjectEntitiesAcceptHeader = "application/json"
	GetProjectEntitiesAcceptHeaderCsv  GetProjectEntitiesAcceptHeader = "text/csv"
	GetProjectEntitiesAcceptHeaderXslx GetProjectEntitiesAcceptHeader = "application/vnd.ms-excel"
)

func NewGetProjectEntitiesAcceptHeaderFromString(s string) (GetProjectEntitiesAcceptHeader, error) {
	switch s {
	case "application/json":
		return GetProjectEntitiesAcceptHeaderJson, nil
	case "text/csv":
		return GetProjectEntitiesAcceptHeaderCsv, nil
	case "application/vnd.ms-excel":
		return GetProjectEntitiesAcceptHeaderXslx, nil
	}
	var t GetProjectEntitiesAcceptHeader
	return "", fmt.Errorf("%s is not a valid %T", s, t)
}

func (g GetProjectEntitiesAcceptHeader) Ptr() *GetProjectEntitiesAcceptHeader {
	return &g
}

type GetProjectEntitiesResponse struct {
	Limit        int                  `json:"limit" url:"limit"`
	Size         *QualifiedCount      `json:"size,omitempty" url:"size,omitempty"`
	Next         *string              `json:"next,omitempty" url:"next,omitempty"`
	Prev         *string              `json:"prev,omitempty" url:"prev,omitempty"`
	Data         []*ProjectEntity     `json:"data,omitempty" url:"data,omitempty"`
	Aggregations *ProjectEntitiesAggs `json:"aggregations,omitempty" url:"aggregations,omitempty"`

	extraProperties map[string]interface{}
	_rawJSON        json.RawMessage
}

func (g *GetProjectEntitiesResponse) GetExtraProperties() map[string]interface{} {
	return g.extraProperties
}

func (g *GetProjectEntitiesResponse) UnmarshalJSON(data []byte) error {
	type unmarshaler GetProjectEntitiesResponse
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*g = GetProjectEntitiesResponse(value)

	extraProperties, err := core.ExtractExtraProperties(data, *g)
	if err != nil {
		return err
	}
	g.extraProperties = extraProperties

	g._rawJSON = json.RawMessage(data)
	return nil
}

func (g *GetProjectEntitiesResponse) String() string {
	if len(g._rawJSON) > 0 {
		if value, err := core.StringifyJSON(g._rawJSON); err == nil {
			return value
		}
	}
	if value, err := core.StringifyJSON(g); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", g)
}

type GetProjectsResponse struct {
	Next  *string               `json:"next,omitempty" url:"next,omitempty"`
	Prev  *string               `json:"prev,omitempty" url:"prev,omitempty"`
	First *bool                 `json:"first,omitempty" url:"first,omitempty"`
	Last  *bool                 `json:"last,omitempty" url:"last,omitempty"`
	Limit int                   `json:"limit" url:"limit"`
	Data  []*ProjectWithMembers `json:"data,omitempty" url:"data,omitempty"`

	extraProperties map[string]interface{}
	_rawJSON        json.RawMessage
}

func (g *GetProjectsResponse) GetExtraProperties() map[string]interface{} {
	return g.extraProperties
}

func (g *GetProjectsResponse) UnmarshalJSON(data []byte) error {
	type unmarshaler GetProjectsResponse
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*g = GetProjectsResponse(value)

	extraProperties, err := core.ExtractExtraProperties(data, *g)
	if err != nil {
		return err
	}
	g.extraProperties = extraProperties

	g._rawJSON = json.RawMessage(data)
	return nil
}

func (g *GetProjectsResponse) String() string {
	if len(g._rawJSON) > 0 {
		if value, err := core.StringifyJSON(g._rawJSON); err == nil {
			return value
		}
	}
	if value, err := core.StringifyJSON(g); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", g)
}

// Aggregations for entities in a project. Possible values are - hit_count Cardinality of unique entities. - country Count of entities per country. - upstream_country Count of entities per upstream country. - upstream_country_tiers Count of entities per upstream country, by tier. - upstream_risk Count of entities per upstream risk factor. - upstream_risk_tiers Count of entities per upstream risk factor, by tier. - source Count of entities per source. - business_purpose Count of entities per business purpose. - receiver_of Total number of shipments received by entities. - shipper_of Total number of shipments shipped by entities. - received_hs_codes Count of entities and shipments received per HS code. - shipped_hs_codes Count of entities and shipments shipped per HS code. - location Count of entities per grid cell within the specified `bounds` filter. Each cell corresponds to a [map tile](https://en.wikipedia.org/wiki/Tiled_web_map) as used by many online map sites. Each cell is labeled using a "{zoom}/{x}/{y}" format, where zoom is an automatically-selected precision. To use this aggregation, both `filters=bounds` and `geo_facets=true` query parameters must be provided. - <risk> where <risk> is a [risk factor](/sayari-library/ontology/risk-factors) ID. Count of entities per risk factor.
type ProjectEntitiesAggsDefinition = string

type ProjectEntitiesFilter struct {
	// Filter by [risk factor](/sayari-library/ontology/risk-factors) ID.
	Risk []Risk `json:"risk,omitempty" url:"risk,omitempty"`
	// Filter by upstream (supply chain) [risk factor](/sayari-library/ontology/risk-factors) ID.
	UpstreamRisk []Risk `json:"upstream_risk,omitempty" url:"upstream_risk,omitempty"`
	// Filter by upstream (supply chain) tiers that has one or more risks
	UpstreamRiskTiers []UpstreamTiers `json:"upstream_risk_tiers,omitempty" url:"upstream_risk_tiers,omitempty"`
	// Filter by [country](/sayari-library/ontology/enumerated-types#country).
	Country []Country `json:"country,omitempty" url:"country,omitempty"`
	// Filter by upstream (supply chain) [country](/sayari-library/ontology/enumerated-types#country).
	UpstreamCountry []Country `json:"upstream_country,omitempty" url:"upstream_country,omitempty"`
	// Filter by upstream (supply chain) tiers that has one or more countries
	UpstreamCountryTiers []UpstreamTiers `json:"upstream_country_tiers,omitempty" url:"upstream_country_tiers,omitempty"`
	// Filter by HS code, HS code description, or business description.
	BusinessPurpose []string `json:"business_purpose,omitempty" url:"business_purpose,omitempty"`
	// Filter by entity label with fuzzy matching.
	LabelFuzzy []string `json:"label.fuzzy,omitempty" url:"label.fuzzy,omitempty"`
	// Filter by entity city with fuzzy matching.
	CityFuzzy []string `json:"city.fuzzy,omitempty" url:"city.fuzzy,omitempty"`
	// Filter by entity address state with fuzzy matching.
	StateFuzzy []string `json:"state.fuzzy,omitempty" url:"state.fuzzy,omitempty"`
	// Filter by entity identifier attributes with fuzzy matching.
	IdentifierFuzzy []string `json:"identifier.fuzzy,omitempty" url:"identifier.fuzzy,omitempty"`
	// Filter by entity source ID.
	SourceExact []string `json:"source.exact,omitempty" url:"source.exact,omitempty"`
	// Filter by entity [company status](/sayari-library/ontology/enumerated-types#company-status).
	StatusExact []CompanyStatus `json:"status.exact,omitempty" url:"status.exact,omitempty"`
	// Filter by a geographical bounding box. The value is a pipe-delimited set of four values representing the top, left, bottom, and right sides of the bounding box, in that order. The pipes should be URL-encoded as `%7C`. The top coordinate must greater than the bottom coordinate, and the left coordinate must be less than the right coordinate. A sample is `55.680357237879136|-71.53607290158526|41.10876347746233|-40.963927098414736`
	Bounds *string `json:"bounds,omitempty" url:"bounds,omitempty"`
	// <Warning>This property is in beta and is subject to change. It is provided for early access and testing purposes only.</Warning> custom user key/value pairs (key must be prefixed with "custom\_" and value must be "string" type)
	CustomFieldName []string `json:"custom_{field name},omitempty" url:"custom_{field name},omitempty"`

	extraProperties map[string]interface{}
	_rawJSON        json.RawMessage
}

func (p *ProjectEntitiesFilter) GetExtraProperties() map[string]interface{} {
	return p.extraProperties
}

func (p *ProjectEntitiesFilter) UnmarshalJSON(data []byte) error {
	type unmarshaler ProjectEntitiesFilter
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*p = ProjectEntitiesFilter(value)

	extraProperties, err := core.ExtractExtraProperties(data, *p)
	if err != nil {
		return err
	}
	p.extraProperties = extraProperties

	p._rawJSON = json.RawMessage(data)
	return nil
}

func (p *ProjectEntitiesFilter) String() string {
	if len(p._rawJSON) > 0 {
		if value, err := core.StringifyJSON(p._rawJSON); err == nil {
			return value
		}
	}
	if value, err := core.StringifyJSON(p); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", p)
}

// Defines a sort order on a field, either ascending or descending. The value should begin with a '-' to indicate a descending sort, followed by a field name to sort on.
type SortField string

const (
	// The date the entity was saved to the project, ascending.
	SortFieldCreatedAsc SortField = "created"
	// The date the entity was saved to the project, descending.
	SortFieldCreatedDesc SortField = "-created"
	// The unique identifier of the saved entity within the project, e.g. `12200`, ascending.
	SortFieldIdAsc SortField = "saved_resource_id"
	// The unique identifier of the saved entity within the project, e.g. `12200`, descending.
	SortFieldIdDesc SortField = "-saved_resource_id"
	// The unique identifier of the entity, e.g. `pLH5fpfZoWTiS1z8ieSTDQ`, ascending.
	SortFieldEntityIdAsc SortField = "entity_id"
	// The unique identifier of the entity, e.g. `pLH5fpfZoWTiS1z8ieSTDQ`, descending.
	SortFieldEntityIdDesc SortField = "-entity_id"
	// The [country](/sayari-library/ontology/enumerated-types#country) of the entity, ascending.
	SortFieldCountryAsc SortField = "country"
	// The [country](/sayari-library/ontology/enumerated-types#country) of the entity, descending.
	SortFieldCountryDesc SortField = "-country"
	// The most recent [company status](/sayari-library/ontology/enumerated-types#company-status) of the entity, ascending.
	SortFieldStatusAsc SortField = "latest_status"
	// The most recent [company status](/sayari-library/ontology/enumerated-types#company-status) of the entity, descending.
	SortFieldStatusDesc SortField = "-latest_status"
	// The label (display name) of the entity, ascending.
	SortFieldLabelAsc SortField = "label"
	// The label (display name) of the entity, descending.
	SortFieldLabelDesc SortField = "-label"
	// <Warning>This sorting option is in beta and is subject to change. It is provided for early access and testing purposes only.</Warning> One of the custom fields provided by the user, ascending.
	SortFieldCustomFieldsAsc SortField = "custom_{field name}"
	// <Warning>This sorting option is in beta and is subject to change. It is provided for early access and testing purposes only.</Warning> One of the custom fields provided by the user, descending.
	SortFieldCustomFieldsDesc SortField = "-custom_{field name}"
	// The number of shipments the entity has received, ascending.
	SortFieldReceiverOfAcc SortField = "receiver_of"
	// The number of shipments the entity has received, descending.
	SortFieldReceiverOfDesc SortField = "-receiver_of"
	// The number of shipments the entity has shipped, ascending.
	SortFieldShipperOfAsc SortField = "shipper_of"
	// The number of shipments the entity has shipped, descending.
	SortFieldShipperOfDesc SortField = "-shipper_of"
	// The number of upstream entities in the supply chain of the entity, ascending.
	SortFieldUpstreamEntitiesAsc SortField = "upstream_entities"
	// The number of upstream entities in the supply chain of the entity, descending.
	SortFieldUpstreamEntitiesDesc SortField = "-upstream_entities"
)

func NewSortFieldFromString(s string) (SortField, error) {
	switch s {
	case "created":
		return SortFieldCreatedAsc, nil
	case "-created":
		return SortFieldCreatedDesc, nil
	case "saved_resource_id":
		return SortFieldIdAsc, nil
	case "-saved_resource_id":
		return SortFieldIdDesc, nil
	case "entity_id":
		return SortFieldEntityIdAsc, nil
	case "-entity_id":
		return SortFieldEntityIdDesc, nil
	case "country":
		return SortFieldCountryAsc, nil
	case "-country":
		return SortFieldCountryDesc, nil
	case "latest_status":
		return SortFieldStatusAsc, nil
	case "-latest_status":
		return SortFieldStatusDesc, nil
	case "label":
		return SortFieldLabelAsc, nil
	case "-label":
		return SortFieldLabelDesc, nil
	case "custom_{field name}":
		return SortFieldCustomFieldsAsc, nil
	case "-custom_{field name}":
		return SortFieldCustomFieldsDesc, nil
	case "receiver_of":
		return SortFieldReceiverOfAcc, nil
	case "-receiver_of":
		return SortFieldReceiverOfDesc, nil
	case "shipper_of":
		return SortFieldShipperOfAsc, nil
	case "-shipper_of":
		return SortFieldShipperOfDesc, nil
	case "upstream_entities":
		return SortFieldUpstreamEntitiesAsc, nil
	case "-upstream_entities":
		return SortFieldUpstreamEntitiesDesc, nil
	}
	var t SortField
	return "", fmt.Errorf("%s is not a valid %T", s, t)
}

func (s SortField) Ptr() *SortField {
	return &s
}
