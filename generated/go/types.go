// This file was auto-generated by Fern from our API Definition.

package api

import (
	json "encoding/json"
	fmt "fmt"
)

// The bearer token you will pass in to subsequent API calls to authenticate.
type AccessToken = string

// Tells you how long (in seconds) until your bearer token expires.
type ExpiresIn = int

// Will always be "Bearer"
type TokenType = string

type PaginatedResponse struct {
	Limit int       `json:"limit"`
	Size  *SizeInfo `json:"size,omitempty"`
}

type SizeInfo struct {
	Count     int    `json:"count"`
	Qualifier string `json:"qualifier"`
}

type AdditionalInformationData struct {
	Record      []string                         `json:"record,omitempty"`
	RecordCount int                              `json:"record_count"`
	Properties  *AdditionalInformationProperties `json:"properties,omitempty"`
}

type AdditionalInformationInfo struct {
	Limit int                          `json:"limit"`
	Size  *SizeInfo                    `json:"size,omitempty"`
	Data  []*AdditionalInformationData `json:"data,omitempty"`
}

type AdditionalInformationProperties struct {
	Type  *string `json:"type,omitempty"`
	Value *string `json:"value,omitempty"`
}

type AddressData struct {
	Record      []string           `json:"record,omitempty"`
	RecordCount int                `json:"record_count"`
	Properties  *AddressProperties `json:"properties,omitempty"`
}

type AddressInfo struct {
	Limit int            `json:"limit"`
	Size  *SizeInfo      `json:"size,omitempty"`
	Data  []*AddressData `json:"data,omitempty"`
}

type AddressProperties struct {
	Building       *string      `json:"building,omitempty"`
	Category       *string      `json:"category,omitempty"`
	City           *string      `json:"city,omitempty"`
	CityDistrict   *string      `json:"city_district,omitempty"`
	Country        *string      `json:"country,omitempty"`
	CountryRegion  *string      `json:"country_region,omitempty"`
	Entrance       *string      `json:"entrance,omitempty"`
	House          *string      `json:"house,omitempty"`
	HouseNumber    *string      `json:"house_number,omitempty"`
	Island         *string      `json:"island,omitempty"`
	Language       *Language    `json:"language,omitempty"`
	Level          *string      `json:"level,omitempty"`
	MetroStation   *string      `json:"metro_station,omitempty"`
	Near           *string      `json:"near,omitempty"`
	PoBox          *string      `json:"po_box,omitempty"`
	Postcode       *string      `json:"postcode,omitempty"`
	PrecisionCode  *string      `json:"precision_code,omitempty"`
	Road           *string      `json:"road,omitempty"`
	Staircase      *string      `json:"staircase,omitempty"`
	State          *string      `json:"state,omitempty"`
	StateDistrict  *string      `json:"state_district,omitempty"`
	Suburb         *string      `json:"suburb,omitempty"`
	Translated     *string      `json:"translated,omitempty"`
	Transliterated *string      `json:"transliterated,omitempty"`
	Type           *AddressType `json:"type,omitempty"`
	Unit           *string      `json:"unit,omitempty"`
	Value          *string      `json:"value,omitempty"`
	WorldRegion    *string      `json:"world_region,omitempty"`
	X              *float64     `json:"x,omitempty"`
	Y              *float64     `json:"y,omitempty"`
}

type AddressType string

const (
	AddressTypeArrival    AddressType = "arrival"
	AddressTypeDeparture  AddressType = "departure"
	AddressTypeMailing    AddressType = "mailing"
	AddressTypePhysical   AddressType = "physical"
	AddressTypeRegistered AddressType = "registered"
	AddressTypeBusiness   AddressType = "business"
)

func NewAddressTypeFromString(s string) (AddressType, error) {
	switch s {
	case "arrival":
		return AddressTypeArrival, nil
	case "departure":
		return AddressTypeDeparture, nil
	case "mailing":
		return AddressTypeMailing, nil
	case "physical":
		return AddressTypePhysical, nil
	case "registered":
		return AddressTypeRegistered, nil
	case "business":
		return AddressTypeBusiness, nil
	}
	var t AddressType
	return "", fmt.Errorf("%s is not a valid %T", s, t)
}

func (a AddressType) Ptr() *AddressType {
	return &a
}

type AttributeData struct {
	Record      []string `json:"record,omitempty"`
	RecordCount int      `json:"record_count"`
}

type AttributeDetails struct {
	AdditionalInformation *AdditionalInformationInfo `json:"additional_information,omitempty"`
	Address               *AddressInfo               `json:"address,omitempty"`
	BusinessPurpose       *BusinessPurposeInfo       `json:"business_purpose,omitempty"`
	CompanyType           *CompanyTypeInfo           `json:"company_type,omitempty"`
	Contact               *ContactInfo               `json:"contact,omitempty"`
	Country               *CountryInfo               `json:"country,omitempty"`
	DateOfBirth           *DateOfBirthInfo           `json:"date_of_birth,omitempty"`
	Finances              *FinancesInfo              `json:"finances,omitempty"`
	Financials            *FinancialsInfo            `json:"financials,omitempty"`
	Gender                *GenderInfo                `json:"gender,omitempty"`
	Generic               *GenericInfo               `json:"generic,omitempty"`
	Identifier            *IdentifierInfo            `json:"identifier,omitempty"`
	Measurement           *MeasurementInfo           `json:"measurement,omitempty"`
	MonetaryValue         *MonetaryValueInfo         `json:"monetary_value,omitempty"`
	Name                  *NameInfo                  `json:"name,omitempty"`
	PersonStatus          *PersonStatusInfo          `json:"person_status,omitempty"`
	Position              *PositionInfo              `json:"position,omitempty"`
	RiskIntelligence      *RiskIntelligenceInfo      `json:"risk_intelligence,omitempty"`
	Shares                *SharesInfo                `json:"shares,omitempty"`
	Status                *StatusInfo                `json:"status,omitempty"`
	TranslatedName        *TranslatedNameInfo        `json:"translated_name,omitempty"`
	WeakIdentifier        *WeakIdentifierInfo        `json:"weak_identifier,omitempty"`
}

type Attributes string

const (
	AttributesRiskIntelligence      Attributes = "risk_intelligence"
	AttributesCountry               Attributes = "country"
	AttributesWeakIdentifier        Attributes = "weak_identifier"
	AttributesGeneric               Attributes = "generic"
	AttributesStatus                Attributes = "status"
	AttributesShares                Attributes = "shares"
	AttributesName                  Attributes = "name"
	AttributesContact               Attributes = "contact"
	AttributesPersonStatus          Attributes = "person_status"
	AttributesFinancials            Attributes = "financials"
	AttributesAdditionalInformation Attributes = "additional_information"
	AttributesFinances              Attributes = "finances"
	AttributesAddress               Attributes = "address"
	AttributesMonetaryValue         Attributes = "monetary_value"
	AttributesCompanyType           Attributes = "company_type"
	AttributesGender                Attributes = "gender"
	AttributesTranslatedName        Attributes = "translated_name"
	AttributesDateOfBirth           Attributes = "date_of_birth"
	AttributesMeasurement           Attributes = "measurement"
	AttributesIdentifier            Attributes = "identifier"
	AttributesPosition              Attributes = "position"
	AttributesBusinessPurpose       Attributes = "business_purpose"
)

func NewAttributesFromString(s string) (Attributes, error) {
	switch s {
	case "risk_intelligence":
		return AttributesRiskIntelligence, nil
	case "country":
		return AttributesCountry, nil
	case "weak_identifier":
		return AttributesWeakIdentifier, nil
	case "generic":
		return AttributesGeneric, nil
	case "status":
		return AttributesStatus, nil
	case "shares":
		return AttributesShares, nil
	case "name":
		return AttributesName, nil
	case "contact":
		return AttributesContact, nil
	case "person_status":
		return AttributesPersonStatus, nil
	case "financials":
		return AttributesFinancials, nil
	case "additional_information":
		return AttributesAdditionalInformation, nil
	case "finances":
		return AttributesFinances, nil
	case "address":
		return AttributesAddress, nil
	case "monetary_value":
		return AttributesMonetaryValue, nil
	case "company_type":
		return AttributesCompanyType, nil
	case "gender":
		return AttributesGender, nil
	case "translated_name":
		return AttributesTranslatedName, nil
	case "date_of_birth":
		return AttributesDateOfBirth, nil
	case "measurement":
		return AttributesMeasurement, nil
	case "identifier":
		return AttributesIdentifier, nil
	case "position":
		return AttributesPosition, nil
	case "business_purpose":
		return AttributesBusinessPurpose, nil
	}
	var t Attributes
	return "", fmt.Errorf("%s is not a valid %T", s, t)
}

func (a Attributes) Ptr() *Attributes {
	return &a
}

type BothIdentifierTypes struct {
	typeName           string
	IdentifierType     IdentifierType
	WeakIdentifierType WeakIdentifierType
}

func NewBothIdentifierTypesFromIdentifierType(value IdentifierType) *BothIdentifierTypes {
	return &BothIdentifierTypes{typeName: "identifierType", IdentifierType: value}
}

func NewBothIdentifierTypesFromWeakIdentifierType(value WeakIdentifierType) *BothIdentifierTypes {
	return &BothIdentifierTypes{typeName: "weakIdentifierType", WeakIdentifierType: value}
}

func (b *BothIdentifierTypes) UnmarshalJSON(data []byte) error {
	var valueIdentifierType IdentifierType
	if err := json.Unmarshal(data, &valueIdentifierType); err == nil {
		b.typeName = "identifierType"
		b.IdentifierType = valueIdentifierType
		return nil
	}
	var valueWeakIdentifierType WeakIdentifierType
	if err := json.Unmarshal(data, &valueWeakIdentifierType); err == nil {
		b.typeName = "weakIdentifierType"
		b.WeakIdentifierType = valueWeakIdentifierType
		return nil
	}
	return fmt.Errorf("%s cannot be deserialized as a %T", data, b)
}

func (b BothIdentifierTypes) MarshalJSON() ([]byte, error) {
	switch b.typeName {
	default:
		return nil, fmt.Errorf("invalid type %s in %T", b.typeName, b)
	case "identifierType":
		return json.Marshal(b.IdentifierType)
	case "weakIdentifierType":
		return json.Marshal(b.WeakIdentifierType)
	}
}

type BothIdentifierTypesVisitor interface {
	VisitIdentifierType(IdentifierType) error
	VisitWeakIdentifierType(WeakIdentifierType) error
}

func (b *BothIdentifierTypes) Accept(visitor BothIdentifierTypesVisitor) error {
	switch b.typeName {
	default:
		return fmt.Errorf("invalid type %s in %T", b.typeName, b)
	case "identifierType":
		return visitor.VisitIdentifierType(b.IdentifierType)
	case "weakIdentifierType":
		return visitor.VisitWeakIdentifierType(b.WeakIdentifierType)
	}
}

type BusinessPurposeData struct {
	Record      []string                   `json:"record,omitempty"`
	RecordCount int                        `json:"record_count"`
	Properties  *BusinessPurposeProperties `json:"properties,omitempty"`
}

type BusinessPurposeInfo struct {
	Limit int                    `json:"limit"`
	Size  *SizeInfo              `json:"size,omitempty"`
	Data  []*BusinessPurposeData `json:"data,omitempty"`
}

type BusinessPurposeProperties struct {
	Code     *string                  `json:"code,omitempty"`
	Standard *BusinessPurposeStandard `json:"standard,omitempty"`
	Value    *string                  `json:"value,omitempty"`
}

type BusinessPurposeStandard string

const (
	BusinessPurposeStandardCnae2       BusinessPurposeStandard = "CNAE2"
	BusinessPurposeStandardIsic3       BusinessPurposeStandard = "ISIC3"
	BusinessPurposeStandardIsic31      BusinessPurposeStandard = "ISIC31"
	BusinessPurposeStandardIsic4       BusinessPurposeStandard = "ISIC4"
	BusinessPurposeStandardJsic13      BusinessPurposeStandard = "JSIC13"
	BusinessPurposeStandardKsic10      BusinessPurposeStandard = "KSIC10"
	BusinessPurposeStandardNace1       BusinessPurposeStandard = "NACE1"
	BusinessPurposeStandardNace2       BusinessPurposeStandard = "NACE2"
	BusinessPurposeStandardNaics2017   BusinessPurposeStandard = "NAICS2017"
	BusinessPurposeStandardSkd2002     BusinessPurposeStandard = "SKD2002"
	BusinessPurposeStandardSkd2008     BusinessPurposeStandard = "SKD2008"
	BusinessPurposeStandardTsic2552    BusinessPurposeStandard = "TSIC2552"
	BusinessPurposeStandardNacebel2003 BusinessPurposeStandard = "NACEBEL2003"
	BusinessPurposeStandardNacebel2008 BusinessPurposeStandard = "NACEBEL2008"
	BusinessPurposeStandardNaf1        BusinessPurposeStandard = "NAF1"
	BusinessPurposeStandardNaf2        BusinessPurposeStandard = "NAF2"
	BusinessPurposeStandardGced2011    BusinessPurposeStandard = "GCED2011"
	BusinessPurposeStandardScian2018   BusinessPurposeStandard = "SCIAN2018"
	BusinessPurposeStandardCcnae2021   BusinessPurposeStandard = "CCNAE2021"
	BusinessPurposeStandardCaem2005    BusinessPurposeStandard = "CAEM2005"
	BusinessPurposeStandardSbi2008     BusinessPurposeStandard = "SBI2008"
	BusinessPurposeStandardHs          BusinessPurposeStandard = "HS"
	BusinessPurposeStandardSic         BusinessPurposeStandard = "SIC"
	BusinessPurposeStandardSsic2020    BusinessPurposeStandard = "SSIC2020"
)

func NewBusinessPurposeStandardFromString(s string) (BusinessPurposeStandard, error) {
	switch s {
	case "CNAE2":
		return BusinessPurposeStandardCnae2, nil
	case "ISIC3":
		return BusinessPurposeStandardIsic3, nil
	case "ISIC31":
		return BusinessPurposeStandardIsic31, nil
	case "ISIC4":
		return BusinessPurposeStandardIsic4, nil
	case "JSIC13":
		return BusinessPurposeStandardJsic13, nil
	case "KSIC10":
		return BusinessPurposeStandardKsic10, nil
	case "NACE1":
		return BusinessPurposeStandardNace1, nil
	case "NACE2":
		return BusinessPurposeStandardNace2, nil
	case "NAICS2017":
		return BusinessPurposeStandardNaics2017, nil
	case "SKD2002":
		return BusinessPurposeStandardSkd2002, nil
	case "SKD2008":
		return BusinessPurposeStandardSkd2008, nil
	case "TSIC2552":
		return BusinessPurposeStandardTsic2552, nil
	case "NACEBEL2003":
		return BusinessPurposeStandardNacebel2003, nil
	case "NACEBEL2008":
		return BusinessPurposeStandardNacebel2008, nil
	case "NAF1":
		return BusinessPurposeStandardNaf1, nil
	case "NAF2":
		return BusinessPurposeStandardNaf2, nil
	case "GCED2011":
		return BusinessPurposeStandardGced2011, nil
	case "SCIAN2018":
		return BusinessPurposeStandardScian2018, nil
	case "CCNAE2021":
		return BusinessPurposeStandardCcnae2021, nil
	case "CAEM2005":
		return BusinessPurposeStandardCaem2005, nil
	case "SBI2008":
		return BusinessPurposeStandardSbi2008, nil
	case "HS":
		return BusinessPurposeStandardHs, nil
	case "SIC":
		return BusinessPurposeStandardSic, nil
	case "SSIC2020":
		return BusinessPurposeStandardSsic2020, nil
	}
	var t BusinessPurposeStandard
	return "", fmt.Errorf("%s is not a valid %T", s, t)
}

func (b BusinessPurposeStandard) Ptr() *BusinessPurposeStandard {
	return &b
}

type CompanyStatus string

const (
	CompanyStatusSeized               CompanyStatus = "seized"
	CompanyStatusInReceivership       CompanyStatus = "in_receivership"
	CompanyStatusRegistrationRevoked  CompanyStatus = "registration_revoked"
	CompanyStatusOpening              CompanyStatus = "opening"
	CompanyStatusDissolved            CompanyStatus = "dissolved"
	CompanyStatusActive               CompanyStatus = "active"
	CompanyStatusInactive             CompanyStatus = "inactive"
	CompanyStatusClosed               CompanyStatus = "closed"
	CompanyStatusClosing              CompanyStatus = "closing"
	CompanyStatusRegistered           CompanyStatus = "registered"
	CompanyStatusIncorporated         CompanyStatus = "incorporated"
	CompanyStatusUnderExternalControl CompanyStatus = "under_external_control"
	CompanyStatusExpired              CompanyStatus = "expired"
	CompanyStatusExpanded             CompanyStatus = "expanded"
	CompanyStatusTerminated           CompanyStatus = "terminated"
)

func NewCompanyStatusFromString(s string) (CompanyStatus, error) {
	switch s {
	case "seized":
		return CompanyStatusSeized, nil
	case "in_receivership":
		return CompanyStatusInReceivership, nil
	case "registration_revoked":
		return CompanyStatusRegistrationRevoked, nil
	case "opening":
		return CompanyStatusOpening, nil
	case "dissolved":
		return CompanyStatusDissolved, nil
	case "active":
		return CompanyStatusActive, nil
	case "inactive":
		return CompanyStatusInactive, nil
	case "closed":
		return CompanyStatusClosed, nil
	case "closing":
		return CompanyStatusClosing, nil
	case "registered":
		return CompanyStatusRegistered, nil
	case "incorporated":
		return CompanyStatusIncorporated, nil
	case "under_external_control":
		return CompanyStatusUnderExternalControl, nil
	case "expired":
		return CompanyStatusExpired, nil
	case "expanded":
		return CompanyStatusExpanded, nil
	case "terminated":
		return CompanyStatusTerminated, nil
	}
	var t CompanyStatus
	return "", fmt.Errorf("%s is not a valid %T", s, t)
}

func (c CompanyStatus) Ptr() *CompanyStatus {
	return &c
}

type CompanyTypeData struct {
	Record      []string               `json:"record,omitempty"`
	RecordCount int                    `json:"record_count"`
	Properties  *CompanyTypeProperties `json:"properties,omitempty"`
}

type CompanyTypeInfo struct {
	Limit int                `json:"limit"`
	Size  *SizeInfo          `json:"size,omitempty"`
	Data  []*CompanyTypeData `json:"data,omitempty"`
}

type CompanyTypeProperties struct {
	Value *string `json:"value,omitempty"`
}

type ContactData struct {
	Record      []string           `json:"record,omitempty"`
	RecordCount int                `json:"record_count"`
	Properties  *ContactProperties `json:"properties,omitempty"`
}

type ContactInfo struct {
	Limit int            `json:"limit"`
	Size  *SizeInfo      `json:"size,omitempty"`
	Data  []*ContactData `json:"data,omitempty"`
}

type ContactProperties struct {
	Type  *ContactType `json:"type,omitempty"`
	Value string       `json:"value"`
}

type ContactType string

const (
	ContactTypePhoneNumber ContactType = "phone_number"
	ContactTypeFax         ContactType = "fax"
	ContactTypeEmail       ContactType = "email"
	ContactTypeUrl         ContactType = "url"
)

func NewContactTypeFromString(s string) (ContactType, error) {
	switch s {
	case "phone_number":
		return ContactTypePhoneNumber, nil
	case "fax":
		return ContactTypeFax, nil
	case "email":
		return ContactTypeEmail, nil
	case "url":
		return ContactTypeUrl, nil
	}
	var t ContactType
	return "", fmt.Errorf("%s is not a valid %T", s, t)
}

func (c ContactType) Ptr() *ContactType {
	return &c
}

type Country string

const (
	CountryAbw Country = "ABW"
	CountryAfg Country = "AFG"
	CountryAgo Country = "AGO"
	CountryAia Country = "AIA"
	CountryAla Country = "ALA"
	CountryAlb Country = "ALB"
	CountryAnd Country = "AND"
	CountryAre Country = "ARE"
	CountryArg Country = "ARG"
	CountryArm Country = "ARM"
	CountryAsm Country = "ASM"
	CountryAta Country = "ATA"
	CountryAtf Country = "ATF"
	CountryAtg Country = "ATG"
	CountryAus Country = "AUS"
	CountryAut Country = "AUT"
	CountryAze Country = "AZE"
	CountryBdi Country = "BDI"
	CountryBel Country = "BEL"
	CountryBen Country = "BEN"
	CountryBfa Country = "BFA"
	CountryBgd Country = "BGD"
	CountryBgr Country = "BGR"
	CountryBhr Country = "BHR"
	CountryBhs Country = "BHS"
	CountryBih Country = "BIH"
	CountryBlm Country = "BLM"
	CountryShn Country = "SHN"
	CountryBlr Country = "BLR"
	CountryBlz Country = "BLZ"
	CountryBmu Country = "BMU"
	CountryBol Country = "BOL"
	CountryBes Country = "BES"
	CountryBra Country = "BRA"
	CountryBrb Country = "BRB"
	CountryBrn Country = "BRN"
	CountryBtn Country = "BTN"
	CountryBvt Country = "BVT"
	CountryBwa Country = "BWA"
	CountryCaf Country = "CAF"
	CountryCan Country = "CAN"
	CountryCck Country = "CCK"
	CountryChe Country = "CHE"
	CountryChl Country = "CHL"
	CountryChn Country = "CHN"
	CountryCiv Country = "CIV"
	CountryCmr Country = "CMR"
	CountryCod Country = "COD"
	CountryCog Country = "COG"
	CountryCok Country = "COK"
	CountryCol Country = "COL"
	CountryCom Country = "COM"
	CountryCpv Country = "CPV"
	CountryCri Country = "CRI"
	CountryCub Country = "CUB"
	CountryCuw Country = "CUW"
	CountryCxr Country = "CXR"
	CountryCym Country = "CYM"
	CountryCyp Country = "CYP"
	CountryCze Country = "CZE"
	CountryDeu Country = "DEU"
	CountryDji Country = "DJI"
	CountryDma Country = "DMA"
	CountryDnk Country = "DNK"
	CountryDom Country = "DOM"
	CountryDza Country = "DZA"
	CountryEcu Country = "ECU"
	CountryEgy Country = "EGY"
	CountryEri Country = "ERI"
	CountryEsh Country = "ESH"
	CountryEsp Country = "ESP"
	CountryEst Country = "EST"
	CountryEth Country = "ETH"
	CountryFin Country = "FIN"
	CountryFji Country = "FJI"
	CountryFlk Country = "FLK"
	CountryFra Country = "FRA"
	CountryFro Country = "FRO"
	CountryFsm Country = "FSM"
	CountryGab Country = "GAB"
	CountryGbr Country = "GBR"
	CountryGeo Country = "GEO"
	CountryGgy Country = "GGY"
	CountryGha Country = "GHA"
	CountryGib Country = "GIB"
	CountryGin Country = "GIN"
	CountryGlp Country = "GLP"
	CountryGmb Country = "GMB"
	CountryGnb Country = "GNB"
	CountryGnq Country = "GNQ"
	CountryGrc Country = "GRC"
	CountryGrd Country = "GRD"
	CountryGrl Country = "GRL"
	CountryGtm Country = "GTM"
	CountryGuf Country = "GUF"
	CountryGum Country = "GUM"
	CountryGuy Country = "GUY"
	CountryHkg Country = "HKG"
	CountryHmd Country = "HMD"
	CountryHnd Country = "HND"
	CountryHrv Country = "HRV"
	CountryHti Country = "HTI"
	CountryHun Country = "HUN"
	CountryIdn Country = "IDN"
	CountryImn Country = "IMN"
	CountryInd Country = "IND"
	CountryIot Country = "IOT"
	CountryIrl Country = "IRL"
	CountryIrn Country = "IRN"
	CountryIrq Country = "IRQ"
	CountryIsl Country = "ISL"
	CountryIsr Country = "ISR"
	CountryIta Country = "ITA"
	CountryJam Country = "JAM"
	CountryJey Country = "JEY"
	CountryJor Country = "JOR"
	CountryJpn Country = "JPN"
	CountryKaz Country = "KAZ"
	CountryKen Country = "KEN"
	CountryKgz Country = "KGZ"
	CountryKhm Country = "KHM"
	CountryKir Country = "KIR"
	CountryKna Country = "KNA"
	CountryKor Country = "KOR"
	CountryUnk Country = "UNK"
	CountryKwt Country = "KWT"
	CountryLao Country = "LAO"
	CountryLbn Country = "LBN"
	CountryLbr Country = "LBR"
	CountryLby Country = "LBY"
	CountryLca Country = "LCA"
	CountryLie Country = "LIE"
	CountryLka Country = "LKA"
	CountryLso Country = "LSO"
	CountryLtu Country = "LTU"
	CountryLux Country = "LUX"
	CountryLva Country = "LVA"
	CountryMac Country = "MAC"
	CountryMaf Country = "MAF"
	CountryMar Country = "MAR"
	CountryMco Country = "MCO"
	CountryMda Country = "MDA"
	CountryMdg Country = "MDG"
	CountryMdv Country = "MDV"
	CountryMex Country = "MEX"
	CountryMhl Country = "MHL"
	CountryMkd Country = "MKD"
	CountryMli Country = "MLI"
	CountryMlt Country = "MLT"
	CountryMmr Country = "MMR"
	CountryMne Country = "MNE"
	CountryMng Country = "MNG"
	CountryMnp Country = "MNP"
	CountryMoz Country = "MOZ"
	CountryMrt Country = "MRT"
	CountryMsr Country = "MSR"
	CountryMtq Country = "MTQ"
	CountryMus Country = "MUS"
	CountryMwi Country = "MWI"
	CountryMys Country = "MYS"
	CountryMyt Country = "MYT"
	CountryNam Country = "NAM"
	CountryNcl Country = "NCL"
	CountryNer Country = "NER"
	CountryNfk Country = "NFK"
	CountryNga Country = "NGA"
	CountryNic Country = "NIC"
	CountryNiu Country = "NIU"
	CountryNld Country = "NLD"
	CountryNor Country = "NOR"
	CountryNpl Country = "NPL"
	CountryNru Country = "NRU"
	CountryNzl Country = "NZL"
	CountryOmn Country = "OMN"
	CountryPak Country = "PAK"
	CountryPan Country = "PAN"
	CountryPcn Country = "PCN"
	CountryPer Country = "PER"
	CountryPhl Country = "PHL"
	CountryPlw Country = "PLW"
	CountryPng Country = "PNG"
	CountryPol Country = "POL"
	CountryPri Country = "PRI"
	CountryPrk Country = "PRK"
	CountryPrt Country = "PRT"
	CountryPry Country = "PRY"
	CountryPse Country = "PSE"
	CountryPyf Country = "PYF"
	CountryQat Country = "QAT"
	CountryReu Country = "REU"
	CountryRou Country = "ROU"
	CountryRus Country = "RUS"
	CountryRwa Country = "RWA"
	CountrySau Country = "SAU"
	CountrySdn Country = "SDN"
	CountrySen Country = "SEN"
	CountrySgp Country = "SGP"
	CountrySgs Country = "SGS"
	CountrySjm Country = "SJM"
	CountrySlb Country = "SLB"
	CountrySle Country = "SLE"
	CountrySlv Country = "SLV"
	CountrySmr Country = "SMR"
	CountrySom Country = "SOM"
	CountrySpm Country = "SPM"
	CountrySrb Country = "SRB"
	CountrySsd Country = "SSD"
	CountryStp Country = "STP"
	CountrySur Country = "SUR"
	CountrySvk Country = "SVK"
	CountrySvn Country = "SVN"
	CountrySwe Country = "SWE"
	CountrySwz Country = "SWZ"
	CountrySxm Country = "SXM"
	CountrySyc Country = "SYC"
	CountrySyr Country = "SYR"
	CountryTca Country = "TCA"
	CountryTcd Country = "TCD"
	CountryTgo Country = "TGO"
	CountryTha Country = "THA"
	CountryTjk Country = "TJK"
	CountryTkl Country = "TKL"
	CountryTkm Country = "TKM"
	CountryTls Country = "TLS"
	CountryTon Country = "TON"
	CountryTto Country = "TTO"
	CountryTun Country = "TUN"
	CountryTur Country = "TUR"
	CountryTuv Country = "TUV"
	CountryTwn Country = "TWN"
	CountryTza Country = "TZA"
	CountryUga Country = "UGA"
	CountryUkr Country = "UKR"
	CountryUmi Country = "UMI"
	CountryUry Country = "URY"
	CountryUsa Country = "USA"
	CountryUzb Country = "UZB"
	CountryVat Country = "VAT"
	CountryVct Country = "VCT"
	CountryVen Country = "VEN"
	CountryVgb Country = "VGB"
	CountryVir Country = "VIR"
	CountryVnm Country = "VNM"
	CountryVut Country = "VUT"
	CountryWlf Country = "WLF"
	CountryWsm Country = "WSM"
	CountryYem Country = "YEM"
	CountryZaf Country = "ZAF"
	CountryZmb Country = "ZMB"
	CountryZwe Country = "ZWE"
	CountryXxx Country = "XXX"
	CountryRks Country = "RKS"
)

func NewCountryFromString(s string) (Country, error) {
	switch s {
	case "ABW":
		return CountryAbw, nil
	case "AFG":
		return CountryAfg, nil
	case "AGO":
		return CountryAgo, nil
	case "AIA":
		return CountryAia, nil
	case "ALA":
		return CountryAla, nil
	case "ALB":
		return CountryAlb, nil
	case "AND":
		return CountryAnd, nil
	case "ARE":
		return CountryAre, nil
	case "ARG":
		return CountryArg, nil
	case "ARM":
		return CountryArm, nil
	case "ASM":
		return CountryAsm, nil
	case "ATA":
		return CountryAta, nil
	case "ATF":
		return CountryAtf, nil
	case "ATG":
		return CountryAtg, nil
	case "AUS":
		return CountryAus, nil
	case "AUT":
		return CountryAut, nil
	case "AZE":
		return CountryAze, nil
	case "BDI":
		return CountryBdi, nil
	case "BEL":
		return CountryBel, nil
	case "BEN":
		return CountryBen, nil
	case "BFA":
		return CountryBfa, nil
	case "BGD":
		return CountryBgd, nil
	case "BGR":
		return CountryBgr, nil
	case "BHR":
		return CountryBhr, nil
	case "BHS":
		return CountryBhs, nil
	case "BIH":
		return CountryBih, nil
	case "BLM":
		return CountryBlm, nil
	case "SHN":
		return CountryShn, nil
	case "BLR":
		return CountryBlr, nil
	case "BLZ":
		return CountryBlz, nil
	case "BMU":
		return CountryBmu, nil
	case "BOL":
		return CountryBol, nil
	case "BES":
		return CountryBes, nil
	case "BRA":
		return CountryBra, nil
	case "BRB":
		return CountryBrb, nil
	case "BRN":
		return CountryBrn, nil
	case "BTN":
		return CountryBtn, nil
	case "BVT":
		return CountryBvt, nil
	case "BWA":
		return CountryBwa, nil
	case "CAF":
		return CountryCaf, nil
	case "CAN":
		return CountryCan, nil
	case "CCK":
		return CountryCck, nil
	case "CHE":
		return CountryChe, nil
	case "CHL":
		return CountryChl, nil
	case "CHN":
		return CountryChn, nil
	case "CIV":
		return CountryCiv, nil
	case "CMR":
		return CountryCmr, nil
	case "COD":
		return CountryCod, nil
	case "COG":
		return CountryCog, nil
	case "COK":
		return CountryCok, nil
	case "COL":
		return CountryCol, nil
	case "COM":
		return CountryCom, nil
	case "CPV":
		return CountryCpv, nil
	case "CRI":
		return CountryCri, nil
	case "CUB":
		return CountryCub, nil
	case "CUW":
		return CountryCuw, nil
	case "CXR":
		return CountryCxr, nil
	case "CYM":
		return CountryCym, nil
	case "CYP":
		return CountryCyp, nil
	case "CZE":
		return CountryCze, nil
	case "DEU":
		return CountryDeu, nil
	case "DJI":
		return CountryDji, nil
	case "DMA":
		return CountryDma, nil
	case "DNK":
		return CountryDnk, nil
	case "DOM":
		return CountryDom, nil
	case "DZA":
		return CountryDza, nil
	case "ECU":
		return CountryEcu, nil
	case "EGY":
		return CountryEgy, nil
	case "ERI":
		return CountryEri, nil
	case "ESH":
		return CountryEsh, nil
	case "ESP":
		return CountryEsp, nil
	case "EST":
		return CountryEst, nil
	case "ETH":
		return CountryEth, nil
	case "FIN":
		return CountryFin, nil
	case "FJI":
		return CountryFji, nil
	case "FLK":
		return CountryFlk, nil
	case "FRA":
		return CountryFra, nil
	case "FRO":
		return CountryFro, nil
	case "FSM":
		return CountryFsm, nil
	case "GAB":
		return CountryGab, nil
	case "GBR":
		return CountryGbr, nil
	case "GEO":
		return CountryGeo, nil
	case "GGY":
		return CountryGgy, nil
	case "GHA":
		return CountryGha, nil
	case "GIB":
		return CountryGib, nil
	case "GIN":
		return CountryGin, nil
	case "GLP":
		return CountryGlp, nil
	case "GMB":
		return CountryGmb, nil
	case "GNB":
		return CountryGnb, nil
	case "GNQ":
		return CountryGnq, nil
	case "GRC":
		return CountryGrc, nil
	case "GRD":
		return CountryGrd, nil
	case "GRL":
		return CountryGrl, nil
	case "GTM":
		return CountryGtm, nil
	case "GUF":
		return CountryGuf, nil
	case "GUM":
		return CountryGum, nil
	case "GUY":
		return CountryGuy, nil
	case "HKG":
		return CountryHkg, nil
	case "HMD":
		return CountryHmd, nil
	case "HND":
		return CountryHnd, nil
	case "HRV":
		return CountryHrv, nil
	case "HTI":
		return CountryHti, nil
	case "HUN":
		return CountryHun, nil
	case "IDN":
		return CountryIdn, nil
	case "IMN":
		return CountryImn, nil
	case "IND":
		return CountryInd, nil
	case "IOT":
		return CountryIot, nil
	case "IRL":
		return CountryIrl, nil
	case "IRN":
		return CountryIrn, nil
	case "IRQ":
		return CountryIrq, nil
	case "ISL":
		return CountryIsl, nil
	case "ISR":
		return CountryIsr, nil
	case "ITA":
		return CountryIta, nil
	case "JAM":
		return CountryJam, nil
	case "JEY":
		return CountryJey, nil
	case "JOR":
		return CountryJor, nil
	case "JPN":
		return CountryJpn, nil
	case "KAZ":
		return CountryKaz, nil
	case "KEN":
		return CountryKen, nil
	case "KGZ":
		return CountryKgz, nil
	case "KHM":
		return CountryKhm, nil
	case "KIR":
		return CountryKir, nil
	case "KNA":
		return CountryKna, nil
	case "KOR":
		return CountryKor, nil
	case "UNK":
		return CountryUnk, nil
	case "KWT":
		return CountryKwt, nil
	case "LAO":
		return CountryLao, nil
	case "LBN":
		return CountryLbn, nil
	case "LBR":
		return CountryLbr, nil
	case "LBY":
		return CountryLby, nil
	case "LCA":
		return CountryLca, nil
	case "LIE":
		return CountryLie, nil
	case "LKA":
		return CountryLka, nil
	case "LSO":
		return CountryLso, nil
	case "LTU":
		return CountryLtu, nil
	case "LUX":
		return CountryLux, nil
	case "LVA":
		return CountryLva, nil
	case "MAC":
		return CountryMac, nil
	case "MAF":
		return CountryMaf, nil
	case "MAR":
		return CountryMar, nil
	case "MCO":
		return CountryMco, nil
	case "MDA":
		return CountryMda, nil
	case "MDG":
		return CountryMdg, nil
	case "MDV":
		return CountryMdv, nil
	case "MEX":
		return CountryMex, nil
	case "MHL":
		return CountryMhl, nil
	case "MKD":
		return CountryMkd, nil
	case "MLI":
		return CountryMli, nil
	case "MLT":
		return CountryMlt, nil
	case "MMR":
		return CountryMmr, nil
	case "MNE":
		return CountryMne, nil
	case "MNG":
		return CountryMng, nil
	case "MNP":
		return CountryMnp, nil
	case "MOZ":
		return CountryMoz, nil
	case "MRT":
		return CountryMrt, nil
	case "MSR":
		return CountryMsr, nil
	case "MTQ":
		return CountryMtq, nil
	case "MUS":
		return CountryMus, nil
	case "MWI":
		return CountryMwi, nil
	case "MYS":
		return CountryMys, nil
	case "MYT":
		return CountryMyt, nil
	case "NAM":
		return CountryNam, nil
	case "NCL":
		return CountryNcl, nil
	case "NER":
		return CountryNer, nil
	case "NFK":
		return CountryNfk, nil
	case "NGA":
		return CountryNga, nil
	case "NIC":
		return CountryNic, nil
	case "NIU":
		return CountryNiu, nil
	case "NLD":
		return CountryNld, nil
	case "NOR":
		return CountryNor, nil
	case "NPL":
		return CountryNpl, nil
	case "NRU":
		return CountryNru, nil
	case "NZL":
		return CountryNzl, nil
	case "OMN":
		return CountryOmn, nil
	case "PAK":
		return CountryPak, nil
	case "PAN":
		return CountryPan, nil
	case "PCN":
		return CountryPcn, nil
	case "PER":
		return CountryPer, nil
	case "PHL":
		return CountryPhl, nil
	case "PLW":
		return CountryPlw, nil
	case "PNG":
		return CountryPng, nil
	case "POL":
		return CountryPol, nil
	case "PRI":
		return CountryPri, nil
	case "PRK":
		return CountryPrk, nil
	case "PRT":
		return CountryPrt, nil
	case "PRY":
		return CountryPry, nil
	case "PSE":
		return CountryPse, nil
	case "PYF":
		return CountryPyf, nil
	case "QAT":
		return CountryQat, nil
	case "REU":
		return CountryReu, nil
	case "ROU":
		return CountryRou, nil
	case "RUS":
		return CountryRus, nil
	case "RWA":
		return CountryRwa, nil
	case "SAU":
		return CountrySau, nil
	case "SDN":
		return CountrySdn, nil
	case "SEN":
		return CountrySen, nil
	case "SGP":
		return CountrySgp, nil
	case "SGS":
		return CountrySgs, nil
	case "SJM":
		return CountrySjm, nil
	case "SLB":
		return CountrySlb, nil
	case "SLE":
		return CountrySle, nil
	case "SLV":
		return CountrySlv, nil
	case "SMR":
		return CountrySmr, nil
	case "SOM":
		return CountrySom, nil
	case "SPM":
		return CountrySpm, nil
	case "SRB":
		return CountrySrb, nil
	case "SSD":
		return CountrySsd, nil
	case "STP":
		return CountryStp, nil
	case "SUR":
		return CountrySur, nil
	case "SVK":
		return CountrySvk, nil
	case "SVN":
		return CountrySvn, nil
	case "SWE":
		return CountrySwe, nil
	case "SWZ":
		return CountrySwz, nil
	case "SXM":
		return CountrySxm, nil
	case "SYC":
		return CountrySyc, nil
	case "SYR":
		return CountrySyr, nil
	case "TCA":
		return CountryTca, nil
	case "TCD":
		return CountryTcd, nil
	case "TGO":
		return CountryTgo, nil
	case "THA":
		return CountryTha, nil
	case "TJK":
		return CountryTjk, nil
	case "TKL":
		return CountryTkl, nil
	case "TKM":
		return CountryTkm, nil
	case "TLS":
		return CountryTls, nil
	case "TON":
		return CountryTon, nil
	case "TTO":
		return CountryTto, nil
	case "TUN":
		return CountryTun, nil
	case "TUR":
		return CountryTur, nil
	case "TUV":
		return CountryTuv, nil
	case "TWN":
		return CountryTwn, nil
	case "TZA":
		return CountryTza, nil
	case "UGA":
		return CountryUga, nil
	case "UKR":
		return CountryUkr, nil
	case "UMI":
		return CountryUmi, nil
	case "URY":
		return CountryUry, nil
	case "USA":
		return CountryUsa, nil
	case "UZB":
		return CountryUzb, nil
	case "VAT":
		return CountryVat, nil
	case "VCT":
		return CountryVct, nil
	case "VEN":
		return CountryVen, nil
	case "VGB":
		return CountryVgb, nil
	case "VIR":
		return CountryVir, nil
	case "VNM":
		return CountryVnm, nil
	case "VUT":
		return CountryVut, nil
	case "WLF":
		return CountryWlf, nil
	case "WSM":
		return CountryWsm, nil
	case "YEM":
		return CountryYem, nil
	case "ZAF":
		return CountryZaf, nil
	case "ZMB":
		return CountryZmb, nil
	case "ZWE":
		return CountryZwe, nil
	case "XXX":
		return CountryXxx, nil
	case "RKS":
		return CountryRks, nil
	}
	var t Country
	return "", fmt.Errorf("%s is not a valid %T", s, t)
}

func (c Country) Ptr() *Country {
	return &c
}

type CountryContext string

const (
	CountryContextCitizenship       CountryContext = "citizenship"
	CountryContextIncorporation     CountryContext = "incorporation"
	CountryContextResidence         CountryContext = "residence"
	CountryContextNationality       CountryContext = "nationality"
	CountryContextAddress           CountryContext = "address"
	CountryContextVesselFlag        CountryContext = "vessel_flag"
	CountryContextDomicile          CountryContext = "domicile"
	CountryContextShipmentDeparture CountryContext = "shipment_departure"
	CountryContextShipmentArrival   CountryContext = "shipment_arrival"
	CountryContextShipmentTransit   CountryContext = "shipment_transit"
	CountryContextActivityIn        CountryContext = "activity_in"
	CountryContextMentionedIn       CountryContext = "mentioned_in"
)

func NewCountryContextFromString(s string) (CountryContext, error) {
	switch s {
	case "citizenship":
		return CountryContextCitizenship, nil
	case "incorporation":
		return CountryContextIncorporation, nil
	case "residence":
		return CountryContextResidence, nil
	case "nationality":
		return CountryContextNationality, nil
	case "address":
		return CountryContextAddress, nil
	case "vessel_flag":
		return CountryContextVesselFlag, nil
	case "domicile":
		return CountryContextDomicile, nil
	case "shipment_departure":
		return CountryContextShipmentDeparture, nil
	case "shipment_arrival":
		return CountryContextShipmentArrival, nil
	case "shipment_transit":
		return CountryContextShipmentTransit, nil
	case "activity_in":
		return CountryContextActivityIn, nil
	case "mentioned_in":
		return CountryContextMentionedIn, nil
	}
	var t CountryContext
	return "", fmt.Errorf("%s is not a valid %T", s, t)
}

func (c CountryContext) Ptr() *CountryContext {
	return &c
}

type CountryData struct {
	Record      []string           `json:"record,omitempty"`
	RecordCount int                `json:"record_count"`
	Properties  *CountryProperties `json:"properties,omitempty"`
}

type CountryInfo struct {
	Limit int            `json:"limit"`
	Size  *SizeInfo      `json:"size,omitempty"`
	Data  []*CountryData `json:"data,omitempty"`
}

type CountryProperties struct {
	Context *CountryContext `json:"context,omitempty"`
	State   *string         `json:"state,omitempty"`
	Value   Country         `json:"value,omitempty"`
}

type Currency string

const (
	CurrencyAfn Currency = "AFN"
	CurrencyEur Currency = "EUR"
	CurrencyAll Currency = "ALL"
	CurrencyDzd Currency = "DZD"
	CurrencyUsd Currency = "USD"
	CurrencyAoa Currency = "AOA"
	CurrencyXcd Currency = "XCD"
	CurrencyArs Currency = "ARS"
	CurrencyAmd Currency = "AMD"
	CurrencyAwg Currency = "AWG"
	CurrencyAud Currency = "AUD"
	CurrencyAzn Currency = "AZN"
	CurrencyBsd Currency = "BSD"
	CurrencyBhd Currency = "BHD"
	CurrencyBdt Currency = "BDT"
	CurrencyBbd Currency = "BBD"
	CurrencyByn Currency = "BYN"
	CurrencyBzd Currency = "BZD"
	CurrencyXof Currency = "XOF"
	CurrencyBmd Currency = "BMD"
	CurrencyInr Currency = "INR"
	CurrencyBtn Currency = "BTN"
	CurrencyBob Currency = "BOB"
	CurrencyBov Currency = "BOV"
	CurrencyBam Currency = "BAM"
	CurrencyBwp Currency = "BWP"
	CurrencyNok Currency = "NOK"
	CurrencyBrl Currency = "BRL"
	CurrencyBnd Currency = "BND"
	CurrencyBgn Currency = "BGN"
	CurrencyBif Currency = "BIF"
	CurrencyCve Currency = "CVE"
	CurrencyKhr Currency = "KHR"
	CurrencyXaf Currency = "XAF"
	CurrencyCad Currency = "CAD"
	CurrencyKyd Currency = "KYD"
	CurrencyClp Currency = "CLP"
	CurrencyClf Currency = "CLF"
	CurrencyCny Currency = "CNY"
	CurrencyCop Currency = "COP"
	CurrencyCou Currency = "COU"
	CurrencyKmf Currency = "KMF"
	CurrencyCdf Currency = "CDF"
	CurrencyNzd Currency = "NZD"
	CurrencyCrc Currency = "CRC"
	CurrencyHrk Currency = "HRK"
	CurrencyCup Currency = "CUP"
	CurrencyCuc Currency = "CUC"
	CurrencyAng Currency = "ANG"
	CurrencyCzk Currency = "CZK"
	CurrencyDkk Currency = "DKK"
	CurrencyDjf Currency = "DJF"
	CurrencyDop Currency = "DOP"
	CurrencyEgp Currency = "EGP"
	CurrencySvc Currency = "SVC"
	CurrencyErn Currency = "ERN"
	CurrencyEtb Currency = "ETB"
	CurrencyFkp Currency = "FKP"
	CurrencyFjd Currency = "FJD"
	CurrencyXpf Currency = "XPF"
	CurrencyGmd Currency = "GMD"
	CurrencyGel Currency = "GEL"
	CurrencyGhs Currency = "GHS"
	CurrencyGip Currency = "GIP"
	CurrencyGtq Currency = "GTQ"
	CurrencyGbp Currency = "GBP"
	CurrencyGnf Currency = "GNF"
	CurrencyGyd Currency = "GYD"
	CurrencyHtg Currency = "HTG"
	CurrencyHnl Currency = "HNL"
	CurrencyHkd Currency = "HKD"
	CurrencyHuf Currency = "HUF"
	CurrencyIsk Currency = "ISK"
	CurrencyIdr Currency = "IDR"
	CurrencyXdr Currency = "XDR"
	CurrencyIrr Currency = "IRR"
	CurrencyIqd Currency = "IQD"
	CurrencyIls Currency = "ILS"
	CurrencyJmd Currency = "JMD"
	CurrencyJpy Currency = "JPY"
	CurrencyJod Currency = "JOD"
	CurrencyKzt Currency = "KZT"
	CurrencyKes Currency = "KES"
	CurrencyKpw Currency = "KPW"
	CurrencyKrw Currency = "KRW"
	CurrencyKwd Currency = "KWD"
	CurrencyKgs Currency = "KGS"
	CurrencyLak Currency = "LAK"
	CurrencyLbp Currency = "LBP"
	CurrencyLsl Currency = "LSL"
	CurrencyZar Currency = "ZAR"
	CurrencyLrd Currency = "LRD"
	CurrencyLyd Currency = "LYD"
	CurrencyChf Currency = "CHF"
	CurrencyMop Currency = "MOP"
	CurrencyMkd Currency = "MKD"
	CurrencyMga Currency = "MGA"
	CurrencyMwk Currency = "MWK"
	CurrencyMyr Currency = "MYR"
	CurrencyMvr Currency = "MVR"
	CurrencyMru Currency = "MRU"
	CurrencyMur Currency = "MUR"
	CurrencyXua Currency = "XUA"
	CurrencyMxn Currency = "MXN"
	CurrencyMxv Currency = "MXV"
	CurrencyMdl Currency = "MDL"
	CurrencyMnt Currency = "MNT"
	CurrencyMad Currency = "MAD"
	CurrencyMzn Currency = "MZN"
	CurrencyMmk Currency = "MMK"
	CurrencyNad Currency = "NAD"
	CurrencyNpr Currency = "NPR"
	CurrencyNio Currency = "NIO"
	CurrencyNgn Currency = "NGN"
	CurrencyOmr Currency = "OMR"
	CurrencyPkr Currency = "PKR"
	CurrencyPab Currency = "PAB"
	CurrencyPgk Currency = "PGK"
	CurrencyPyg Currency = "PYG"
	CurrencyPen Currency = "PEN"
	CurrencyPhp Currency = "PHP"
	CurrencyPln Currency = "PLN"
	CurrencyQar Currency = "QAR"
	CurrencyRon Currency = "RON"
	CurrencyRub Currency = "RUB"
	CurrencyRwf Currency = "RWF"
	CurrencyShp Currency = "SHP"
	CurrencyWst Currency = "WST"
	CurrencyStn Currency = "STN"
	CurrencySar Currency = "SAR"
	CurrencyRsd Currency = "RSD"
	CurrencyScr Currency = "SCR"
	CurrencySll Currency = "SLL"
	CurrencySgd Currency = "SGD"
	CurrencyXsu Currency = "XSU"
	CurrencySbd Currency = "SBD"
	CurrencySos Currency = "SOS"
	CurrencySsp Currency = "SSP"
	CurrencyLkr Currency = "LKR"
	CurrencySdg Currency = "SDG"
	CurrencySrd Currency = "SRD"
	CurrencySzl Currency = "SZL"
	CurrencySek Currency = "SEK"
	CurrencyChe Currency = "CHE"
	CurrencyChw Currency = "CHW"
	CurrencySyp Currency = "SYP"
	CurrencyTwd Currency = "TWD"
	CurrencyTjs Currency = "TJS"
	CurrencyTzs Currency = "TZS"
	CurrencyThb Currency = "THB"
	CurrencyTop Currency = "TOP"
	CurrencyTtd Currency = "TTD"
	CurrencyTnd Currency = "TND"
	CurrencyTry Currency = "TRY"
	CurrencyTmt Currency = "TMT"
	CurrencyUgx Currency = "UGX"
	CurrencyUah Currency = "UAH"
	CurrencyAed Currency = "AED"
	CurrencyUsn Currency = "USN"
	CurrencyUyu Currency = "UYU"
	CurrencyUyi Currency = "UYI"
	CurrencyUyw Currency = "UYW"
	CurrencyUzs Currency = "UZS"
	CurrencyVuv Currency = "VUV"
	CurrencyVes Currency = "VES"
	CurrencyVnd Currency = "VND"
	CurrencyYer Currency = "YER"
	CurrencyZmw Currency = "ZMW"
	CurrencyZwl Currency = "ZWL"
	CurrencyXba Currency = "XBA"
	CurrencyXbb Currency = "XBB"
	CurrencyXbc Currency = "XBC"
	CurrencyXbd Currency = "XBD"
	CurrencyXts Currency = "XTS"
	CurrencyXxx Currency = "XXX"
	CurrencyXau Currency = "XAU"
	CurrencyXpd Currency = "XPD"
	CurrencyXpt Currency = "XPT"
	CurrencyXag Currency = "XAG"
	CurrencyLvl Currency = "LVL"
	CurrencySkk Currency = "SKK"
	CurrencyItl Currency = "ITL"
	CurrencyNlg Currency = "NLG"
	CurrencyBef Currency = "BEF"
	CurrencyMro Currency = "MRO"
	CurrencyUkh Currency = "UKH"
)

func NewCurrencyFromString(s string) (Currency, error) {
	switch s {
	case "AFN":
		return CurrencyAfn, nil
	case "EUR":
		return CurrencyEur, nil
	case "ALL":
		return CurrencyAll, nil
	case "DZD":
		return CurrencyDzd, nil
	case "USD":
		return CurrencyUsd, nil
	case "AOA":
		return CurrencyAoa, nil
	case "XCD":
		return CurrencyXcd, nil
	case "ARS":
		return CurrencyArs, nil
	case "AMD":
		return CurrencyAmd, nil
	case "AWG":
		return CurrencyAwg, nil
	case "AUD":
		return CurrencyAud, nil
	case "AZN":
		return CurrencyAzn, nil
	case "BSD":
		return CurrencyBsd, nil
	case "BHD":
		return CurrencyBhd, nil
	case "BDT":
		return CurrencyBdt, nil
	case "BBD":
		return CurrencyBbd, nil
	case "BYN":
		return CurrencyByn, nil
	case "BZD":
		return CurrencyBzd, nil
	case "XOF":
		return CurrencyXof, nil
	case "BMD":
		return CurrencyBmd, nil
	case "INR":
		return CurrencyInr, nil
	case "BTN":
		return CurrencyBtn, nil
	case "BOB":
		return CurrencyBob, nil
	case "BOV":
		return CurrencyBov, nil
	case "BAM":
		return CurrencyBam, nil
	case "BWP":
		return CurrencyBwp, nil
	case "NOK":
		return CurrencyNok, nil
	case "BRL":
		return CurrencyBrl, nil
	case "BND":
		return CurrencyBnd, nil
	case "BGN":
		return CurrencyBgn, nil
	case "BIF":
		return CurrencyBif, nil
	case "CVE":
		return CurrencyCve, nil
	case "KHR":
		return CurrencyKhr, nil
	case "XAF":
		return CurrencyXaf, nil
	case "CAD":
		return CurrencyCad, nil
	case "KYD":
		return CurrencyKyd, nil
	case "CLP":
		return CurrencyClp, nil
	case "CLF":
		return CurrencyClf, nil
	case "CNY":
		return CurrencyCny, nil
	case "COP":
		return CurrencyCop, nil
	case "COU":
		return CurrencyCou, nil
	case "KMF":
		return CurrencyKmf, nil
	case "CDF":
		return CurrencyCdf, nil
	case "NZD":
		return CurrencyNzd, nil
	case "CRC":
		return CurrencyCrc, nil
	case "HRK":
		return CurrencyHrk, nil
	case "CUP":
		return CurrencyCup, nil
	case "CUC":
		return CurrencyCuc, nil
	case "ANG":
		return CurrencyAng, nil
	case "CZK":
		return CurrencyCzk, nil
	case "DKK":
		return CurrencyDkk, nil
	case "DJF":
		return CurrencyDjf, nil
	case "DOP":
		return CurrencyDop, nil
	case "EGP":
		return CurrencyEgp, nil
	case "SVC":
		return CurrencySvc, nil
	case "ERN":
		return CurrencyErn, nil
	case "ETB":
		return CurrencyEtb, nil
	case "FKP":
		return CurrencyFkp, nil
	case "FJD":
		return CurrencyFjd, nil
	case "XPF":
		return CurrencyXpf, nil
	case "GMD":
		return CurrencyGmd, nil
	case "GEL":
		return CurrencyGel, nil
	case "GHS":
		return CurrencyGhs, nil
	case "GIP":
		return CurrencyGip, nil
	case "GTQ":
		return CurrencyGtq, nil
	case "GBP":
		return CurrencyGbp, nil
	case "GNF":
		return CurrencyGnf, nil
	case "GYD":
		return CurrencyGyd, nil
	case "HTG":
		return CurrencyHtg, nil
	case "HNL":
		return CurrencyHnl, nil
	case "HKD":
		return CurrencyHkd, nil
	case "HUF":
		return CurrencyHuf, nil
	case "ISK":
		return CurrencyIsk, nil
	case "IDR":
		return CurrencyIdr, nil
	case "XDR":
		return CurrencyXdr, nil
	case "IRR":
		return CurrencyIrr, nil
	case "IQD":
		return CurrencyIqd, nil
	case "ILS":
		return CurrencyIls, nil
	case "JMD":
		return CurrencyJmd, nil
	case "JPY":
		return CurrencyJpy, nil
	case "JOD":
		return CurrencyJod, nil
	case "KZT":
		return CurrencyKzt, nil
	case "KES":
		return CurrencyKes, nil
	case "KPW":
		return CurrencyKpw, nil
	case "KRW":
		return CurrencyKrw, nil
	case "KWD":
		return CurrencyKwd, nil
	case "KGS":
		return CurrencyKgs, nil
	case "LAK":
		return CurrencyLak, nil
	case "LBP":
		return CurrencyLbp, nil
	case "LSL":
		return CurrencyLsl, nil
	case "ZAR":
		return CurrencyZar, nil
	case "LRD":
		return CurrencyLrd, nil
	case "LYD":
		return CurrencyLyd, nil
	case "CHF":
		return CurrencyChf, nil
	case "MOP":
		return CurrencyMop, nil
	case "MKD":
		return CurrencyMkd, nil
	case "MGA":
		return CurrencyMga, nil
	case "MWK":
		return CurrencyMwk, nil
	case "MYR":
		return CurrencyMyr, nil
	case "MVR":
		return CurrencyMvr, nil
	case "MRU":
		return CurrencyMru, nil
	case "MUR":
		return CurrencyMur, nil
	case "XUA":
		return CurrencyXua, nil
	case "MXN":
		return CurrencyMxn, nil
	case "MXV":
		return CurrencyMxv, nil
	case "MDL":
		return CurrencyMdl, nil
	case "MNT":
		return CurrencyMnt, nil
	case "MAD":
		return CurrencyMad, nil
	case "MZN":
		return CurrencyMzn, nil
	case "MMK":
		return CurrencyMmk, nil
	case "NAD":
		return CurrencyNad, nil
	case "NPR":
		return CurrencyNpr, nil
	case "NIO":
		return CurrencyNio, nil
	case "NGN":
		return CurrencyNgn, nil
	case "OMR":
		return CurrencyOmr, nil
	case "PKR":
		return CurrencyPkr, nil
	case "PAB":
		return CurrencyPab, nil
	case "PGK":
		return CurrencyPgk, nil
	case "PYG":
		return CurrencyPyg, nil
	case "PEN":
		return CurrencyPen, nil
	case "PHP":
		return CurrencyPhp, nil
	case "PLN":
		return CurrencyPln, nil
	case "QAR":
		return CurrencyQar, nil
	case "RON":
		return CurrencyRon, nil
	case "RUB":
		return CurrencyRub, nil
	case "RWF":
		return CurrencyRwf, nil
	case "SHP":
		return CurrencyShp, nil
	case "WST":
		return CurrencyWst, nil
	case "STN":
		return CurrencyStn, nil
	case "SAR":
		return CurrencySar, nil
	case "RSD":
		return CurrencyRsd, nil
	case "SCR":
		return CurrencyScr, nil
	case "SLL":
		return CurrencySll, nil
	case "SGD":
		return CurrencySgd, nil
	case "XSU":
		return CurrencyXsu, nil
	case "SBD":
		return CurrencySbd, nil
	case "SOS":
		return CurrencySos, nil
	case "SSP":
		return CurrencySsp, nil
	case "LKR":
		return CurrencyLkr, nil
	case "SDG":
		return CurrencySdg, nil
	case "SRD":
		return CurrencySrd, nil
	case "SZL":
		return CurrencySzl, nil
	case "SEK":
		return CurrencySek, nil
	case "CHE":
		return CurrencyChe, nil
	case "CHW":
		return CurrencyChw, nil
	case "SYP":
		return CurrencySyp, nil
	case "TWD":
		return CurrencyTwd, nil
	case "TJS":
		return CurrencyTjs, nil
	case "TZS":
		return CurrencyTzs, nil
	case "THB":
		return CurrencyThb, nil
	case "TOP":
		return CurrencyTop, nil
	case "TTD":
		return CurrencyTtd, nil
	case "TND":
		return CurrencyTnd, nil
	case "TRY":
		return CurrencyTry, nil
	case "TMT":
		return CurrencyTmt, nil
	case "UGX":
		return CurrencyUgx, nil
	case "UAH":
		return CurrencyUah, nil
	case "AED":
		return CurrencyAed, nil
	case "USN":
		return CurrencyUsn, nil
	case "UYU":
		return CurrencyUyu, nil
	case "UYI":
		return CurrencyUyi, nil
	case "UYW":
		return CurrencyUyw, nil
	case "UZS":
		return CurrencyUzs, nil
	case "VUV":
		return CurrencyVuv, nil
	case "VES":
		return CurrencyVes, nil
	case "VND":
		return CurrencyVnd, nil
	case "YER":
		return CurrencyYer, nil
	case "ZMW":
		return CurrencyZmw, nil
	case "ZWL":
		return CurrencyZwl, nil
	case "XBA":
		return CurrencyXba, nil
	case "XBB":
		return CurrencyXbb, nil
	case "XBC":
		return CurrencyXbc, nil
	case "XBD":
		return CurrencyXbd, nil
	case "XTS":
		return CurrencyXts, nil
	case "XXX":
		return CurrencyXxx, nil
	case "XAU":
		return CurrencyXau, nil
	case "XPD":
		return CurrencyXpd, nil
	case "XPT":
		return CurrencyXpt, nil
	case "XAG":
		return CurrencyXag, nil
	case "LVL":
		return CurrencyLvl, nil
	case "SKK":
		return CurrencySkk, nil
	case "ITL":
		return CurrencyItl, nil
	case "NLG":
		return CurrencyNlg, nil
	case "BEF":
		return CurrencyBef, nil
	case "MRO":
		return CurrencyMro, nil
	case "UKH":
		return CurrencyUkh, nil
	}
	var t Currency
	return "", fmt.Errorf("%s is not a valid %T", s, t)
}

func (c Currency) Ptr() *Currency {
	return &c
}

type DateOfBirthData struct {
	Record      []string               `json:"record,omitempty"`
	RecordCount int                    `json:"record_count"`
	Properties  *DateOfBirthProperties `json:"properties,omitempty"`
}

type DateOfBirthInfo struct {
	Limit int                `json:"limit"`
	Size  *SizeInfo          `json:"size,omitempty"`
	Data  []*DateOfBirthData `json:"data,omitempty"`
}

type DateOfBirthProperties struct {
	Value string `json:"value"`
}

type Entities string

const (
	EntitiesLegalMatter          Entities = "legal_matter"
	EntitiesCompany              Entities = "company"
	EntitiesShipment             Entities = "shipment"
	EntitiesGeneric              Entities = "generic"
	EntitiesVessel               Entities = "vessel"
	EntitiesProperty             Entities = "property"
	EntitiesIntellectualProperty Entities = "intellectual_property"
	EntitiesPerson               Entities = "person"
	EntitiesSecurity             Entities = "security"
	EntitiesTradename            Entities = "tradename"
	EntitiesUnknown              Entities = "unknown"
	EntitiesAircraft             Entities = "aircraft"
)

func NewEntitiesFromString(s string) (Entities, error) {
	switch s {
	case "legal_matter":
		return EntitiesLegalMatter, nil
	case "company":
		return EntitiesCompany, nil
	case "shipment":
		return EntitiesShipment, nil
	case "generic":
		return EntitiesGeneric, nil
	case "vessel":
		return EntitiesVessel, nil
	case "property":
		return EntitiesProperty, nil
	case "intellectual_property":
		return EntitiesIntellectualProperty, nil
	case "person":
		return EntitiesPerson, nil
	case "security":
		return EntitiesSecurity, nil
	case "tradename":
		return EntitiesTradename, nil
	case "unknown":
		return EntitiesUnknown, nil
	case "aircraft":
		return EntitiesAircraft, nil
	}
	var t Entities
	return "", fmt.Errorf("%s is not a valid %T", s, t)
}

func (e Entities) Ptr() *Entities {
	return &e
}

type FinanceType string

const (
	FinanceTypeSharePercentage   FinanceType = "share_percentage"
	FinanceTypeShareAmount       FinanceType = "share_amount"
	FinanceTypeRegisteredCapital FinanceType = "registered_capital"
	FinanceTypePaidUpCapital     FinanceType = "paid_up_capital"
	FinanceTypeAuthorizedCapital FinanceType = "authorized_capital"
	FinanceTypeSubscribedCapital FinanceType = "subscribed_capital"
)

func NewFinanceTypeFromString(s string) (FinanceType, error) {
	switch s {
	case "share_percentage":
		return FinanceTypeSharePercentage, nil
	case "share_amount":
		return FinanceTypeShareAmount, nil
	case "registered_capital":
		return FinanceTypeRegisteredCapital, nil
	case "paid_up_capital":
		return FinanceTypePaidUpCapital, nil
	case "authorized_capital":
		return FinanceTypeAuthorizedCapital, nil
	case "subscribed_capital":
		return FinanceTypeSubscribedCapital, nil
	}
	var t FinanceType
	return "", fmt.Errorf("%s is not a valid %T", s, t)
}

func (f FinanceType) Ptr() *FinanceType {
	return &f
}

type FinancesData struct {
	Record      []string            `json:"record,omitempty"`
	RecordCount int                 `json:"record_count"`
	Properties  *FinancesProperties `json:"properties,omitempty"`
}

type FinancesInfo struct {
	Limit int             `json:"limit"`
	Size  *SizeInfo       `json:"size,omitempty"`
	Data  []*FinancesData `json:"data,omitempty"`
}

type FinancesProperties struct {
	Context  *FinanceType `json:"context,omitempty"`
	Currency *Currency    `json:"currency,omitempty"`
	Type     *string      `json:"type,omitempty"`
	Value    float64      `json:"value"`
}

type FinancialsData struct {
	Record      []string              `json:"record,omitempty"`
	RecordCount int                   `json:"record_count"`
	Properties  *FinancialsProperties `json:"properties,omitempty"`
}

type FinancialsInfo struct {
	Limit int               `json:"limit"`
	Size  *SizeInfo         `json:"size,omitempty"`
	Data  []*FinancialsData `json:"data,omitempty"`
}

type FinancialsProperties struct {
	Assets            *float64  `json:"assets,omitempty"`
	Currency          *Currency `json:"currency,omitempty"`
	Employees         *int      `json:"employees,omitempty"`
	Liabilities       *float64  `json:"liabilities,omitempty"`
	NetIncome         *float64  `json:"net_income,omitempty"`
	PaidUpCapital     *float64  `json:"paid_up_capital,omitempty"`
	RegisteredCapital *float64  `json:"registered_capital,omitempty"`
	Revenue           *float64  `json:"revenue,omitempty"`
}

type Gender string

const (
	GenderMale   Gender = "male"
	GenderFemale Gender = "female"
	GenderOther  Gender = "other"
)

func NewGenderFromString(s string) (Gender, error) {
	switch s {
	case "male":
		return GenderMale, nil
	case "female":
		return GenderFemale, nil
	case "other":
		return GenderOther, nil
	}
	var t Gender
	return "", fmt.Errorf("%s is not a valid %T", s, t)
}

func (g Gender) Ptr() *Gender {
	return &g
}

type GenderData struct {
	Record      []string          `json:"record,omitempty"`
	RecordCount int               `json:"record_count"`
	Properties  *GenderProperties `json:"properties,omitempty"`
}

type GenderInfo struct {
	Limit int           `json:"limit"`
	Size  *SizeInfo     `json:"size,omitempty"`
	Data  []*GenderData `json:"data,omitempty"`
}

type GenderProperties struct {
	Value Gender `json:"value,omitempty"`
}

type GenericData struct {
	Record      []string           `json:"record,omitempty"`
	RecordCount int                `json:"record_count"`
	Properties  *GenericProperties `json:"properties,omitempty"`
}

type GenericInfo struct {
	Limit int            `json:"limit"`
	Size  *SizeInfo      `json:"size,omitempty"`
	Data  []*GenericData `json:"data,omitempty"`
}

type GenericProperties struct {
	Type  *string `json:"type,omitempty"`
	Value *string `json:"value,omitempty"`
}

type IdentifierData struct {
	Record      []string              `json:"record,omitempty"`
	RecordCount int                   `json:"record_count"`
	Properties  *IdentifierProperties `json:"properties,omitempty"`
}

type IdentifierInfo struct {
	Limit int               `json:"limit"`
	Size  *SizeInfo         `json:"size,omitempty"`
	Data  []*IdentifierData `json:"data,omitempty"`
}

type IdentifierProperties struct {
	Type  *BothIdentifierTypes `json:"type,omitempty"`
	Value string               `json:"value"`
}

type IdentifierType string

const (
	IdentifierTypeCnTianyanchaCompanyId                     IdentifierType = "cn_tianyancha_company_id"
	IdentifierTypeCnTianyanchaHumanId                       IdentifierType = "cn_tianyancha_human_id"
	IdentifierTypeCnUnifiedSocialCreditCode                 IdentifierType = "cn_unified_social_credit_code"
	IdentifierTypeCnRegistrationNumber                      IdentifierType = "cn_registration_number"
	IdentifierTypeCnOrganizationCode                        IdentifierType = "cn_organization_code"
	IdentifierTypeCnQichachaInternalId                      IdentifierType = "cn_qichacha_internal_id"
	IdentifierTypeCnHkCrNumber                              IdentifierType = "cn_hk_cr_number"
	IdentifierTypeCnHkFilingNumber                          IdentifierType = "cn_hk_filing_number"
	IdentifierTypeBhCrNumber                                IdentifierType = "bh_cr_number"
	IdentifierTypeBhCrNumberAndBranch                       IdentifierType = "bh_cr_number_and_branch"
	IdentifierTypeJoInternalId                              IdentifierType = "jo_internal_id"
	IdentifierTypeJoNationalInstitutionNumber               IdentifierType = "jo_national_institution_number"
	IdentifierTypeJoInstitutionNumber                       IdentifierType = "jo_institution_number"
	IdentifierTypeMaltaCompanyNumber                        IdentifierType = "malta_company_number"
	IdentifierTypeMaltaNationalId                           IdentifierType = "malta_national_id"
	IdentifierTypeMaltaAccountancyRegistrationId            IdentifierType = "malta_accountancy_registration_id"
	IdentifierTypeUkCompanyNumber                           IdentifierType = "uk_company_number"
	IdentifierTypeUkFirmReferenceNumber                     IdentifierType = "uk_firm_reference_number"
	IdentifierTypeUkPersonNumber                            IdentifierType = "uk_person_number"
	IdentifierTypeMxRfcPerson                               IdentifierType = "mx_rfc_person"
	IdentifierTypeMxCurp                                    IdentifierType = "mx_curp"
	IdentifierTypeMxRfcCompany                              IdentifierType = "mx_rfc_company"
	IdentifierTypeMxOfficeFme                               IdentifierType = "mx_office_fme"
	IdentifierTypeRuInn                                     IdentifierType = "ru_inn"
	IdentifierTypeRuOgrn                                    IdentifierType = "ru_ogrn"
	IdentifierTypeVenSarenInternalEmployerNumber            IdentifierType = "ven_saren_internal_employer_number"
	IdentifierTypeBraCnpj                                   IdentifierType = "bra_cnpj"
	IdentifierTypeVenRif                                    IdentifierType = "ven_rif"
	IdentifierTypeVenCedulaNumber                           IdentifierType = "ven_cedula_number"
	IdentifierTypeMdvRegistrationNumber                     IdentifierType = "mdv_registration_number"
	IdentifierTypeIndDirectorIdNumber                       IdentifierType = "ind_director_id_number"
	IdentifierTypeIndPermanentAccountNumber                 IdentifierType = "ind_permanent_account_number"
	IdentifierTypeIndCorporateIdNumber                      IdentifierType = "ind_corporate_id_number"
	IdentifierTypeKazTin                                    IdentifierType = "kaz_tin"
	IdentifierTypeKazBin                                    IdentifierType = "kaz_bin"
	IdentifierTypeKazStateRegNum                            IdentifierType = "kaz_state_reg_num"
	IdentifierTypeKazOkpoNum                                IdentifierType = "kaz_okpo_num"
	IdentifierTypeKazIdentifier                             IdentifierType = "kaz_identifier"
	IdentifierTypeRksRegistrationNumber                     IdentifierType = "rks_registration_number"
	IdentifierTypeGrcGemiNumber                             IdentifierType = "grc_gemi_number"
	IdentifierTypeVenRncNumber                              IdentifierType = "ven_rnc_number"
	IdentifierTypeUsaVaRegId                                IdentifierType = "usa_va_reg_id"
	IdentifierTypeUsaNyRegId                                IdentifierType = "usa_ny_reg_id"
	IdentifierTypeUsaFeiNumber                              IdentifierType = "usa_fei_number"
	IdentifierTypeUkrMojId                                  IdentifierType = "ukr_moj_id"
	IdentifierTypeMusRegId                                  IdentifierType = "mus_reg_id"
	IdentifierTypeUkTitleNumber                             IdentifierType = "uk_title_number"
	IdentifierTypeMngRegNumber                              IdentifierType = "mng_reg_number"
	IdentifierTypeMneRegNumber                              IdentifierType = "mne_reg_number"
	IdentifierTypeKgzRegNumber                              IdentifierType = "kgz_reg_number"
	IdentifierTypeCnImportexportCode                        IdentifierType = "cn_importexport_code"
	IdentifierTypePrkEntityId                               IdentifierType = "prk_entity_id"
	IdentifierTypePrkRegistrationId                         IdentifierType = "prk_registration_id"
	IdentifierTypeYugoslavMasterCitizenNum                  IdentifierType = "yugoslav_master_citizen_num"
	IdentifierTypeBfaEntityId                               IdentifierType = "bfa_entity_id"
	IdentifierTypeAfghanTinNumber                           IdentifierType = "afghan_tin_number"
	IdentifierTypeAfgBusinessLicense                        IdentifierType = "afg_business_license"
	IdentifierTypeMdgNifNumber                              IdentifierType = "mdg_nif_number"
	IdentifierTypeMdgStatNumber                             IdentifierType = "mdg_stat_number"
	IdentifierTypeMdgRcsNumber                              IdentifierType = "mdg_rcs_number"
	IdentifierTypeLvaPersonalCode                           IdentifierType = "lva_personal_code"
	IdentifierTypeIban                                      IdentifierType = "iban"
	IdentifierTypeLvaRegNumber                              IdentifierType = "lva_reg_number"
	IdentifierTypeTwnUnifiedNumber                          IdentifierType = "twn_unified_number"
	IdentifierTypeLuxRcsNumber                              IdentifierType = "lux_rcs_number"
	IdentifierTypeMkdEmbsNumber                             IdentifierType = "mkd_embs_number"
	IdentifierTypeMkdEmbsBranchNumber                       IdentifierType = "mkd_embs_branch_number"
	IdentifierTypeMdaIdnoNumber                             IdentifierType = "mda_idno_number"
	IdentifierTypeUryRucNumber                              IdentifierType = "ury_ruc_number"
	IdentifierTypeCheUidNumber                              IdentifierType = "che_uid_number"
	IdentifierTypeSlvCommercialRegNumber                    IdentifierType = "slv_commercial_reg_number"
	IdentifierTypeSlvUidNumber                              IdentifierType = "slv_uid_number"
	IdentifierTypeMatoGrossoLegalId                         IdentifierType = "mato_grosso_legal_id"
	IdentifierTypeLei                                       IdentifierType = "lei"
	IdentifierTypeVat                                       IdentifierType = "vat"
	IdentifierTypeItaFiscalCode                             IdentifierType = "ita_fiscal_code"
	IdentifierTypeRioDeJaneiroLegalId                       IdentifierType = "rio_de_janeiro_legal_id"
	IdentifierTypeIslTinNumber                              IdentifierType = "isl_tin_number"
	IdentifierTypeLaoEnterpriseNumber                       IdentifierType = "lao_enterprise_number"
	IdentifierTypeSvkIcoNumber                              IdentifierType = "svk_ico_number"
	IdentifierTypeKhmTinNumber                              IdentifierType = "khm_tin_number"
	IdentifierTypeCzeIcoNumber                              IdentifierType = "cze_ico_number"
	IdentifierTypeIrnNationalId                             IdentifierType = "irn_national_id"
	IdentifierTypeEcuRucNumber                              IdentifierType = "ecu_ruc_number"
	IdentifierTypeGrcVatNumber                              IdentifierType = "grc_vat_number"
	IdentifierTypeCanCorporationNumber                      IdentifierType = "can_corporation_number"
	IdentifierTypeCanCraProgramAccountNumber                IdentifierType = "can_cra_program_account_number"
	IdentifierTypeMnePib                                    IdentifierType = "mne_pib"
	IdentifierTypeChlCedulaNumber                           IdentifierType = "chl_cedula_number"
	IdentifierTypeBraCaseNumber                             IdentifierType = "bra_case_number"
	IdentifierTypeIndLlpin                                  IdentifierType = "ind_llpin"
	IdentifierTypeIndFcrn                                   IdentifierType = "ind_fcrn"
	IdentifierTypeBmuRegistrationNumber                     IdentifierType = "bmu_registration_number"
	IdentifierTypeBraCpfNumber                              IdentifierType = "bra_cpf_number"
	IdentifierTypeIrnNationalNumber                         IdentifierType = "irn_national_number"
	IdentifierTypeChnCustomsRegistrationCode                IdentifierType = "chn_customs_registration_code"
	IdentifierTypeLiePublicRegNo                            IdentifierType = "lie_public_reg_no"
	IdentifierTypeCnTaxIdentificationNumber                 IdentifierType = "cn_tax_identification_number"
	IdentifierTypeMacRegistrationNo                         IdentifierType = "mac_registration_no"
	IdentifierTypeSigerInternalId                           IdentifierType = "siger_internal_id"
	IdentifierTypeLbnNationalId                             IdentifierType = "lbn_national_id"
	IdentifierTypeIntMaritimeOrgId                          IdentifierType = "int_maritime_org_id"
	IdentifierTypeRuShipRegisterId                          IdentifierType = "ru_ship_register_id"
	IdentifierTypeSayariInternalIdentifier                  IdentifierType = "sayari_internal_identifier"
	IdentifierTypeArubaChamberOfCommerceId                  IdentifierType = "aruba_chamber_of_commerce_id"
	IdentifierTypeImoNo                                     IdentifierType = "imo_no"
	IdentifierTypeVgbCompanyNumber                          IdentifierType = "vgb_company_number"
	IdentifierTypeYemCocRegistrationNumber                  IdentifierType = "yem_coc_registration_number"
	IdentifierTypeMysIdCardNo                               IdentifierType = "mys_id_card_no"
	IdentifierTypeMysCompanyRegNo                           IdentifierType = "mys_company_reg_no"
	IdentifierTypePryRucNumber                              IdentifierType = "pry_ruc_number"
	IdentifierTypePryCedulaNumber                           IdentifierType = "pry_cedula_number"
	IdentifierTypePryOldRucNumber                           IdentifierType = "pry_old_ruc_number"
	IdentifierTypeRccmNo                                    IdentifierType = "rccm_no"
	IdentifierTypeBraRgNumber                               IdentifierType = "bra_rg_number"
	IdentifierTypeNineaNo                                   IdentifierType = "ninea_no"
	IdentifierTypeAlbTaxId                                  IdentifierType = "alb_tax_id"
	IdentifierTypeAlbRegistrationNumber                     IdentifierType = "alb_registration_number"
	IdentifierTypeArgIgjNumber                              IdentifierType = "arg_igj_number"
	IdentifierTypeArgDniNumber                              IdentifierType = "arg_dni_number"
	IdentifierTypeArgCuitNumber                             IdentifierType = "arg_cuit_number"
	IdentifierTypeArgCuilNumber                             IdentifierType = "arg_cuil_number"
	IdentifierTypeArgCdiNumber                              IdentifierType = "arg_cdi_number"
	IdentifierTypeBihMbsNumber                              IdentifierType = "bih_mbs_number"
	IdentifierTypeBihJibNumber                              IdentifierType = "bih_jib_number"
	IdentifierTypeBihCustomsNumber                          IdentifierType = "bih_customs_number"
	IdentifierTypeUsaPuertoRicoRegisterNumber               IdentifierType = "usa_puerto_rico_register_number"
	IdentifierTypeDjiRcsNumber                              IdentifierType = "dji_rcs_number"
	IdentifierTypeCriCedulaNumber                           IdentifierType = "cri_cedula_number"
	IdentifierTypeMozIdNumber                               IdentifierType = "moz_id_number"
	IdentifierTypeMozNuitPerson                             IdentifierType = "moz_nuit_person"
	IdentifierTypeMozNuitCo                                 IdentifierType = "moz_nuit_co"
	IdentifierTypeMozPassport                               IdentifierType = "moz_passport"
	IdentifierTypeMozDireNo                                 IdentifierType = "moz_dire_no"
	IdentifierTypeMozVoterNo                                IdentifierType = "moz_voter_no"
	IdentifierTypeMozNuelNo                                 IdentifierType = "moz_nuel_no"
	IdentifierTypeIrqVoterId                                IdentifierType = "irq_voter_id"
	IdentifierTypeJorVoterCardNo                            IdentifierType = "jor_voter_card_no"
	IdentifierTypeJorIdNo                                   IdentifierType = "jor_id_no"
	IdentifierTypePerRucNo                                  IdentifierType = "per_ruc_no"
	IdentifierTypeEcuCompanyId                              IdentifierType = "ecu_company_id"
	IdentifierTypeUsaNyDosId                                IdentifierType = "usa_ny_dos_id"
	IdentifierTypeBfaRccmNumber                             IdentifierType = "bfa_rccm_number"
	IdentifierTypeFlPropFolio                               IdentifierType = "fl_prop_folio"
	IdentifierTypeQatQfcNumber                              IdentifierType = "qat_qfc_number"
	IdentifierTypeGrcAfmNumber                              IdentifierType = "grc_afm_number"
	IdentifierTypeVnmEnterpriseCode                         IdentifierType = "vnm_enterprise_code"
	IdentifierTypeThaRegistrationNo                         IdentifierType = "tha_registration_no"
	IdentifierTypeVnmCitizenshipNo                          IdentifierType = "vnm_citizenship_no"
	IdentifierTypeVnmPersonIdNo                             IdentifierType = "vnm_person_id_no"
	IdentifierTypeArgLibCivicaNumber                        IdentifierType = "arg_lib_civica_number"
	IdentifierTypeArgLibEnrolamientoNumber                  IdentifierType = "arg_lib_enrolamiento_number"
	IdentifierTypeNzlNzbn                                   IdentifierType = "nzl_nzbn"
	IdentifierTypeNzlCoNo                                   IdentifierType = "nzl_co_no"
	IdentifierTypeUsaOfacSdnNumber                          IdentifierType = "usa_ofac_sdn_number"
	IdentifierTypeSwiftBicCode                              IdentifierType = "swift_bic_code"
	IdentifierTypeDunsNumber                                IdentifierType = "duns_number"
	IdentifierTypeBitcoinAddress                            IdentifierType = "bitcoin_address"
	IdentifierTypeLitecoinAddress                           IdentifierType = "litecoin_address"
	IdentifierTypeRusMicexCode                              IdentifierType = "rus_micex_code"
	IdentifierTypeTxPropId                                  IdentifierType = "tx_prop_id"
	IdentifierTypeTxPacsId                                  IdentifierType = "tx_pacs_id"
	IdentifierTypeTxLandId                                  IdentifierType = "tx_land_id"
	IdentifierTypePngIpaRegId                               IdentifierType = "png_ipa_reg_id"
	IdentifierTypeGtmNitNumber                              IdentifierType = "gtm_nit_number"
	IdentifierTypeGtmCuiNumber                              IdentifierType = "gtm_cui_number"
	IdentifierTypeDomRnc                                    IdentifierType = "dom_rnc"
	IdentifierTypeQatCrNumber                               IdentifierType = "qat_cr_number"
	IdentifierTypeIsin                                      IdentifierType = "isin"
	IdentifierTypeUsaFlDocumentNo                           IdentifierType = "usa_fl_document_no"
	IdentifierTypeUsaFlFicNameRegNo                         IdentifierType = "usa_fl_fic_name_reg_no"
	IdentifierTypeBraServidorPortal                         IdentifierType = "bra_servidor_portal"
	IdentifierTypeBraCodigoDaUnidadeOrganizacional          IdentifierType = "bra_codigo_da_unidade_organizacional"
	IdentifierTypeUsaSecCikNumber                           IdentifierType = "usa_sec_cik_number"
	IdentifierTypeHrMbs                                     IdentifierType = "hr_mbs"
	IdentifierTypeHrOib                                     IdentifierType = "hr_oib"
	IdentifierTypeSlvNumeroIdentificacionTributaria         IdentifierType = "slv_numero_identificacion_tributaria"
	IdentifierTypeSlvMcas                                   IdentifierType = "slv_mcas"
	IdentifierTypeAusCompanyNumber                          IdentifierType = "aus_company_number"
	IdentifierTypeAusBusinessNumber                         IdentifierType = "aus_business_number"
	IdentifierTypeDeuRegisternummer                         IdentifierType = "deu_registernummer"
	IdentifierTypeUsaIrsEin                                 IdentifierType = "usa_irs_ein"
	IdentifierTypeHongKongCaseNumber                        IdentifierType = "hong_kong_case_number"
	IdentifierTypeIrnCocInternalId                          IdentifierType = "irn_coc_internal_id"
	IdentifierTypePanFolioFichaId                           IdentifierType = "pan_folio_ficha_id"
	IdentifierTypePanCedulaNumber                           IdentifierType = "pan_cedula_number"
	IdentifierTypeXxxCedarRoseUid                           IdentifierType = "xxx_cedar_rose_uid"
	IdentifierTypeXxxRccm                                   IdentifierType = "xxx_rccm"
	IdentifierTypeVnmDichvuthongtinInternalId               IdentifierType = "vnm_dichvuthongtin_internal_id"
	IdentifierTypeXxxIntelInternalId                        IdentifierType = "xxx_intel_internal_id"
	IdentifierTypeUsaWashingtonStateUbi                     IdentifierType = "usa_washington_state_ubi"
	IdentifierTypeNgaRegistrationNumber                     IdentifierType = "nga_registration_number"
	IdentifierTypeNgCheckInternalId                         IdentifierType = "ng_check_internal_id"
	IdentifierTypeNycBbl                                    IdentifierType = "nyc_bbl"
	IdentifierTypeNycCrfn                                   IdentifierType = "nyc_crfn"
	IdentifierTypeTxCorpFileNum                             IdentifierType = "tx_corp_file_num"
	IdentifierTypeTxTaxId                                   IdentifierType = "tx_tax_id"
	IdentifierTypeUsaGaBusinessId                           IdentifierType = "usa_ga_business_id"
	IdentifierTypePhlPseId                                  IdentifierType = "phl_pse_id"
	IdentifierTypePhlSecId                                  IdentifierType = "phl_sec_id"
	IdentifierTypePhlTin                                    IdentifierType = "phl_tin"
	IdentifierTypeAfgPassport                               IdentifierType = "afg_passport"
	IdentifierTypeIrnPassport                               IdentifierType = "irn_passport"
	IdentifierTypeKwtPassport                               IdentifierType = "kwt_passport"
	IdentifierTypeLbyPassport                               IdentifierType = "lby_passport"
	IdentifierTypePakPassport                               IdentifierType = "pak_passport"
	IdentifierTypeRusPassport                               IdentifierType = "rus_passport"
	IdentifierTypeTunPassport                               IdentifierType = "tun_passport"
	IdentifierTypeYemPassport                               IdentifierType = "yem_passport"
	IdentifierTypeUnSanctionPrn                             IdentifierType = "un_sanction_prn"
	IdentifierTypeEuSanctionRn                              IdentifierType = "eu_sanction_rn"
	IdentifierTypeCaLpFileNum                               IdentifierType = "ca_lp_file_num"
	IdentifierTypeTxEntityFilingNum                         IdentifierType = "tx_entity_filing_num"
	IdentifierTypeUsaSocialSecurityNumber                   IdentifierType = "usa_social_security_number"
	IdentifierTypeUsaWyPartyId                              IdentifierType = "usa_wy_party_id"
	IdentifierTypeUsaWyFilingId                             IdentifierType = "usa_wy_filing_id"
	IdentifierTypeUsaWyInternalFilingId                     IdentifierType = "usa_wy_internal_filing_id"
	IdentifierTypeUsaWyFilingNum                            IdentifierType = "usa_wy_filing_num"
	IdentifierTypeUsaOrRegno                                IdentifierType = "usa_or_regno"
	IdentifierTypeUsaNvCorpno                               IdentifierType = "usa_nv_corpno"
	IdentifierTypeUsaNvBizid                                IdentifierType = "usa_nv_bizid"
	IdentifierTypePrkInternalTradeId                        IdentifierType = "prk_internal_trade_id"
	IdentifierTypeLsoCorpregId                              IdentifierType = "lso_corpreg_id"
	IdentifierTypeUzbTinNumber                              IdentifierType = "uzb_tin_number"
	IdentifierTypeCaCorporateIdNum                          IdentifierType = "ca_corporate_id_num"
	IdentifierTypeGbrHmTreasurySanctionGroupId              IdentifierType = "gbr_hm_treasury_sanction_group_id"
	IdentifierTypeGbrIpoTrademarkRegNo                      IdentifierType = "gbr_ipo_trademark_reg_no"
	IdentifierTypeUsaGaControlNo                            IdentifierType = "usa_ga_control_no"
	IdentifierTypeHndCocCompanyRegistrationNumber           IdentifierType = "hnd_coc_company_registration_number"
	IdentifierTypeMnePropertyUid                            IdentifierType = "mne_property_uid"
	IdentifierTypePhlBnn                                    IdentifierType = "phl_bnn"
	IdentifierTypeRouCompanyRegistrationCode                IdentifierType = "rou_company_registration_code"
	IdentifierTypeRouIdentityCard                           IdentifierType = "rou_identity_card"
	IdentifierTypeRouPersonalIdNumber                       IdentifierType = "rou_personal_id_number"
	IdentifierTypeCubCod                                    IdentifierType = "cub_cod"
	IdentifierTypeFlPropFolioDade                           IdentifierType = "fl_prop_folio_dade"
	IdentifierTypePerDniNo                                  IdentifierType = "per_dni_no"
	IdentifierTypePerCarneDeExtranjeria                     IdentifierType = "per_carne_de_extranjeria"
	IdentifierTypeFraSiren                                  IdentifierType = "fra_siren"
	IdentifierTypeFraSiret                                  IdentifierType = "fra_siret"
	IdentifierTypeCzeFileNumber                             IdentifierType = "cze_file_number"
	IdentifierTypeEspBormeRegId                             IdentifierType = "esp_borme_reg_id"
	IdentifierTypeMexTmNo                                   IdentifierType = "mex_tm_no"
	IdentifierTypeMusFileNo                                 IdentifierType = "mus_file_no"
	IdentifierTypeColNitNo                                  IdentifierType = "col_nit_no"
	IdentifierTypeJpnCorporateNo                            IdentifierType = "jpn_corporate_no"
	IdentifierTypeUsaCgacAgencyCode                         IdentifierType = "usa_cgac_agency_code"
	IdentifierTypeUsaGovtAgencyId                           IdentifierType = "usa_govt_agency_id"
	IdentifierTypeUsaGovtOfficeId                           IdentifierType = "usa_govt_office_id"
	IdentifierTypeColCedulaNo                               IdentifierType = "col_cedula_no"
	IdentifierTypeColSecopNo                                IdentifierType = "col_secop_no"
	IdentifierTypeJordanCompanyNo                           IdentifierType = "jordan_company_no"
	IdentifierTypeDnkCvr                                    IdentifierType = "dnk_cvr"
	IdentifierTypeDnkProductionUnitNo                       IdentifierType = "dnk_production_unit_no"
	IdentifierTypeDnkEntity                                 IdentifierType = "dnk_entity"
	IdentifierTypeNorOrgNo                                  IdentifierType = "nor_org_no"
	IdentifierTypeSweOrgNo                                  IdentifierType = "swe_org_no"
	IdentifierTypeUsaCoRegNo                                IdentifierType = "usa_co_reg_no"
	IdentifierTypeUsaIaCorpNo                               IdentifierType = "usa_ia_corp_no"
	IdentifierTypeSgpUnqiueEntityNumber                     IdentifierType = "sgp_unqiue_entity_number"
	IdentifierTypeUsaAkEntityNo                             IdentifierType = "usa_ak_entity_no"
	IdentifierTypeUsaOhCharterNum                           IdentifierType = "usa_oh_charter_num"
	IdentifierTypeTurIstanbulCocRegNo                       IdentifierType = "tur_istanbul_coc_reg_no"
	IdentifierTypeTurMersisNumber                           IdentifierType = "tur_mersis_number"
	IdentifierTypeCheChIdNumber                             IdentifierType = "che_ch_id_number"
	IdentifierTypeAreDifcRegNo                              IdentifierType = "are_difc_reg_no"
	IdentifierTypeIdnTaxId                                  IdentifierType = "idn_tax_id"
	IdentifierTypeUsaVtBizId                                IdentifierType = "usa_vt_biz_id"
	IdentifierTypeUsaWvRegId                                IdentifierType = "usa_wv_reg_id"
	IdentifierTypeUsaMsBizId                                IdentifierType = "usa_ms_biz_id"
	IdentifierTypeUsaIdControlNo                            IdentifierType = "usa_id_control_no"
	IdentifierTypeUsaIdPartyId                              IdentifierType = "usa_id_party_id"
	IdentifierTypeIrnCocInternalIdCardno                    IdentifierType = "irn_coc_internal_id_cardno"
	IdentifierTypeUsaAzCorpRegEntityNum                     IdentifierType = "usa_az_corp_reg_entity_num"
	IdentifierTypeUsaOkFilingNo                             IdentifierType = "usa_ok_filing_no"
	IdentifierTypeUsaTnControlNo                            IdentifierType = "usa_tn_control_no"
	IdentifierTypeUsaTnPartyId                              IdentifierType = "usa_tn_party_id"
	IdentifierTypeUsaKsBizId                                IdentifierType = "usa_ks_biz_id"
	IdentifierTypeUsaHiCorporateRegistryId                  IdentifierType = "usa_hi_corporate_registry_id"
	IdentifierTypeUsaHiCorporateRegistryPersonId            IdentifierType = "usa_hi_corporate_registry_person_id"
	IdentifierTypePolKrsNumber                              IdentifierType = "pol_krs_number"
	IdentifierTypePolRegonNumber                            IdentifierType = "pol_regon_number"
	IdentifierTypePolNipNumber                              IdentifierType = "pol_nip_number"
	IdentifierTypePolRejestrPersonId                        IdentifierType = "pol_rejestr_person_id"
	IdentifierTypeArmVatNo                                  IdentifierType = "arm_vat_no"
	IdentifierTypeArmEnterpriseCode                         IdentifierType = "arm_enterprise_code"
	IdentifierTypeArmRegistrationNo                         IdentifierType = "arm_registration_no"
	IdentifierTypeUsaMeCorpId                               IdentifierType = "usa_me_corp_id"
	IdentifierTypeCypRegNo                                  IdentifierType = "cyp_reg_no"
	IdentifierTypeUsaNdControlId                            IdentifierType = "usa_nd_control_id"
	IdentifierTypeUsaMiCorpId                               IdentifierType = "usa_mi_corp_id"
	IdentifierTypeUsaMiCorpIdOld                            IdentifierType = "usa_mi_corp_id_old"
	IdentifierTypeUsaHiTradeNameCert                        IdentifierType = "usa_hi_trade_name_cert"
	IdentifierTypeUsaDcEntityNo                             IdentifierType = "usa_dc_entity_no"
	IdentifierTypeUsaVaOldRegId                             IdentifierType = "usa_va_old_reg_id"
	IdentifierTypeUsaConsolidatedScreeningListSyntheticId   IdentifierType = "usa_consolidated_screening_list_synthetic_id"
	IdentifierTypeUsaArFilingNo                             IdentifierType = "usa_ar_filing_no"
	IdentifierTypeUsaNcInternalId                           IdentifierType = "usa_nc_internal_id"
	IdentifierTypeUsaNeAcctNo                               IdentifierType = "usa_ne_acct_no"
	IdentifierTypeUsaNeAgentId                              IdentifierType = "usa_ne_agent_id"
	IdentifierTypeUsaNmBusinessNo                           IdentifierType = "usa_nm_business_no"
	IdentifierTypeUsaNmLicenseId                            IdentifierType = "usa_nm_license_id"
	IdentifierTypeUsaDcFileNo                               IdentifierType = "usa_dc_file_no"
	IdentifierTypeUsaRiFeiNo                                IdentifierType = "usa_ri_fei_no"
	IdentifierTypeInternalMd5                               IdentifierType = "internal_md5"
	IdentifierTypeUsaMoCorpId                               IdentifierType = "usa_mo_corp_id"
	IdentifierTypeUsaWiDfiId                                IdentifierType = "usa_wi_dfi_id"
	IdentifierTypeGeoIdentificationCode                     IdentifierType = "geo_identification_code"
	IdentifierTypeGeoPersonalNumber                         IdentifierType = "geo_personal_number"
	IdentifierTypeGeoStateRegistrationNumber                IdentifierType = "geo_state_registration_number"
	IdentifierTypeMacRaemCaseUrlId                          IdentifierType = "mac_raem_case_url_id"
	IdentifierTypeRouCompanyTin                             IdentifierType = "rou_company_tin"
	IdentifierTypeUsaMdDptTax                               IdentifierType = "usa_md_dpt_tax"
	IdentifierTypeUsaSdCorpId                               IdentifierType = "usa_sd_corp_id"
	IdentifierTypeHndTegucigalpaMatricula                   IdentifierType = "hnd_tegucigalpa_matricula"
	IdentifierTypeUsaFlPropertyId                           IdentifierType = "usa_fl_property_id"
	IdentifierTypeUsaFlPropertyMpId                         IdentifierType = "usa_fl_property_mp_id"
	IdentifierTypeUsaFlPropertyStateParId                   IdentifierType = "usa_fl_property_state_par_id"
	IdentifierTypeMexCluni                                  IdentifierType = "mex_cluni"
	IdentifierTypeUsaPaCorporateRegistryId                  IdentifierType = "usa_pa_corporate_registry_id"
	IdentifierTypePakIndNtn                                 IdentifierType = "pak_ind_ntn"
	IdentifierTypePakCoNtn                                  IdentifierType = "pak_co_ntn"
	IdentifierTypeMexRnie                                   IdentifierType = "mex_rnie"
	IdentifierTypePakNgoRegNo                               IdentifierType = "pak_ngo_reg_no"
	IdentifierTypeIraqiStockExchangeSymbol                  IdentifierType = "iraqi_stock_exchange_symbol"
	IdentifierTypeBgrUic                                    IdentifierType = "bgr_uic"
	IdentifierTypeBgrEgnHashed                              IdentifierType = "bgr_egn_hashed"
	IdentifierTypeSouthAfricaEnterpriseNumber               IdentifierType = "south_africa_enterprise_number"
	IdentifierTypeSouthAfricaPassportNumber                 IdentifierType = "south_africa_passport_number"
	IdentifierTypeNldKvkNumber                              IdentifierType = "nld_kvk_number"
	IdentifierTypeNldKvkBranchNumber                        IdentifierType = "nld_kvk_branch_number"
	IdentifierTypeUsaCentralRegistrationDepositoryNumber    IdentifierType = "usa_central_registration_depository_number"
	IdentifierTypeUsaSecFileNumberBd                        IdentifierType = "usa_sec_file_number_bd"
	IdentifierTypeChnCnipaTm                                IdentifierType = "chn_cnipa_tm"
	IdentifierTypeCypPassport                               IdentifierType = "cyp_passport"
	IdentifierTypeCypInfocreditEntityId                     IdentifierType = "cyp_infocredit_entity_id"
	IdentifierTypeCypIdCard                                 IdentifierType = "cyp_id_card"
	IdentifierTypeCypSsn                                    IdentifierType = "cyp_ssn"
	IdentifierTypeAutFirmenbuchNo                           IdentifierType = "aut_firmenbuch_no"
	IdentifierTypeSwePerIdNo                                IdentifierType = "swe_per_id_no"
	IdentifierTypeChnShanghaiStockExchangeCompanyCode       IdentifierType = "chn_shanghai_stock_exchange_company_code"
	IdentifierTypeUsaSecFileNumberIa                        IdentifierType = "usa_sec_file_number_ia"
	IdentifierTypeChnShenzenSecCode                         IdentifierType = "chn_shenzen_sec_code"
	IdentifierTypeUsaCtBusinessId                           IdentifierType = "usa_ct_business_id"
	IdentifierTypeEcuCedulaNumber                           IdentifierType = "ecu_cedula_number"
	IdentifierTypeHkgStockCode                              IdentifierType = "hkg_stock_code"
	IdentifierTypeCanBcCompanyRegistrationId                IdentifierType = "can_bc_company_registration_id"
	IdentifierTypeCanBcExtraprovincialRegistrationId        IdentifierType = "can_bc_extraprovincial_registration_id"
	IdentifierTypeLtuCompanyRegistrationCode                IdentifierType = "ltu_company_registration_code"
	IdentifierTypeUsaSecPrivateFund                         IdentifierType = "usa_sec_private_fund"
	IdentifierTypeLvaInsolvencyProceedingId                 IdentifierType = "lva_insolvency_proceeding_id"
	IdentifierTypeChnCninfoInternalShareholderId            IdentifierType = "chn_cninfo_internal_shareholder_id"
	IdentifierTypeEuid                                      IdentifierType = "euid"
	IdentifierTypeFinBusinessId                             IdentifierType = "fin_business_id"
	IdentifierTypeEstBusinessRegCode                        IdentifierType = "est_business_reg_code"
	IdentifierTypeUsaCusipNumber                            IdentifierType = "usa_cusip_number"
	IdentifierTypeSvnCoRegNo                                IdentifierType = "svn_co_reg_no"
	IdentifierTypeIsrCompanyNumber                          IdentifierType = "isr_company_number"
	IdentifierTypeRksBusinessNumber                         IdentifierType = "rks_business_number"
	IdentifierTypeRksFiscalNumber                           IdentifierType = "rks_fiscal_number"
	IdentifierTypeJpnEdinetCode                             IdentifierType = "jpn_edinet_code"
	IdentifierTypeBelEnterpriseNumber                       IdentifierType = "bel_enterprise_number"
	IdentifierTypeBelEstablishmentNumber                    IdentifierType = "bel_establishment_number"
	IdentifierTypeAusAfsLicenceNumber                       IdentifierType = "aus_afs_licence_number"
	IdentifierTypeAusAfsRepNumber                           IdentifierType = "aus_afs_rep_number"
	IdentifierTypeAusAdvNumber                              IdentifierType = "aus_adv_number"
	IdentifierTypeAusCreditLicenceNumber                    IdentifierType = "aus_credit_licence_number"
	IdentifierTypeAusCreditRepNumber                        IdentifierType = "aus_credit_rep_number"
	IdentifierTypeDartCik                                   IdentifierType = "dart_cik"
	IdentifierTypeKrxTickerCode                             IdentifierType = "krx_ticker_code"
	IdentifierTypeKorCorporateRegistrationNumber            IdentifierType = "kor_corporate_registration_number"
	IdentifierTypeKorBusinessTin                            IdentifierType = "kor_business_tin"
	IdentifierTypeEstPersonalId                             IdentifierType = "est_personal_id"
	IdentifierTypeBzeBicarRegNo                             IdentifierType = "bze_bicar_reg_no"
	IdentifierTypeUsaIlChicagoAccountNumber                 IdentifierType = "usa_il_chicago_account_number"
	IdentifierTypeCymCoNo                                   IdentifierType = "cym_co_no"
	IdentifierTypeGgyCorporateRegNumber                     IdentifierType = "ggy_corporate_reg_number"
	IdentifierTypeJeyCorporateRegNumber                     IdentifierType = "jey_corporate_reg_number"
	IdentifierTypeCokCorpRegCorpid                          IdentifierType = "cok_corp_reg_corpid"
	IdentifierTypeCokCorpRegCorpofficerid                   IdentifierType = "cok_corp_reg_corpofficerid"
	IdentifierTypeCokCorpRegNumber                          IdentifierType = "cok_corp_reg_number"
	IdentifierTypeMexOpenContractsInternalId                IdentifierType = "mex_open_contracts_internal_id"
	IdentifierTypeGibCorpRegNumber                          IdentifierType = "gib_corp_reg_number"
	IdentifierTypeDomOnapiNum                               IdentifierType = "dom_onapi_num"
	IdentifierTypeRusTouristObj                             IdentifierType = "rus_tourist_obj"
	IdentifierTypeBillOfLading                              IdentifierType = "bill_of_lading"
	IdentifierTypeTwnFactoryRegistrationNumber              IdentifierType = "twn_factory_registration_number"
	IdentifierTypeTwnFactoryEstablishmentPermitCaseNumber   IdentifierType = "twn_factory_establishment_permit_case_number"
	IdentifierTypeKenPersonalId                             IdentifierType = "ken_personal_id"
	IdentifierTypeColDianNumeroFormulario                   IdentifierType = "col_dian_numero_formulario"
	IdentifierTypeVutCorpRegNumber                          IdentifierType = "vut_corp_reg_number"
	IdentifierTypeGeoLegalCode                              IdentifierType = "geo_legal_code"
	IdentifierTypeMmrCorpId                                 IdentifierType = "mmr_corp_id"
	IdentifierTypeMmrRegNo                                  IdentifierType = "mmr_reg_no"
	IdentifierTypeMmrPriorRegNo                             IdentifierType = "mmr_prior_reg_no"
	IdentifierTypeMmrOfficerId                              IdentifierType = "mmr_officer_id"
	IdentifierTypeArmPassportNumber                         IdentifierType = "arm_passport_number"
	IdentifierTypeUkrRegNum                                 IdentifierType = "ukr_reg_num"
	IdentifierTypeValidatisNumber                           IdentifierType = "validatis_number"
	IdentifierTypeAreDubaiLandCaseNo                        IdentifierType = "are_dubai_land_case_no"
	IdentifierTypeAgoMatriculaNumber                        IdentifierType = "ago_matricula_number"
	IdentifierTypeAgoNifNumber                              IdentifierType = "ago_nif_number"
	IdentifierTypeMmrPersonalIdNo                           IdentifierType = "mmr_personal_id_no"
	IdentifierTypeBlrRegistrationNumber                     IdentifierType = "blr_registration_number"
	IdentifierTypeAerFreeZoneLicense                        IdentifierType = "aer_free_zone_license"
	IdentifierTypeAerFreeZoneRegNo                          IdentifierType = "aer_free_zone_reg_no"
	IdentifierTypeCanNlCorporateRegistry                    IdentifierType = "can_nl_corporate_registry"
	IdentifierTypeCanDataAxleHash                           IdentifierType = "can_data_axle_hash"
	IdentifierTypeSvnAjpesZapstNumber                       IdentifierType = "svn_ajpes_zapst_number"
	IdentifierTypeUsaCorpwatchId                            IdentifierType = "usa_corpwatch_id"
	IdentifierTypeUsaDeFileNumber                           IdentifierType = "usa_de_file_number"
	IdentifierTypeImnCompanyNumber                          IdentifierType = "imn_company_number"
	IdentifierTypeSvnVatNumber                              IdentifierType = "svn_vat_number"
	IdentifierTypeXxxAcurisId                               IdentifierType = "xxx_acuris_id"
	IdentifierTypePakEgmId                                  IdentifierType = "pak_egm_id"
	IdentifierTypeUsaDeRegisteredAgentId                    IdentifierType = "usa_de_registered_agent_id"
	IdentifierTypeIcijOffshoreInternalId                    IdentifierType = "icij_offshore_internal_id"
	IdentifierTypeIcijOffshoreNodeId                        IdentifierType = "icij_offshore_node_id"
	IdentifierTypeEcuBranchId                               IdentifierType = "ecu_branch_id"
	IdentifierTypePseRegistrationId                         IdentifierType = "pse_registration_id"
	IdentifierTypeSrbMbNumber                               IdentifierType = "srb_mb_number"
	IdentifierTypeSrbPibNumber                              IdentifierType = "srb_pib_number"
	IdentifierTypeSrbBranchId                               IdentifierType = "srb_branch_id"
	IdentifierTypeRusBikCode                                IdentifierType = "rus_bik_code"
	IdentifierTypePanadataInternalId                        IdentifierType = "panadata_internal_id"
	IdentifierTypeSmrEconomicOperatorCode                   IdentifierType = "smr_economic_operator_code"
	IdentifierTypeUsaCtInternalId                           IdentifierType = "usa_ct_internal_id"
	IdentifierTypeAlei                                      IdentifierType = "alei"
	IdentifierTypeCanNsCorporateRegistry                    IdentifierType = "can_ns_corporate_registry"
	IdentifierTypeSomUbi                                    IdentifierType = "som_ubi"
	IdentifierTypeBhsTin                                    IdentifierType = "bhs_tin"
	IdentifierTypeItaReaNumber                              IdentifierType = "ita_rea_number"
	IdentifierTypeMexDenueClee                              IdentifierType = "mex_denue_clee"
	IdentifierTypeIhsOwnerCode                              IdentifierType = "ihs_owner_code"
	IdentifierTypeAusConsolidatedSanctionsReference         IdentifierType = "aus_consolidated_sanctions_reference"
	IdentifierTypeCheSecoSanctionNumber                     IdentifierType = "che_seco_sanction_number"
	IdentifierTypeGbrVatNo                                  IdentifierType = "gbr_vat_no"
	IdentifierTypeGbrCompanyNumber                          IdentifierType = "gbr_company_number"
	IdentifierTypeEspNif                                    IdentifierType = "esp_nif"
	IdentifierTypeUsaSamUeiNumber                           IdentifierType = "usa_sam_uei_number"
	IdentifierTypeUsaUsviCorpNumber                         IdentifierType = "usa_usvi_corp_number"
	IdentifierTypeNicNumeroUnico                            IdentifierType = "nic_numero_unico"
	IdentifierTypeCriCedulaJuridica                         IdentifierType = "cri_cedula_juridica"
	IdentifierTypeCriCedulaCitizenPerson                    IdentifierType = "cri_cedula_citizen_person"
	IdentifierTypeCriCedulaForeignPerson                    IdentifierType = "cri_cedula_foreign_person"
	IdentifierTypeBolMatricula                              IdentifierType = "bol_matricula"
	IdentifierTypeBolOldMatricula                           IdentifierType = "bol_old_matricula"
	IdentifierTypeNgaCrpRegInternalId                       IdentifierType = "nga_crp_reg_internal_id"
	IdentifierTypeNgaRegistrationSn                         IdentifierType = "nga_registration_sn"
	IdentifierTypeNgaNin                                    IdentifierType = "nga_nin"
	IdentifierTypeNgaDrivers                                IdentifierType = "nga_drivers"
	IdentifierTypeNgaTaxId                                  IdentifierType = "nga_tax_id"
	IdentifierTypeDmaBusinessRegistryInternalId             IdentifierType = "dma_business_registry_internal_id"
	IdentifierTypeCage                                      IdentifierType = "cage"
	IdentifierTypeAtgBusinessRegistryInternalId             IdentifierType = "atg_business_registry_internal_id"
	IdentifierTypeLcaBusinessRegistryInternalId             IdentifierType = "lca_business_registry_internal_id"
	IdentifierTypePrtTrustNumber                            IdentifierType = "prt_trust_number"
	IdentifierTypePrtVatNumber                              IdentifierType = "prt_vat_number"
	IdentifierTypeMarPassport                               IdentifierType = "mar_passport"
	IdentifierTypeCodPassport                               IdentifierType = "cod_passport"
	IdentifierTypePrkPassport                               IdentifierType = "prk_passport"
	IdentifierTypeSgpPassport                               IdentifierType = "sgp_passport"
	IdentifierTypeChnPassport                               IdentifierType = "chn_passport"
	IdentifierTypeOmnPassport                               IdentifierType = "omn_passport"
	IdentifierTypeCafPassport                               IdentifierType = "caf_passport"
	IdentifierTypeSsdPassport                               IdentifierType = "ssd_passport"
	IdentifierTypeTtoBizNumber                              IdentifierType = "tto_biz_number"
	IdentifierTypeTurTaxId                                  IdentifierType = "tur_tax_id"
	IdentifierTypeBmuRegistrarOfCompaniesNumber             IdentifierType = "bmu_registrar_of_companies_number"
	IdentifierTypeCodRccmNumber                             IdentifierType = "cod_rccm_number"
	IdentifierTypeCodRccmOhadaNumber                        IdentifierType = "cod_rccm_ohada_number"
	IdentifierTypeAreRegAuthNumber                          IdentifierType = "are_reg_auth_number"
	IdentifierTypePrkShipmentId                             IdentifierType = "prk_shipment_id"
	IdentifierTypeEcuImporterId                             IdentifierType = "ecu_importer_id"
	IdentifierTypeEcuExporterId                             IdentifierType = "ecu_exporter_id"
	IdentifierTypeEcuShipmentRefNo                          IdentifierType = "ecu_shipment_ref_no"
	IdentifierTypeXxxCrbMonitorEntityId                     IdentifierType = "xxx_crb_monitor_entity_id"
	IdentifierTypeXxxEdiGlobalIssuerId                      IdentifierType = "xxx_edi_global_issuer_id"
	IdentifierTypeXxxEdiGlobalSecurityId                    IdentifierType = "xxx_edi_global_security_id"
	IdentifierTypeChlImportExportControlId                  IdentifierType = "chl_import_export_control_id"
	IdentifierTypeChlImportManifestNumber                   IdentifierType = "chl_import_manifest_number"
	IdentifierTypeChlImporterExporterId                     IdentifierType = "chl_importer_exporter_id"
	IdentifierTypeArgImportExportId                         IdentifierType = "arg_import_export_id"
	IdentifierTypeArgPartialCuit                            IdentifierType = "arg_partial_cuit"
	IdentifierTypePanImporterExporterId                     IdentifierType = "pan_importer_exporter_id"
	IdentifierTypePanDeclarationNumber                      IdentifierType = "pan_declaration_number"
	IdentifierTypeMexShipmentNumber                         IdentifierType = "mex_shipment_number"
	IdentifierTypeCriExp                                    IdentifierType = "cri_exp"
	IdentifierTypeCriImp                                    IdentifierType = "cri_imp"
	IdentifierTypeCriOpNo                                   IdentifierType = "cri_op_no"
	IdentifierTypeColNur                                    IdentifierType = "col_nur"
	IdentifierTypeNplCoRegNo                                IdentifierType = "npl_co_reg_no"
	IdentifierTypeUsaSamExclusionsNumber                    IdentifierType = "usa_sam_exclusions_number"
	IdentifierTypeUsaNpiNumber                              IdentifierType = "usa_npi_number"
	IdentifierTypeUsaUpinNumber                             IdentifierType = "usa_upin_number"
	IdentifierTypeCanBcRegistrationNumber                   IdentifierType = "can_bc_registration_number"
	IdentifierTypeCanBusinessNumber                         IdentifierType = "can_business_number"
	IdentifierTypeChnCsrcNo                                 IdentifierType = "chn_csrc_no"
	IdentifierTypeUsaMnMasterId                             IdentifierType = "usa_mn_master_id"
	IdentifierTypeUsaMnFilingNumber                         IdentifierType = "usa_mn_filing_number"
	IdentifierTypeUsaInBizNo                                IdentifierType = "usa_in_biz_no"
	IdentifierTypeLloydsInternalVesselId                    IdentifierType = "lloyds_internal_vessel_id"
	IdentifierTypeLloydsInternalEntityId                    IdentifierType = "lloyds_internal_entity_id"
	IdentifierTypeUsaNhBusinessId                           IdentifierType = "usa_nh_business_id"
	IdentifierTypeGbrUkSanctionsId                          IdentifierType = "gbr_uk_sanctions_id"
	IdentifierTypeMontanaSosInternalEntityId                IdentifierType = "montana_sos_internal_entity_id"
	IdentifierTypeUsaMassSosCompanyId                       IdentifierType = "usa_mass_sos_company_id"
	IdentifierTypeChnResidentIdNumber                       IdentifierType = "chn_resident_id_number"
	IdentifierTypeUsaNjBusinessId                           IdentifierType = "usa_nj_business_id"
	IdentifierTypeUtahCorporateRegistryInternalEntityNumber IdentifierType = "utah_corporate_registry_internal_entity_number"
	IdentifierTypeUsaLaSosId                                IdentifierType = "usa_la_sos_id"
	IdentifierTypeUsaAlSosId                                IdentifierType = "usa_al_sos_id"
	IdentifierTypeUsaScCorpId                               IdentifierType = "usa_sc_corp_id"
	IdentifierTypeUsaKyOrgNo                                IdentifierType = "usa_ky_org_no"
	IdentifierTypeUsaIlFileNumber                           IdentifierType = "usa_il_file_number"
	IdentifierTypeIdnTransactionNumber                      IdentifierType = "idn_transaction_number"
	IdentifierTypeIdnUboOwnerId                             IdentifierType = "idn_ubo_owner_id"
	IdentifierTypeSweTaxNumber                              IdentifierType = "swe_tax_number"
	IdentifierTypePanadataInternalSid                       IdentifierType = "panadata_internal_sid"
	IdentifierTypePryTaxId                                  IdentifierType = "pry_tax_id"
	IdentifierTypePryShipmentNumber                         IdentifierType = "pry_shipment_number"
	IdentifierTypeTokyoStockExchangeNo                      IdentifierType = "tokyo_stock_exchange_no"
	IdentifierTypeSweFiId                                   IdentifierType = "swe_fi_id"
	IdentifierTypeDeuBafinId                                IdentifierType = "deu_bafin_id"
	IdentifierTypeGlobalTradeInternalShipmentId             IdentifierType = "global_trade_internal_shipment_id"
	IdentifierTypeChinaVesselInspectionRegistration         IdentifierType = "china_vessel_inspection_registration"
	IdentifierTypeChinaVesselRegistration                   IdentifierType = "china_vessel_registration"
	IdentifierTypeCcsRegistration                           IdentifierType = "ccs_registration"
	IdentifierTypeUsaOtiId                                  IdentifierType = "usa_oti_id"
	IdentifierTypeStockTicker                               IdentifierType = "stock_ticker"
	IdentifierTypeCanMbRegistry                             IdentifierType = "can_mb_registry"
	IdentifierTypeQuebecEnterpriseNumber                    IdentifierType = "quebec_enterprise_number"
	IdentifierTypeOntarioCorporationNumber                  IdentifierType = "ontario_corporation_number"
	IdentifierTypeSaskatchewanRegistryNumber                IdentifierType = "saskatchewan_registry_number"
	IdentifierTypeAlbertaCorporationNumber                  IdentifierType = "alberta_corporation_number"
	IdentifierTypeBraShipmentNumber                         IdentifierType = "bra_shipment_number"
	IdentifierTypeUkrSanctionsNazkCompanyInternalId         IdentifierType = "ukr_sanctions_nazk_company_internal_id"
	IdentifierTypeUkrSanctionsNazkPersonInternalId          IdentifierType = "ukr_sanctions_nazk_person_internal_id"
	IdentifierTypeEthereumAddress                           IdentifierType = "ethereum_address"
	IdentifierTypeDashAddress                               IdentifierType = "dash_address"
	IdentifierTypeZcashAddress                              IdentifierType = "zcash_address"
	IdentifierTypeUsaUsptoSerialNumber                      IdentifierType = "usa_uspto_serial_number"
	IdentifierTypeUsaUsptoRegNo                             IdentifierType = "usa_uspto_reg_no"
	IdentifierTypeUsaUsptoForeignApplicationNo              IdentifierType = "usa_uspto_foreign_application_no"
	IdentifierTypeUsaUsptoForeignRegNo                      IdentifierType = "usa_uspto_foreign_reg_no"
	IdentifierTypeWipoIntlRegNo                             IdentifierType = "wipo_intl_reg_no"
	IdentifierTypeWipoIntlRefNo                             IdentifierType = "wipo_intl_ref_no"
)

func NewIdentifierTypeFromString(s string) (IdentifierType, error) {
	switch s {
	case "cn_tianyancha_company_id":
		return IdentifierTypeCnTianyanchaCompanyId, nil
	case "cn_tianyancha_human_id":
		return IdentifierTypeCnTianyanchaHumanId, nil
	case "cn_unified_social_credit_code":
		return IdentifierTypeCnUnifiedSocialCreditCode, nil
	case "cn_registration_number":
		return IdentifierTypeCnRegistrationNumber, nil
	case "cn_organization_code":
		return IdentifierTypeCnOrganizationCode, nil
	case "cn_qichacha_internal_id":
		return IdentifierTypeCnQichachaInternalId, nil
	case "cn_hk_cr_number":
		return IdentifierTypeCnHkCrNumber, nil
	case "cn_hk_filing_number":
		return IdentifierTypeCnHkFilingNumber, nil
	case "bh_cr_number":
		return IdentifierTypeBhCrNumber, nil
	case "bh_cr_number_and_branch":
		return IdentifierTypeBhCrNumberAndBranch, nil
	case "jo_internal_id":
		return IdentifierTypeJoInternalId, nil
	case "jo_national_institution_number":
		return IdentifierTypeJoNationalInstitutionNumber, nil
	case "jo_institution_number":
		return IdentifierTypeJoInstitutionNumber, nil
	case "malta_company_number":
		return IdentifierTypeMaltaCompanyNumber, nil
	case "malta_national_id":
		return IdentifierTypeMaltaNationalId, nil
	case "malta_accountancy_registration_id":
		return IdentifierTypeMaltaAccountancyRegistrationId, nil
	case "uk_company_number":
		return IdentifierTypeUkCompanyNumber, nil
	case "uk_firm_reference_number":
		return IdentifierTypeUkFirmReferenceNumber, nil
	case "uk_person_number":
		return IdentifierTypeUkPersonNumber, nil
	case "mx_rfc_person":
		return IdentifierTypeMxRfcPerson, nil
	case "mx_curp":
		return IdentifierTypeMxCurp, nil
	case "mx_rfc_company":
		return IdentifierTypeMxRfcCompany, nil
	case "mx_office_fme":
		return IdentifierTypeMxOfficeFme, nil
	case "ru_inn":
		return IdentifierTypeRuInn, nil
	case "ru_ogrn":
		return IdentifierTypeRuOgrn, nil
	case "ven_saren_internal_employer_number":
		return IdentifierTypeVenSarenInternalEmployerNumber, nil
	case "bra_cnpj":
		return IdentifierTypeBraCnpj, nil
	case "ven_rif":
		return IdentifierTypeVenRif, nil
	case "ven_cedula_number":
		return IdentifierTypeVenCedulaNumber, nil
	case "mdv_registration_number":
		return IdentifierTypeMdvRegistrationNumber, nil
	case "ind_director_id_number":
		return IdentifierTypeIndDirectorIdNumber, nil
	case "ind_permanent_account_number":
		return IdentifierTypeIndPermanentAccountNumber, nil
	case "ind_corporate_id_number":
		return IdentifierTypeIndCorporateIdNumber, nil
	case "kaz_tin":
		return IdentifierTypeKazTin, nil
	case "kaz_bin":
		return IdentifierTypeKazBin, nil
	case "kaz_state_reg_num":
		return IdentifierTypeKazStateRegNum, nil
	case "kaz_okpo_num":
		return IdentifierTypeKazOkpoNum, nil
	case "kaz_identifier":
		return IdentifierTypeKazIdentifier, nil
	case "rks_registration_number":
		return IdentifierTypeRksRegistrationNumber, nil
	case "grc_gemi_number":
		return IdentifierTypeGrcGemiNumber, nil
	case "ven_rnc_number":
		return IdentifierTypeVenRncNumber, nil
	case "usa_va_reg_id":
		return IdentifierTypeUsaVaRegId, nil
	case "usa_ny_reg_id":
		return IdentifierTypeUsaNyRegId, nil
	case "usa_fei_number":
		return IdentifierTypeUsaFeiNumber, nil
	case "ukr_moj_id":
		return IdentifierTypeUkrMojId, nil
	case "mus_reg_id":
		return IdentifierTypeMusRegId, nil
	case "uk_title_number":
		return IdentifierTypeUkTitleNumber, nil
	case "mng_reg_number":
		return IdentifierTypeMngRegNumber, nil
	case "mne_reg_number":
		return IdentifierTypeMneRegNumber, nil
	case "kgz_reg_number":
		return IdentifierTypeKgzRegNumber, nil
	case "cn_importexport_code":
		return IdentifierTypeCnImportexportCode, nil
	case "prk_entity_id":
		return IdentifierTypePrkEntityId, nil
	case "prk_registration_id":
		return IdentifierTypePrkRegistrationId, nil
	case "yugoslav_master_citizen_num":
		return IdentifierTypeYugoslavMasterCitizenNum, nil
	case "bfa_entity_id":
		return IdentifierTypeBfaEntityId, nil
	case "afghan_tin_number":
		return IdentifierTypeAfghanTinNumber, nil
	case "afg_business_license":
		return IdentifierTypeAfgBusinessLicense, nil
	case "mdg_nif_number":
		return IdentifierTypeMdgNifNumber, nil
	case "mdg_stat_number":
		return IdentifierTypeMdgStatNumber, nil
	case "mdg_rcs_number":
		return IdentifierTypeMdgRcsNumber, nil
	case "lva_personal_code":
		return IdentifierTypeLvaPersonalCode, nil
	case "iban":
		return IdentifierTypeIban, nil
	case "lva_reg_number":
		return IdentifierTypeLvaRegNumber, nil
	case "twn_unified_number":
		return IdentifierTypeTwnUnifiedNumber, nil
	case "lux_rcs_number":
		return IdentifierTypeLuxRcsNumber, nil
	case "mkd_embs_number":
		return IdentifierTypeMkdEmbsNumber, nil
	case "mkd_embs_branch_number":
		return IdentifierTypeMkdEmbsBranchNumber, nil
	case "mda_idno_number":
		return IdentifierTypeMdaIdnoNumber, nil
	case "ury_ruc_number":
		return IdentifierTypeUryRucNumber, nil
	case "che_uid_number":
		return IdentifierTypeCheUidNumber, nil
	case "slv_commercial_reg_number":
		return IdentifierTypeSlvCommercialRegNumber, nil
	case "slv_uid_number":
		return IdentifierTypeSlvUidNumber, nil
	case "mato_grosso_legal_id":
		return IdentifierTypeMatoGrossoLegalId, nil
	case "lei":
		return IdentifierTypeLei, nil
	case "vat":
		return IdentifierTypeVat, nil
	case "ita_fiscal_code":
		return IdentifierTypeItaFiscalCode, nil
	case "rio_de_janeiro_legal_id":
		return IdentifierTypeRioDeJaneiroLegalId, nil
	case "isl_tin_number":
		return IdentifierTypeIslTinNumber, nil
	case "lao_enterprise_number":
		return IdentifierTypeLaoEnterpriseNumber, nil
	case "svk_ico_number":
		return IdentifierTypeSvkIcoNumber, nil
	case "khm_tin_number":
		return IdentifierTypeKhmTinNumber, nil
	case "cze_ico_number":
		return IdentifierTypeCzeIcoNumber, nil
	case "irn_national_id":
		return IdentifierTypeIrnNationalId, nil
	case "ecu_ruc_number":
		return IdentifierTypeEcuRucNumber, nil
	case "grc_vat_number":
		return IdentifierTypeGrcVatNumber, nil
	case "can_corporation_number":
		return IdentifierTypeCanCorporationNumber, nil
	case "can_cra_program_account_number":
		return IdentifierTypeCanCraProgramAccountNumber, nil
	case "mne_pib":
		return IdentifierTypeMnePib, nil
	case "chl_cedula_number":
		return IdentifierTypeChlCedulaNumber, nil
	case "bra_case_number":
		return IdentifierTypeBraCaseNumber, nil
	case "ind_llpin":
		return IdentifierTypeIndLlpin, nil
	case "ind_fcrn":
		return IdentifierTypeIndFcrn, nil
	case "bmu_registration_number":
		return IdentifierTypeBmuRegistrationNumber, nil
	case "bra_cpf_number":
		return IdentifierTypeBraCpfNumber, nil
	case "irn_national_number":
		return IdentifierTypeIrnNationalNumber, nil
	case "chn_customs_registration_code":
		return IdentifierTypeChnCustomsRegistrationCode, nil
	case "lie_public_reg_no":
		return IdentifierTypeLiePublicRegNo, nil
	case "cn_tax_identification_number":
		return IdentifierTypeCnTaxIdentificationNumber, nil
	case "mac_registration_no":
		return IdentifierTypeMacRegistrationNo, nil
	case "siger_internal_id":
		return IdentifierTypeSigerInternalId, nil
	case "lbn_national_id":
		return IdentifierTypeLbnNationalId, nil
	case "int_maritime_org_id":
		return IdentifierTypeIntMaritimeOrgId, nil
	case "ru_ship_register_id":
		return IdentifierTypeRuShipRegisterId, nil
	case "sayari_internal_identifier":
		return IdentifierTypeSayariInternalIdentifier, nil
	case "aruba_chamber_of_commerce_id":
		return IdentifierTypeArubaChamberOfCommerceId, nil
	case "imo_no":
		return IdentifierTypeImoNo, nil
	case "vgb_company_number":
		return IdentifierTypeVgbCompanyNumber, nil
	case "yem_coc_registration_number":
		return IdentifierTypeYemCocRegistrationNumber, nil
	case "mys_id_card_no":
		return IdentifierTypeMysIdCardNo, nil
	case "mys_company_reg_no":
		return IdentifierTypeMysCompanyRegNo, nil
	case "pry_ruc_number":
		return IdentifierTypePryRucNumber, nil
	case "pry_cedula_number":
		return IdentifierTypePryCedulaNumber, nil
	case "pry_old_ruc_number":
		return IdentifierTypePryOldRucNumber, nil
	case "rccm_no":
		return IdentifierTypeRccmNo, nil
	case "bra_rg_number":
		return IdentifierTypeBraRgNumber, nil
	case "ninea_no":
		return IdentifierTypeNineaNo, nil
	case "alb_tax_id":
		return IdentifierTypeAlbTaxId, nil
	case "alb_registration_number":
		return IdentifierTypeAlbRegistrationNumber, nil
	case "arg_igj_number":
		return IdentifierTypeArgIgjNumber, nil
	case "arg_dni_number":
		return IdentifierTypeArgDniNumber, nil
	case "arg_cuit_number":
		return IdentifierTypeArgCuitNumber, nil
	case "arg_cuil_number":
		return IdentifierTypeArgCuilNumber, nil
	case "arg_cdi_number":
		return IdentifierTypeArgCdiNumber, nil
	case "bih_mbs_number":
		return IdentifierTypeBihMbsNumber, nil
	case "bih_jib_number":
		return IdentifierTypeBihJibNumber, nil
	case "bih_customs_number":
		return IdentifierTypeBihCustomsNumber, nil
	case "usa_puerto_rico_register_number":
		return IdentifierTypeUsaPuertoRicoRegisterNumber, nil
	case "dji_rcs_number":
		return IdentifierTypeDjiRcsNumber, nil
	case "cri_cedula_number":
		return IdentifierTypeCriCedulaNumber, nil
	case "moz_id_number":
		return IdentifierTypeMozIdNumber, nil
	case "moz_nuit_person":
		return IdentifierTypeMozNuitPerson, nil
	case "moz_nuit_co":
		return IdentifierTypeMozNuitCo, nil
	case "moz_passport":
		return IdentifierTypeMozPassport, nil
	case "moz_dire_no":
		return IdentifierTypeMozDireNo, nil
	case "moz_voter_no":
		return IdentifierTypeMozVoterNo, nil
	case "moz_nuel_no":
		return IdentifierTypeMozNuelNo, nil
	case "irq_voter_id":
		return IdentifierTypeIrqVoterId, nil
	case "jor_voter_card_no":
		return IdentifierTypeJorVoterCardNo, nil
	case "jor_id_no":
		return IdentifierTypeJorIdNo, nil
	case "per_ruc_no":
		return IdentifierTypePerRucNo, nil
	case "ecu_company_id":
		return IdentifierTypeEcuCompanyId, nil
	case "usa_ny_dos_id":
		return IdentifierTypeUsaNyDosId, nil
	case "bfa_rccm_number":
		return IdentifierTypeBfaRccmNumber, nil
	case "fl_prop_folio":
		return IdentifierTypeFlPropFolio, nil
	case "qat_qfc_number":
		return IdentifierTypeQatQfcNumber, nil
	case "grc_afm_number":
		return IdentifierTypeGrcAfmNumber, nil
	case "vnm_enterprise_code":
		return IdentifierTypeVnmEnterpriseCode, nil
	case "tha_registration_no":
		return IdentifierTypeThaRegistrationNo, nil
	case "vnm_citizenship_no":
		return IdentifierTypeVnmCitizenshipNo, nil
	case "vnm_person_id_no":
		return IdentifierTypeVnmPersonIdNo, nil
	case "arg_lib_civica_number":
		return IdentifierTypeArgLibCivicaNumber, nil
	case "arg_lib_enrolamiento_number":
		return IdentifierTypeArgLibEnrolamientoNumber, nil
	case "nzl_nzbn":
		return IdentifierTypeNzlNzbn, nil
	case "nzl_co_no":
		return IdentifierTypeNzlCoNo, nil
	case "usa_ofac_sdn_number":
		return IdentifierTypeUsaOfacSdnNumber, nil
	case "swift_bic_code":
		return IdentifierTypeSwiftBicCode, nil
	case "duns_number":
		return IdentifierTypeDunsNumber, nil
	case "bitcoin_address":
		return IdentifierTypeBitcoinAddress, nil
	case "litecoin_address":
		return IdentifierTypeLitecoinAddress, nil
	case "rus_micex_code":
		return IdentifierTypeRusMicexCode, nil
	case "tx_prop_id":
		return IdentifierTypeTxPropId, nil
	case "tx_pacs_id":
		return IdentifierTypeTxPacsId, nil
	case "tx_land_id":
		return IdentifierTypeTxLandId, nil
	case "png_ipa_reg_id":
		return IdentifierTypePngIpaRegId, nil
	case "gtm_nit_number":
		return IdentifierTypeGtmNitNumber, nil
	case "gtm_cui_number":
		return IdentifierTypeGtmCuiNumber, nil
	case "dom_rnc":
		return IdentifierTypeDomRnc, nil
	case "qat_cr_number":
		return IdentifierTypeQatCrNumber, nil
	case "isin":
		return IdentifierTypeIsin, nil
	case "usa_fl_document_no":
		return IdentifierTypeUsaFlDocumentNo, nil
	case "usa_fl_fic_name_reg_no":
		return IdentifierTypeUsaFlFicNameRegNo, nil
	case "bra_servidor_portal":
		return IdentifierTypeBraServidorPortal, nil
	case "bra_codigo_da_unidade_organizacional":
		return IdentifierTypeBraCodigoDaUnidadeOrganizacional, nil
	case "usa_sec_cik_number":
		return IdentifierTypeUsaSecCikNumber, nil
	case "hr_mbs":
		return IdentifierTypeHrMbs, nil
	case "hr_oib":
		return IdentifierTypeHrOib, nil
	case "slv_numero_identificacion_tributaria":
		return IdentifierTypeSlvNumeroIdentificacionTributaria, nil
	case "slv_mcas":
		return IdentifierTypeSlvMcas, nil
	case "aus_company_number":
		return IdentifierTypeAusCompanyNumber, nil
	case "aus_business_number":
		return IdentifierTypeAusBusinessNumber, nil
	case "deu_registernummer":
		return IdentifierTypeDeuRegisternummer, nil
	case "usa_irs_ein":
		return IdentifierTypeUsaIrsEin, nil
	case "hong_kong_case_number":
		return IdentifierTypeHongKongCaseNumber, nil
	case "irn_coc_internal_id":
		return IdentifierTypeIrnCocInternalId, nil
	case "pan_folio_ficha_id":
		return IdentifierTypePanFolioFichaId, nil
	case "pan_cedula_number":
		return IdentifierTypePanCedulaNumber, nil
	case "xxx_cedar_rose_uid":
		return IdentifierTypeXxxCedarRoseUid, nil
	case "xxx_rccm":
		return IdentifierTypeXxxRccm, nil
	case "vnm_dichvuthongtin_internal_id":
		return IdentifierTypeVnmDichvuthongtinInternalId, nil
	case "xxx_intel_internal_id":
		return IdentifierTypeXxxIntelInternalId, nil
	case "usa_washington_state_ubi":
		return IdentifierTypeUsaWashingtonStateUbi, nil
	case "nga_registration_number":
		return IdentifierTypeNgaRegistrationNumber, nil
	case "ng_check_internal_id":
		return IdentifierTypeNgCheckInternalId, nil
	case "nyc_bbl":
		return IdentifierTypeNycBbl, nil
	case "nyc_crfn":
		return IdentifierTypeNycCrfn, nil
	case "tx_corp_file_num":
		return IdentifierTypeTxCorpFileNum, nil
	case "tx_tax_id":
		return IdentifierTypeTxTaxId, nil
	case "usa_ga_business_id":
		return IdentifierTypeUsaGaBusinessId, nil
	case "phl_pse_id":
		return IdentifierTypePhlPseId, nil
	case "phl_sec_id":
		return IdentifierTypePhlSecId, nil
	case "phl_tin":
		return IdentifierTypePhlTin, nil
	case "afg_passport":
		return IdentifierTypeAfgPassport, nil
	case "irn_passport":
		return IdentifierTypeIrnPassport, nil
	case "kwt_passport":
		return IdentifierTypeKwtPassport, nil
	case "lby_passport":
		return IdentifierTypeLbyPassport, nil
	case "pak_passport":
		return IdentifierTypePakPassport, nil
	case "rus_passport":
		return IdentifierTypeRusPassport, nil
	case "tun_passport":
		return IdentifierTypeTunPassport, nil
	case "yem_passport":
		return IdentifierTypeYemPassport, nil
	case "un_sanction_prn":
		return IdentifierTypeUnSanctionPrn, nil
	case "eu_sanction_rn":
		return IdentifierTypeEuSanctionRn, nil
	case "ca_lp_file_num":
		return IdentifierTypeCaLpFileNum, nil
	case "tx_entity_filing_num":
		return IdentifierTypeTxEntityFilingNum, nil
	case "usa_social_security_number":
		return IdentifierTypeUsaSocialSecurityNumber, nil
	case "usa_wy_party_id":
		return IdentifierTypeUsaWyPartyId, nil
	case "usa_wy_filing_id":
		return IdentifierTypeUsaWyFilingId, nil
	case "usa_wy_internal_filing_id":
		return IdentifierTypeUsaWyInternalFilingId, nil
	case "usa_wy_filing_num":
		return IdentifierTypeUsaWyFilingNum, nil
	case "usa_or_regno":
		return IdentifierTypeUsaOrRegno, nil
	case "usa_nv_corpno":
		return IdentifierTypeUsaNvCorpno, nil
	case "usa_nv_bizid":
		return IdentifierTypeUsaNvBizid, nil
	case "prk_internal_trade_id":
		return IdentifierTypePrkInternalTradeId, nil
	case "lso_corpreg_id":
		return IdentifierTypeLsoCorpregId, nil
	case "uzb_tin_number":
		return IdentifierTypeUzbTinNumber, nil
	case "ca_corporate_id_num":
		return IdentifierTypeCaCorporateIdNum, nil
	case "gbr_hm_treasury_sanction_group_id":
		return IdentifierTypeGbrHmTreasurySanctionGroupId, nil
	case "gbr_ipo_trademark_reg_no":
		return IdentifierTypeGbrIpoTrademarkRegNo, nil
	case "usa_ga_control_no":
		return IdentifierTypeUsaGaControlNo, nil
	case "hnd_coc_company_registration_number":
		return IdentifierTypeHndCocCompanyRegistrationNumber, nil
	case "mne_property_uid":
		return IdentifierTypeMnePropertyUid, nil
	case "phl_bnn":
		return IdentifierTypePhlBnn, nil
	case "rou_company_registration_code":
		return IdentifierTypeRouCompanyRegistrationCode, nil
	case "rou_identity_card":
		return IdentifierTypeRouIdentityCard, nil
	case "rou_personal_id_number":
		return IdentifierTypeRouPersonalIdNumber, nil
	case "cub_cod":
		return IdentifierTypeCubCod, nil
	case "fl_prop_folio_dade":
		return IdentifierTypeFlPropFolioDade, nil
	case "per_dni_no":
		return IdentifierTypePerDniNo, nil
	case "per_carne_de_extranjeria":
		return IdentifierTypePerCarneDeExtranjeria, nil
	case "fra_siren":
		return IdentifierTypeFraSiren, nil
	case "fra_siret":
		return IdentifierTypeFraSiret, nil
	case "cze_file_number":
		return IdentifierTypeCzeFileNumber, nil
	case "esp_borme_reg_id":
		return IdentifierTypeEspBormeRegId, nil
	case "mex_tm_no":
		return IdentifierTypeMexTmNo, nil
	case "mus_file_no":
		return IdentifierTypeMusFileNo, nil
	case "col_nit_no":
		return IdentifierTypeColNitNo, nil
	case "jpn_corporate_no":
		return IdentifierTypeJpnCorporateNo, nil
	case "usa_cgac_agency_code":
		return IdentifierTypeUsaCgacAgencyCode, nil
	case "usa_govt_agency_id":
		return IdentifierTypeUsaGovtAgencyId, nil
	case "usa_govt_office_id":
		return IdentifierTypeUsaGovtOfficeId, nil
	case "col_cedula_no":
		return IdentifierTypeColCedulaNo, nil
	case "col_secop_no":
		return IdentifierTypeColSecopNo, nil
	case "jordan_company_no":
		return IdentifierTypeJordanCompanyNo, nil
	case "dnk_cvr":
		return IdentifierTypeDnkCvr, nil
	case "dnk_production_unit_no":
		return IdentifierTypeDnkProductionUnitNo, nil
	case "dnk_entity":
		return IdentifierTypeDnkEntity, nil
	case "nor_org_no":
		return IdentifierTypeNorOrgNo, nil
	case "swe_org_no":
		return IdentifierTypeSweOrgNo, nil
	case "usa_co_reg_no":
		return IdentifierTypeUsaCoRegNo, nil
	case "usa_ia_corp_no":
		return IdentifierTypeUsaIaCorpNo, nil
	case "sgp_unqiue_entity_number":
		return IdentifierTypeSgpUnqiueEntityNumber, nil
	case "usa_ak_entity_no":
		return IdentifierTypeUsaAkEntityNo, nil
	case "usa_oh_charter_num":
		return IdentifierTypeUsaOhCharterNum, nil
	case "tur_istanbul_coc_reg_no":
		return IdentifierTypeTurIstanbulCocRegNo, nil
	case "tur_mersis_number":
		return IdentifierTypeTurMersisNumber, nil
	case "che_ch_id_number":
		return IdentifierTypeCheChIdNumber, nil
	case "are_difc_reg_no":
		return IdentifierTypeAreDifcRegNo, nil
	case "idn_tax_id":
		return IdentifierTypeIdnTaxId, nil
	case "usa_vt_biz_id":
		return IdentifierTypeUsaVtBizId, nil
	case "usa_wv_reg_id":
		return IdentifierTypeUsaWvRegId, nil
	case "usa_ms_biz_id":
		return IdentifierTypeUsaMsBizId, nil
	case "usa_id_control_no":
		return IdentifierTypeUsaIdControlNo, nil
	case "usa_id_party_id":
		return IdentifierTypeUsaIdPartyId, nil
	case "irn_coc_internal_id_cardno":
		return IdentifierTypeIrnCocInternalIdCardno, nil
	case "usa_az_corp_reg_entity_num":
		return IdentifierTypeUsaAzCorpRegEntityNum, nil
	case "usa_ok_filing_no":
		return IdentifierTypeUsaOkFilingNo, nil
	case "usa_tn_control_no":
		return IdentifierTypeUsaTnControlNo, nil
	case "usa_tn_party_id":
		return IdentifierTypeUsaTnPartyId, nil
	case "usa_ks_biz_id":
		return IdentifierTypeUsaKsBizId, nil
	case "usa_hi_corporate_registry_id":
		return IdentifierTypeUsaHiCorporateRegistryId, nil
	case "usa_hi_corporate_registry_person_id":
		return IdentifierTypeUsaHiCorporateRegistryPersonId, nil
	case "pol_krs_number":
		return IdentifierTypePolKrsNumber, nil
	case "pol_regon_number":
		return IdentifierTypePolRegonNumber, nil
	case "pol_nip_number":
		return IdentifierTypePolNipNumber, nil
	case "pol_rejestr_person_id":
		return IdentifierTypePolRejestrPersonId, nil
	case "arm_vat_no":
		return IdentifierTypeArmVatNo, nil
	case "arm_enterprise_code":
		return IdentifierTypeArmEnterpriseCode, nil
	case "arm_registration_no":
		return IdentifierTypeArmRegistrationNo, nil
	case "usa_me_corp_id":
		return IdentifierTypeUsaMeCorpId, nil
	case "cyp_reg_no":
		return IdentifierTypeCypRegNo, nil
	case "usa_nd_control_id":
		return IdentifierTypeUsaNdControlId, nil
	case "usa_mi_corp_id":
		return IdentifierTypeUsaMiCorpId, nil
	case "usa_mi_corp_id_old":
		return IdentifierTypeUsaMiCorpIdOld, nil
	case "usa_hi_trade_name_cert":
		return IdentifierTypeUsaHiTradeNameCert, nil
	case "usa_dc_entity_no":
		return IdentifierTypeUsaDcEntityNo, nil
	case "usa_va_old_reg_id":
		return IdentifierTypeUsaVaOldRegId, nil
	case "usa_consolidated_screening_list_synthetic_id":
		return IdentifierTypeUsaConsolidatedScreeningListSyntheticId, nil
	case "usa_ar_filing_no":
		return IdentifierTypeUsaArFilingNo, nil
	case "usa_nc_internal_id":
		return IdentifierTypeUsaNcInternalId, nil
	case "usa_ne_acct_no":
		return IdentifierTypeUsaNeAcctNo, nil
	case "usa_ne_agent_id":
		return IdentifierTypeUsaNeAgentId, nil
	case "usa_nm_business_no":
		return IdentifierTypeUsaNmBusinessNo, nil
	case "usa_nm_license_id":
		return IdentifierTypeUsaNmLicenseId, nil
	case "usa_dc_file_no":
		return IdentifierTypeUsaDcFileNo, nil
	case "usa_ri_fei_no":
		return IdentifierTypeUsaRiFeiNo, nil
	case "internal_md5":
		return IdentifierTypeInternalMd5, nil
	case "usa_mo_corp_id":
		return IdentifierTypeUsaMoCorpId, nil
	case "usa_wi_dfi_id":
		return IdentifierTypeUsaWiDfiId, nil
	case "geo_identification_code":
		return IdentifierTypeGeoIdentificationCode, nil
	case "geo_personal_number":
		return IdentifierTypeGeoPersonalNumber, nil
	case "geo_state_registration_number":
		return IdentifierTypeGeoStateRegistrationNumber, nil
	case "mac_raem_case_url_id":
		return IdentifierTypeMacRaemCaseUrlId, nil
	case "rou_company_tin":
		return IdentifierTypeRouCompanyTin, nil
	case "usa_md_dpt_tax":
		return IdentifierTypeUsaMdDptTax, nil
	case "usa_sd_corp_id":
		return IdentifierTypeUsaSdCorpId, nil
	case "hnd_tegucigalpa_matricula":
		return IdentifierTypeHndTegucigalpaMatricula, nil
	case "usa_fl_property_id":
		return IdentifierTypeUsaFlPropertyId, nil
	case "usa_fl_property_mp_id":
		return IdentifierTypeUsaFlPropertyMpId, nil
	case "usa_fl_property_state_par_id":
		return IdentifierTypeUsaFlPropertyStateParId, nil
	case "mex_cluni":
		return IdentifierTypeMexCluni, nil
	case "usa_pa_corporate_registry_id":
		return IdentifierTypeUsaPaCorporateRegistryId, nil
	case "pak_ind_ntn":
		return IdentifierTypePakIndNtn, nil
	case "pak_co_ntn":
		return IdentifierTypePakCoNtn, nil
	case "mex_rnie":
		return IdentifierTypeMexRnie, nil
	case "pak_ngo_reg_no":
		return IdentifierTypePakNgoRegNo, nil
	case "iraqi_stock_exchange_symbol":
		return IdentifierTypeIraqiStockExchangeSymbol, nil
	case "bgr_uic":
		return IdentifierTypeBgrUic, nil
	case "bgr_egn_hashed":
		return IdentifierTypeBgrEgnHashed, nil
	case "south_africa_enterprise_number":
		return IdentifierTypeSouthAfricaEnterpriseNumber, nil
	case "south_africa_passport_number":
		return IdentifierTypeSouthAfricaPassportNumber, nil
	case "nld_kvk_number":
		return IdentifierTypeNldKvkNumber, nil
	case "nld_kvk_branch_number":
		return IdentifierTypeNldKvkBranchNumber, nil
	case "usa_central_registration_depository_number":
		return IdentifierTypeUsaCentralRegistrationDepositoryNumber, nil
	case "usa_sec_file_number_bd":
		return IdentifierTypeUsaSecFileNumberBd, nil
	case "chn_cnipa_tm":
		return IdentifierTypeChnCnipaTm, nil
	case "cyp_passport":
		return IdentifierTypeCypPassport, nil
	case "cyp_infocredit_entity_id":
		return IdentifierTypeCypInfocreditEntityId, nil
	case "cyp_id_card":
		return IdentifierTypeCypIdCard, nil
	case "cyp_ssn":
		return IdentifierTypeCypSsn, nil
	case "aut_firmenbuch_no":
		return IdentifierTypeAutFirmenbuchNo, nil
	case "swe_per_id_no":
		return IdentifierTypeSwePerIdNo, nil
	case "chn_shanghai_stock_exchange_company_code":
		return IdentifierTypeChnShanghaiStockExchangeCompanyCode, nil
	case "usa_sec_file_number_ia":
		return IdentifierTypeUsaSecFileNumberIa, nil
	case "chn_shenzen_sec_code":
		return IdentifierTypeChnShenzenSecCode, nil
	case "usa_ct_business_id":
		return IdentifierTypeUsaCtBusinessId, nil
	case "ecu_cedula_number":
		return IdentifierTypeEcuCedulaNumber, nil
	case "hkg_stock_code":
		return IdentifierTypeHkgStockCode, nil
	case "can_bc_company_registration_id":
		return IdentifierTypeCanBcCompanyRegistrationId, nil
	case "can_bc_extraprovincial_registration_id":
		return IdentifierTypeCanBcExtraprovincialRegistrationId, nil
	case "ltu_company_registration_code":
		return IdentifierTypeLtuCompanyRegistrationCode, nil
	case "usa_sec_private_fund":
		return IdentifierTypeUsaSecPrivateFund, nil
	case "lva_insolvency_proceeding_id":
		return IdentifierTypeLvaInsolvencyProceedingId, nil
	case "chn_cninfo_internal_shareholder_id":
		return IdentifierTypeChnCninfoInternalShareholderId, nil
	case "euid":
		return IdentifierTypeEuid, nil
	case "fin_business_id":
		return IdentifierTypeFinBusinessId, nil
	case "est_business_reg_code":
		return IdentifierTypeEstBusinessRegCode, nil
	case "usa_cusip_number":
		return IdentifierTypeUsaCusipNumber, nil
	case "svn_co_reg_no":
		return IdentifierTypeSvnCoRegNo, nil
	case "isr_company_number":
		return IdentifierTypeIsrCompanyNumber, nil
	case "rks_business_number":
		return IdentifierTypeRksBusinessNumber, nil
	case "rks_fiscal_number":
		return IdentifierTypeRksFiscalNumber, nil
	case "jpn_edinet_code":
		return IdentifierTypeJpnEdinetCode, nil
	case "bel_enterprise_number":
		return IdentifierTypeBelEnterpriseNumber, nil
	case "bel_establishment_number":
		return IdentifierTypeBelEstablishmentNumber, nil
	case "aus_afs_licence_number":
		return IdentifierTypeAusAfsLicenceNumber, nil
	case "aus_afs_rep_number":
		return IdentifierTypeAusAfsRepNumber, nil
	case "aus_adv_number":
		return IdentifierTypeAusAdvNumber, nil
	case "aus_credit_licence_number":
		return IdentifierTypeAusCreditLicenceNumber, nil
	case "aus_credit_rep_number":
		return IdentifierTypeAusCreditRepNumber, nil
	case "dart_cik":
		return IdentifierTypeDartCik, nil
	case "krx_ticker_code":
		return IdentifierTypeKrxTickerCode, nil
	case "kor_corporate_registration_number":
		return IdentifierTypeKorCorporateRegistrationNumber, nil
	case "kor_business_tin":
		return IdentifierTypeKorBusinessTin, nil
	case "est_personal_id":
		return IdentifierTypeEstPersonalId, nil
	case "bze_bicar_reg_no":
		return IdentifierTypeBzeBicarRegNo, nil
	case "usa_il_chicago_account_number":
		return IdentifierTypeUsaIlChicagoAccountNumber, nil
	case "cym_co_no":
		return IdentifierTypeCymCoNo, nil
	case "ggy_corporate_reg_number":
		return IdentifierTypeGgyCorporateRegNumber, nil
	case "jey_corporate_reg_number":
		return IdentifierTypeJeyCorporateRegNumber, nil
	case "cok_corp_reg_corpid":
		return IdentifierTypeCokCorpRegCorpid, nil
	case "cok_corp_reg_corpofficerid":
		return IdentifierTypeCokCorpRegCorpofficerid, nil
	case "cok_corp_reg_number":
		return IdentifierTypeCokCorpRegNumber, nil
	case "mex_open_contracts_internal_id":
		return IdentifierTypeMexOpenContractsInternalId, nil
	case "gib_corp_reg_number":
		return IdentifierTypeGibCorpRegNumber, nil
	case "dom_onapi_num":
		return IdentifierTypeDomOnapiNum, nil
	case "rus_tourist_obj":
		return IdentifierTypeRusTouristObj, nil
	case "bill_of_lading":
		return IdentifierTypeBillOfLading, nil
	case "twn_factory_registration_number":
		return IdentifierTypeTwnFactoryRegistrationNumber, nil
	case "twn_factory_establishment_permit_case_number":
		return IdentifierTypeTwnFactoryEstablishmentPermitCaseNumber, nil
	case "ken_personal_id":
		return IdentifierTypeKenPersonalId, nil
	case "col_dian_numero_formulario":
		return IdentifierTypeColDianNumeroFormulario, nil
	case "vut_corp_reg_number":
		return IdentifierTypeVutCorpRegNumber, nil
	case "geo_legal_code":
		return IdentifierTypeGeoLegalCode, nil
	case "mmr_corp_id":
		return IdentifierTypeMmrCorpId, nil
	case "mmr_reg_no":
		return IdentifierTypeMmrRegNo, nil
	case "mmr_prior_reg_no":
		return IdentifierTypeMmrPriorRegNo, nil
	case "mmr_officer_id":
		return IdentifierTypeMmrOfficerId, nil
	case "arm_passport_number":
		return IdentifierTypeArmPassportNumber, nil
	case "ukr_reg_num":
		return IdentifierTypeUkrRegNum, nil
	case "validatis_number":
		return IdentifierTypeValidatisNumber, nil
	case "are_dubai_land_case_no":
		return IdentifierTypeAreDubaiLandCaseNo, nil
	case "ago_matricula_number":
		return IdentifierTypeAgoMatriculaNumber, nil
	case "ago_nif_number":
		return IdentifierTypeAgoNifNumber, nil
	case "mmr_personal_id_no":
		return IdentifierTypeMmrPersonalIdNo, nil
	case "blr_registration_number":
		return IdentifierTypeBlrRegistrationNumber, nil
	case "aer_free_zone_license":
		return IdentifierTypeAerFreeZoneLicense, nil
	case "aer_free_zone_reg_no":
		return IdentifierTypeAerFreeZoneRegNo, nil
	case "can_nl_corporate_registry":
		return IdentifierTypeCanNlCorporateRegistry, nil
	case "can_data_axle_hash":
		return IdentifierTypeCanDataAxleHash, nil
	case "svn_ajpes_zapst_number":
		return IdentifierTypeSvnAjpesZapstNumber, nil
	case "usa_corpwatch_id":
		return IdentifierTypeUsaCorpwatchId, nil
	case "usa_de_file_number":
		return IdentifierTypeUsaDeFileNumber, nil
	case "imn_company_number":
		return IdentifierTypeImnCompanyNumber, nil
	case "svn_vat_number":
		return IdentifierTypeSvnVatNumber, nil
	case "xxx_acuris_id":
		return IdentifierTypeXxxAcurisId, nil
	case "pak_egm_id":
		return IdentifierTypePakEgmId, nil
	case "usa_de_registered_agent_id":
		return IdentifierTypeUsaDeRegisteredAgentId, nil
	case "icij_offshore_internal_id":
		return IdentifierTypeIcijOffshoreInternalId, nil
	case "icij_offshore_node_id":
		return IdentifierTypeIcijOffshoreNodeId, nil
	case "ecu_branch_id":
		return IdentifierTypeEcuBranchId, nil
	case "pse_registration_id":
		return IdentifierTypePseRegistrationId, nil
	case "srb_mb_number":
		return IdentifierTypeSrbMbNumber, nil
	case "srb_pib_number":
		return IdentifierTypeSrbPibNumber, nil
	case "srb_branch_id":
		return IdentifierTypeSrbBranchId, nil
	case "rus_bik_code":
		return IdentifierTypeRusBikCode, nil
	case "panadata_internal_id":
		return IdentifierTypePanadataInternalId, nil
	case "smr_economic_operator_code":
		return IdentifierTypeSmrEconomicOperatorCode, nil
	case "usa_ct_internal_id":
		return IdentifierTypeUsaCtInternalId, nil
	case "alei":
		return IdentifierTypeAlei, nil
	case "can_ns_corporate_registry":
		return IdentifierTypeCanNsCorporateRegistry, nil
	case "som_ubi":
		return IdentifierTypeSomUbi, nil
	case "bhs_tin":
		return IdentifierTypeBhsTin, nil
	case "ita_rea_number":
		return IdentifierTypeItaReaNumber, nil
	case "mex_denue_clee":
		return IdentifierTypeMexDenueClee, nil
	case "ihs_owner_code":
		return IdentifierTypeIhsOwnerCode, nil
	case "aus_consolidated_sanctions_reference":
		return IdentifierTypeAusConsolidatedSanctionsReference, nil
	case "che_seco_sanction_number":
		return IdentifierTypeCheSecoSanctionNumber, nil
	case "gbr_vat_no":
		return IdentifierTypeGbrVatNo, nil
	case "gbr_company_number":
		return IdentifierTypeGbrCompanyNumber, nil
	case "esp_nif":
		return IdentifierTypeEspNif, nil
	case "usa_sam_uei_number":
		return IdentifierTypeUsaSamUeiNumber, nil
	case "usa_usvi_corp_number":
		return IdentifierTypeUsaUsviCorpNumber, nil
	case "nic_numero_unico":
		return IdentifierTypeNicNumeroUnico, nil
	case "cri_cedula_juridica":
		return IdentifierTypeCriCedulaJuridica, nil
	case "cri_cedula_citizen_person":
		return IdentifierTypeCriCedulaCitizenPerson, nil
	case "cri_cedula_foreign_person":
		return IdentifierTypeCriCedulaForeignPerson, nil
	case "bol_matricula":
		return IdentifierTypeBolMatricula, nil
	case "bol_old_matricula":
		return IdentifierTypeBolOldMatricula, nil
	case "nga_crp_reg_internal_id":
		return IdentifierTypeNgaCrpRegInternalId, nil
	case "nga_registration_sn":
		return IdentifierTypeNgaRegistrationSn, nil
	case "nga_nin":
		return IdentifierTypeNgaNin, nil
	case "nga_drivers":
		return IdentifierTypeNgaDrivers, nil
	case "nga_tax_id":
		return IdentifierTypeNgaTaxId, nil
	case "dma_business_registry_internal_id":
		return IdentifierTypeDmaBusinessRegistryInternalId, nil
	case "cage":
		return IdentifierTypeCage, nil
	case "atg_business_registry_internal_id":
		return IdentifierTypeAtgBusinessRegistryInternalId, nil
	case "lca_business_registry_internal_id":
		return IdentifierTypeLcaBusinessRegistryInternalId, nil
	case "prt_trust_number":
		return IdentifierTypePrtTrustNumber, nil
	case "prt_vat_number":
		return IdentifierTypePrtVatNumber, nil
	case "mar_passport":
		return IdentifierTypeMarPassport, nil
	case "cod_passport":
		return IdentifierTypeCodPassport, nil
	case "prk_passport":
		return IdentifierTypePrkPassport, nil
	case "sgp_passport":
		return IdentifierTypeSgpPassport, nil
	case "chn_passport":
		return IdentifierTypeChnPassport, nil
	case "omn_passport":
		return IdentifierTypeOmnPassport, nil
	case "caf_passport":
		return IdentifierTypeCafPassport, nil
	case "ssd_passport":
		return IdentifierTypeSsdPassport, nil
	case "tto_biz_number":
		return IdentifierTypeTtoBizNumber, nil
	case "tur_tax_id":
		return IdentifierTypeTurTaxId, nil
	case "bmu_registrar_of_companies_number":
		return IdentifierTypeBmuRegistrarOfCompaniesNumber, nil
	case "cod_rccm_number":
		return IdentifierTypeCodRccmNumber, nil
	case "cod_rccm_ohada_number":
		return IdentifierTypeCodRccmOhadaNumber, nil
	case "are_reg_auth_number":
		return IdentifierTypeAreRegAuthNumber, nil
	case "prk_shipment_id":
		return IdentifierTypePrkShipmentId, nil
	case "ecu_importer_id":
		return IdentifierTypeEcuImporterId, nil
	case "ecu_exporter_id":
		return IdentifierTypeEcuExporterId, nil
	case "ecu_shipment_ref_no":
		return IdentifierTypeEcuShipmentRefNo, nil
	case "xxx_crb_monitor_entity_id":
		return IdentifierTypeXxxCrbMonitorEntityId, nil
	case "xxx_edi_global_issuer_id":
		return IdentifierTypeXxxEdiGlobalIssuerId, nil
	case "xxx_edi_global_security_id":
		return IdentifierTypeXxxEdiGlobalSecurityId, nil
	case "chl_import_export_control_id":
		return IdentifierTypeChlImportExportControlId, nil
	case "chl_import_manifest_number":
		return IdentifierTypeChlImportManifestNumber, nil
	case "chl_importer_exporter_id":
		return IdentifierTypeChlImporterExporterId, nil
	case "arg_import_export_id":
		return IdentifierTypeArgImportExportId, nil
	case "arg_partial_cuit":
		return IdentifierTypeArgPartialCuit, nil
	case "pan_importer_exporter_id":
		return IdentifierTypePanImporterExporterId, nil
	case "pan_declaration_number":
		return IdentifierTypePanDeclarationNumber, nil
	case "mex_shipment_number":
		return IdentifierTypeMexShipmentNumber, nil
	case "cri_exp":
		return IdentifierTypeCriExp, nil
	case "cri_imp":
		return IdentifierTypeCriImp, nil
	case "cri_op_no":
		return IdentifierTypeCriOpNo, nil
	case "col_nur":
		return IdentifierTypeColNur, nil
	case "npl_co_reg_no":
		return IdentifierTypeNplCoRegNo, nil
	case "usa_sam_exclusions_number":
		return IdentifierTypeUsaSamExclusionsNumber, nil
	case "usa_npi_number":
		return IdentifierTypeUsaNpiNumber, nil
	case "usa_upin_number":
		return IdentifierTypeUsaUpinNumber, nil
	case "can_bc_registration_number":
		return IdentifierTypeCanBcRegistrationNumber, nil
	case "can_business_number":
		return IdentifierTypeCanBusinessNumber, nil
	case "chn_csrc_no":
		return IdentifierTypeChnCsrcNo, nil
	case "usa_mn_master_id":
		return IdentifierTypeUsaMnMasterId, nil
	case "usa_mn_filing_number":
		return IdentifierTypeUsaMnFilingNumber, nil
	case "usa_in_biz_no":
		return IdentifierTypeUsaInBizNo, nil
	case "lloyds_internal_vessel_id":
		return IdentifierTypeLloydsInternalVesselId, nil
	case "lloyds_internal_entity_id":
		return IdentifierTypeLloydsInternalEntityId, nil
	case "usa_nh_business_id":
		return IdentifierTypeUsaNhBusinessId, nil
	case "gbr_uk_sanctions_id":
		return IdentifierTypeGbrUkSanctionsId, nil
	case "montana_sos_internal_entity_id":
		return IdentifierTypeMontanaSosInternalEntityId, nil
	case "usa_mass_sos_company_id":
		return IdentifierTypeUsaMassSosCompanyId, nil
	case "chn_resident_id_number":
		return IdentifierTypeChnResidentIdNumber, nil
	case "usa_nj_business_id":
		return IdentifierTypeUsaNjBusinessId, nil
	case "utah_corporate_registry_internal_entity_number":
		return IdentifierTypeUtahCorporateRegistryInternalEntityNumber, nil
	case "usa_la_sos_id":
		return IdentifierTypeUsaLaSosId, nil
	case "usa_al_sos_id":
		return IdentifierTypeUsaAlSosId, nil
	case "usa_sc_corp_id":
		return IdentifierTypeUsaScCorpId, nil
	case "usa_ky_org_no":
		return IdentifierTypeUsaKyOrgNo, nil
	case "usa_il_file_number":
		return IdentifierTypeUsaIlFileNumber, nil
	case "idn_transaction_number":
		return IdentifierTypeIdnTransactionNumber, nil
	case "idn_ubo_owner_id":
		return IdentifierTypeIdnUboOwnerId, nil
	case "swe_tax_number":
		return IdentifierTypeSweTaxNumber, nil
	case "panadata_internal_sid":
		return IdentifierTypePanadataInternalSid, nil
	case "pry_tax_id":
		return IdentifierTypePryTaxId, nil
	case "pry_shipment_number":
		return IdentifierTypePryShipmentNumber, nil
	case "tokyo_stock_exchange_no":
		return IdentifierTypeTokyoStockExchangeNo, nil
	case "swe_fi_id":
		return IdentifierTypeSweFiId, nil
	case "deu_bafin_id":
		return IdentifierTypeDeuBafinId, nil
	case "global_trade_internal_shipment_id":
		return IdentifierTypeGlobalTradeInternalShipmentId, nil
	case "china_vessel_inspection_registration":
		return IdentifierTypeChinaVesselInspectionRegistration, nil
	case "china_vessel_registration":
		return IdentifierTypeChinaVesselRegistration, nil
	case "ccs_registration":
		return IdentifierTypeCcsRegistration, nil
	case "usa_oti_id":
		return IdentifierTypeUsaOtiId, nil
	case "stock_ticker":
		return IdentifierTypeStockTicker, nil
	case "can_mb_registry":
		return IdentifierTypeCanMbRegistry, nil
	case "quebec_enterprise_number":
		return IdentifierTypeQuebecEnterpriseNumber, nil
	case "ontario_corporation_number":
		return IdentifierTypeOntarioCorporationNumber, nil
	case "saskatchewan_registry_number":
		return IdentifierTypeSaskatchewanRegistryNumber, nil
	case "alberta_corporation_number":
		return IdentifierTypeAlbertaCorporationNumber, nil
	case "bra_shipment_number":
		return IdentifierTypeBraShipmentNumber, nil
	case "ukr_sanctions_nazk_company_internal_id":
		return IdentifierTypeUkrSanctionsNazkCompanyInternalId, nil
	case "ukr_sanctions_nazk_person_internal_id":
		return IdentifierTypeUkrSanctionsNazkPersonInternalId, nil
	case "ethereum_address":
		return IdentifierTypeEthereumAddress, nil
	case "dash_address":
		return IdentifierTypeDashAddress, nil
	case "zcash_address":
		return IdentifierTypeZcashAddress, nil
	case "usa_uspto_serial_number":
		return IdentifierTypeUsaUsptoSerialNumber, nil
	case "usa_uspto_reg_no":
		return IdentifierTypeUsaUsptoRegNo, nil
	case "usa_uspto_foreign_application_no":
		return IdentifierTypeUsaUsptoForeignApplicationNo, nil
	case "usa_uspto_foreign_reg_no":
		return IdentifierTypeUsaUsptoForeignRegNo, nil
	case "wipo_intl_reg_no":
		return IdentifierTypeWipoIntlRegNo, nil
	case "wipo_intl_ref_no":
		return IdentifierTypeWipoIntlRefNo, nil
	}
	var t IdentifierType
	return "", fmt.Errorf("%s is not a valid %T", s, t)
}

func (i IdentifierType) Ptr() *IdentifierType {
	return &i
}

type Language string

const (
	LanguageAa Language = "aa"
	LanguageAb Language = "ab"
	LanguageAf Language = "af"
	LanguageAk Language = "ak"
	LanguageSq Language = "sq"
	LanguageAm Language = "am"
	LanguageAr Language = "ar"
	LanguageAn Language = "an"
	LanguageHy Language = "hy"
	LanguageAs Language = "as"
	LanguageAv Language = "av"
	LanguageAe Language = "ae"
	LanguageAy Language = "ay"
	LanguageAz Language = "az"
	LanguageBa Language = "ba"
	LanguageBm Language = "bm"
	LanguageEu Language = "eu"
	LanguageBe Language = "be"
	LanguageBn Language = "bn"
	LanguageBh Language = "bh"
	LanguageBi Language = "bi"
	LanguageBs Language = "bs"
	LanguageBr Language = "br"
	LanguageBg Language = "bg"
	LanguageMy Language = "my"
	LanguageCa Language = "ca"
	LanguageCh Language = "ch"
	LanguageCe Language = "ce"
	LanguageZh Language = "zh"
	LanguageCu Language = "cu"
	LanguageCv Language = "cv"
	LanguageKw Language = "kw"
	LanguageCo Language = "co"
	LanguageCr Language = "cr"
	LanguageCs Language = "cs"
	LanguageDa Language = "da"
	LanguageDv Language = "dv"
	LanguageNl Language = "nl"
	LanguageDz Language = "dz"
	LanguageEn Language = "en"
	LanguageEo Language = "eo"
	LanguageEt Language = "et"
	LanguageEe Language = "ee"
	LanguageFo Language = "fo"
	LanguageFj Language = "fj"
	LanguageFi Language = "fi"
	LanguageFr Language = "fr"
	LanguageFy Language = "fy"
	LanguageFf Language = "ff"
	LanguageKa Language = "ka"
	LanguageDe Language = "de"
	LanguageGd Language = "gd"
	LanguageGa Language = "ga"
	LanguageGl Language = "gl"
	LanguageGv Language = "gv"
	LanguageEl Language = "el"
	LanguageGn Language = "gn"
	LanguageGu Language = "gu"
	LanguageHt Language = "ht"
	LanguageHa Language = "ha"
	LanguageHe Language = "he"
	LanguageHz Language = "hz"
	LanguageHi Language = "hi"
	LanguageHo Language = "ho"
	LanguageHr Language = "hr"
	LanguageHu Language = "hu"
	LanguageIg Language = "ig"
	LanguageIs Language = "is"
	LanguageIo Language = "io"
	LanguageIi Language = "ii"
	LanguageIu Language = "iu"
	LanguageIe Language = "ie"
	LanguageIa Language = "ia"
	LanguageId Language = "id"
	LanguageIk Language = "ik"
	LanguageIt Language = "it"
	LanguageJv Language = "jv"
	LanguageJa Language = "ja"
	LanguageKl Language = "kl"
	LanguageKn Language = "kn"
	LanguageKs Language = "ks"
	LanguageKr Language = "kr"
	LanguageKk Language = "kk"
	LanguageKm Language = "km"
	LanguageKi Language = "ki"
	LanguageRw Language = "rw"
	LanguageKy Language = "ky"
	LanguageKv Language = "kv"
	LanguageKg Language = "kg"
	LanguageKo Language = "ko"
	LanguageKj Language = "kj"
	LanguageKu Language = "ku"
	LanguageLo Language = "lo"
	LanguageLa Language = "la"
	LanguageLv Language = "lv"
	LanguageLi Language = "li"
	LanguageLn Language = "ln"
	LanguageLt Language = "lt"
	LanguageLb Language = "lb"
	LanguageLu Language = "lu"
	LanguageLg Language = "lg"
	LanguageMk Language = "mk"
	LanguageMh Language = "mh"
	LanguageMl Language = "ml"
	LanguageMi Language = "mi"
	LanguageMr Language = "mr"
	LanguageMs Language = "ms"
	LanguageMg Language = "mg"
	LanguageMt Language = "mt"
	LanguageMn Language = "mn"
	LanguageNa Language = "na"
	LanguageNv Language = "nv"
	LanguageNr Language = "nr"
	LanguageNd Language = "nd"
	LanguageNg Language = "ng"
	LanguageNe Language = "ne"
	LanguageNn Language = "nn"
	LanguageNb Language = "nb"
	LanguageNo Language = "no"
	LanguageNy Language = "ny"
	LanguageOc Language = "oc"
	LanguageOj Language = "oj"
	LanguageOr Language = "or"
	LanguageOm Language = "om"
	LanguageOs Language = "os"
	LanguagePa Language = "pa"
	LanguageFa Language = "fa"
	LanguagePi Language = "pi"
	LanguagePl Language = "pl"
	LanguagePt Language = "pt"
	LanguagePs Language = "ps"
	LanguageQu Language = "qu"
	LanguageRm Language = "rm"
	LanguageRo Language = "ro"
	LanguageRn Language = "rn"
	LanguageRu Language = "ru"
	LanguageSg Language = "sg"
	LanguageSa Language = "sa"
	LanguageSi Language = "si"
	LanguageSk Language = "sk"
	LanguageSl Language = "sl"
	LanguageSe Language = "se"
	LanguageSm Language = "sm"
	LanguageSn Language = "sn"
	LanguageSd Language = "sd"
	LanguageSo Language = "so"
	LanguageSt Language = "st"
	LanguageEs Language = "es"
	LanguageSc Language = "sc"
	LanguageSr Language = "sr"
	LanguageSs Language = "ss"
	LanguageSu Language = "su"
	LanguageSw Language = "sw"
	LanguageSv Language = "sv"
	LanguageTy Language = "ty"
	LanguageTa Language = "ta"
	LanguageTt Language = "tt"
	LanguageTe Language = "te"
	LanguageTg Language = "tg"
	LanguageTl Language = "tl"
	LanguageTh Language = "th"
	LanguageBo Language = "bo"
	LanguageTi Language = "ti"
	LanguageTo Language = "to"
	LanguageTn Language = "tn"
	LanguageTs Language = "ts"
	LanguageTk Language = "tk"
	LanguageTr Language = "tr"
	LanguageTw Language = "tw"
	LanguageUg Language = "ug"
	LanguageUk Language = "uk"
	LanguageUr Language = "ur"
	LanguageUz Language = "uz"
	LanguageVe Language = "ve"
	LanguageVi Language = "vi"
	LanguageVo Language = "vo"
	LanguageCy Language = "cy"
	LanguageWa Language = "wa"
	LanguageWo Language = "wo"
	LanguageXh Language = "xh"
	LanguageYi Language = "yi"
	LanguageYo Language = "yo"
	LanguageZa Language = "za"
	LanguageZu Language = "zu"
)

func NewLanguageFromString(s string) (Language, error) {
	switch s {
	case "aa":
		return LanguageAa, nil
	case "ab":
		return LanguageAb, nil
	case "af":
		return LanguageAf, nil
	case "ak":
		return LanguageAk, nil
	case "sq":
		return LanguageSq, nil
	case "am":
		return LanguageAm, nil
	case "ar":
		return LanguageAr, nil
	case "an":
		return LanguageAn, nil
	case "hy":
		return LanguageHy, nil
	case "as":
		return LanguageAs, nil
	case "av":
		return LanguageAv, nil
	case "ae":
		return LanguageAe, nil
	case "ay":
		return LanguageAy, nil
	case "az":
		return LanguageAz, nil
	case "ba":
		return LanguageBa, nil
	case "bm":
		return LanguageBm, nil
	case "eu":
		return LanguageEu, nil
	case "be":
		return LanguageBe, nil
	case "bn":
		return LanguageBn, nil
	case "bh":
		return LanguageBh, nil
	case "bi":
		return LanguageBi, nil
	case "bs":
		return LanguageBs, nil
	case "br":
		return LanguageBr, nil
	case "bg":
		return LanguageBg, nil
	case "my":
		return LanguageMy, nil
	case "ca":
		return LanguageCa, nil
	case "ch":
		return LanguageCh, nil
	case "ce":
		return LanguageCe, nil
	case "zh":
		return LanguageZh, nil
	case "cu":
		return LanguageCu, nil
	case "cv":
		return LanguageCv, nil
	case "kw":
		return LanguageKw, nil
	case "co":
		return LanguageCo, nil
	case "cr":
		return LanguageCr, nil
	case "cs":
		return LanguageCs, nil
	case "da":
		return LanguageDa, nil
	case "dv":
		return LanguageDv, nil
	case "nl":
		return LanguageNl, nil
	case "dz":
		return LanguageDz, nil
	case "en":
		return LanguageEn, nil
	case "eo":
		return LanguageEo, nil
	case "et":
		return LanguageEt, nil
	case "ee":
		return LanguageEe, nil
	case "fo":
		return LanguageFo, nil
	case "fj":
		return LanguageFj, nil
	case "fi":
		return LanguageFi, nil
	case "fr":
		return LanguageFr, nil
	case "fy":
		return LanguageFy, nil
	case "ff":
		return LanguageFf, nil
	case "ka":
		return LanguageKa, nil
	case "de":
		return LanguageDe, nil
	case "gd":
		return LanguageGd, nil
	case "ga":
		return LanguageGa, nil
	case "gl":
		return LanguageGl, nil
	case "gv":
		return LanguageGv, nil
	case "el":
		return LanguageEl, nil
	case "gn":
		return LanguageGn, nil
	case "gu":
		return LanguageGu, nil
	case "ht":
		return LanguageHt, nil
	case "ha":
		return LanguageHa, nil
	case "he":
		return LanguageHe, nil
	case "hz":
		return LanguageHz, nil
	case "hi":
		return LanguageHi, nil
	case "ho":
		return LanguageHo, nil
	case "hr":
		return LanguageHr, nil
	case "hu":
		return LanguageHu, nil
	case "ig":
		return LanguageIg, nil
	case "is":
		return LanguageIs, nil
	case "io":
		return LanguageIo, nil
	case "ii":
		return LanguageIi, nil
	case "iu":
		return LanguageIu, nil
	case "ie":
		return LanguageIe, nil
	case "ia":
		return LanguageIa, nil
	case "id":
		return LanguageId, nil
	case "ik":
		return LanguageIk, nil
	case "it":
		return LanguageIt, nil
	case "jv":
		return LanguageJv, nil
	case "ja":
		return LanguageJa, nil
	case "kl":
		return LanguageKl, nil
	case "kn":
		return LanguageKn, nil
	case "ks":
		return LanguageKs, nil
	case "kr":
		return LanguageKr, nil
	case "kk":
		return LanguageKk, nil
	case "km":
		return LanguageKm, nil
	case "ki":
		return LanguageKi, nil
	case "rw":
		return LanguageRw, nil
	case "ky":
		return LanguageKy, nil
	case "kv":
		return LanguageKv, nil
	case "kg":
		return LanguageKg, nil
	case "ko":
		return LanguageKo, nil
	case "kj":
		return LanguageKj, nil
	case "ku":
		return LanguageKu, nil
	case "lo":
		return LanguageLo, nil
	case "la":
		return LanguageLa, nil
	case "lv":
		return LanguageLv, nil
	case "li":
		return LanguageLi, nil
	case "ln":
		return LanguageLn, nil
	case "lt":
		return LanguageLt, nil
	case "lb":
		return LanguageLb, nil
	case "lu":
		return LanguageLu, nil
	case "lg":
		return LanguageLg, nil
	case "mk":
		return LanguageMk, nil
	case "mh":
		return LanguageMh, nil
	case "ml":
		return LanguageMl, nil
	case "mi":
		return LanguageMi, nil
	case "mr":
		return LanguageMr, nil
	case "ms":
		return LanguageMs, nil
	case "mg":
		return LanguageMg, nil
	case "mt":
		return LanguageMt, nil
	case "mn":
		return LanguageMn, nil
	case "na":
		return LanguageNa, nil
	case "nv":
		return LanguageNv, nil
	case "nr":
		return LanguageNr, nil
	case "nd":
		return LanguageNd, nil
	case "ng":
		return LanguageNg, nil
	case "ne":
		return LanguageNe, nil
	case "nn":
		return LanguageNn, nil
	case "nb":
		return LanguageNb, nil
	case "no":
		return LanguageNo, nil
	case "ny":
		return LanguageNy, nil
	case "oc":
		return LanguageOc, nil
	case "oj":
		return LanguageOj, nil
	case "or":
		return LanguageOr, nil
	case "om":
		return LanguageOm, nil
	case "os":
		return LanguageOs, nil
	case "pa":
		return LanguagePa, nil
	case "fa":
		return LanguageFa, nil
	case "pi":
		return LanguagePi, nil
	case "pl":
		return LanguagePl, nil
	case "pt":
		return LanguagePt, nil
	case "ps":
		return LanguagePs, nil
	case "qu":
		return LanguageQu, nil
	case "rm":
		return LanguageRm, nil
	case "ro":
		return LanguageRo, nil
	case "rn":
		return LanguageRn, nil
	case "ru":
		return LanguageRu, nil
	case "sg":
		return LanguageSg, nil
	case "sa":
		return LanguageSa, nil
	case "si":
		return LanguageSi, nil
	case "sk":
		return LanguageSk, nil
	case "sl":
		return LanguageSl, nil
	case "se":
		return LanguageSe, nil
	case "sm":
		return LanguageSm, nil
	case "sn":
		return LanguageSn, nil
	case "sd":
		return LanguageSd, nil
	case "so":
		return LanguageSo, nil
	case "st":
		return LanguageSt, nil
	case "es":
		return LanguageEs, nil
	case "sc":
		return LanguageSc, nil
	case "sr":
		return LanguageSr, nil
	case "ss":
		return LanguageSs, nil
	case "su":
		return LanguageSu, nil
	case "sw":
		return LanguageSw, nil
	case "sv":
		return LanguageSv, nil
	case "ty":
		return LanguageTy, nil
	case "ta":
		return LanguageTa, nil
	case "tt":
		return LanguageTt, nil
	case "te":
		return LanguageTe, nil
	case "tg":
		return LanguageTg, nil
	case "tl":
		return LanguageTl, nil
	case "th":
		return LanguageTh, nil
	case "bo":
		return LanguageBo, nil
	case "ti":
		return LanguageTi, nil
	case "to":
		return LanguageTo, nil
	case "tn":
		return LanguageTn, nil
	case "ts":
		return LanguageTs, nil
	case "tk":
		return LanguageTk, nil
	case "tr":
		return LanguageTr, nil
	case "tw":
		return LanguageTw, nil
	case "ug":
		return LanguageUg, nil
	case "uk":
		return LanguageUk, nil
	case "ur":
		return LanguageUr, nil
	case "uz":
		return LanguageUz, nil
	case "ve":
		return LanguageVe, nil
	case "vi":
		return LanguageVi, nil
	case "vo":
		return LanguageVo, nil
	case "cy":
		return LanguageCy, nil
	case "wa":
		return LanguageWa, nil
	case "wo":
		return LanguageWo, nil
	case "xh":
		return LanguageXh, nil
	case "yi":
		return LanguageYi, nil
	case "yo":
		return LanguageYo, nil
	case "za":
		return LanguageZa, nil
	case "zu":
		return LanguageZu, nil
	}
	var t Language
	return "", fmt.Errorf("%s is not a valid %T", s, t)
}

func (l Language) Ptr() *Language {
	return &l
}

type MeasurementData struct {
	Record      []string               `json:"record,omitempty"`
	RecordCount int                    `json:"record_count"`
	Properties  *MeasurementProperties `json:"properties,omitempty"`
}

type MeasurementInfo struct {
	Limit int                `json:"limit"`
	Size  *SizeInfo          `json:"size,omitempty"`
	Data  []*MeasurementData `json:"data,omitempty"`
}

type MeasurementProperties struct {
	Type  MeasurementType `json:"type,omitempty"`
	Unit  Unit            `json:"unit,omitempty"`
	Value float64         `json:"value"`
}

type MeasurementType string

const (
	MeasurementTypeGrossWeight MeasurementType = "gross_weight"
	MeasurementTypeNetWeight   MeasurementType = "net_weight"
	MeasurementTypeQuantity    MeasurementType = "quantity"
)

func NewMeasurementTypeFromString(s string) (MeasurementType, error) {
	switch s {
	case "gross_weight":
		return MeasurementTypeGrossWeight, nil
	case "net_weight":
		return MeasurementTypeNetWeight, nil
	case "quantity":
		return MeasurementTypeQuantity, nil
	}
	var t MeasurementType
	return "", fmt.Errorf("%s is not a valid %T", s, t)
}

func (m MeasurementType) Ptr() *MeasurementType {
	return &m
}

type MonetaryValueContext string

const (
	MonetaryValueContextCostInsuranceAndFreight MonetaryValueContext = "cost_insurance_and_freight"
	MonetaryValueContextFreeOnBoard             MonetaryValueContext = "free_on_board"
)

func NewMonetaryValueContextFromString(s string) (MonetaryValueContext, error) {
	switch s {
	case "cost_insurance_and_freight":
		return MonetaryValueContextCostInsuranceAndFreight, nil
	case "free_on_board":
		return MonetaryValueContextFreeOnBoard, nil
	}
	var t MonetaryValueContext
	return "", fmt.Errorf("%s is not a valid %T", s, t)
}

func (m MonetaryValueContext) Ptr() *MonetaryValueContext {
	return &m
}

type MonetaryValueData struct {
	Record      []string                 `json:"record,omitempty"`
	RecordCount int                      `json:"record_count"`
	Properties  *MonetaryValueProperties `json:"properties,omitempty"`
}

type MonetaryValueInfo struct {
	Limit int                  `json:"limit"`
	Size  *SizeInfo            `json:"size,omitempty"`
	Data  []*MonetaryValueData `json:"data,omitempty"`
}

type MonetaryValueProperties struct {
	Context  *string   `json:"context,omitempty"`
	Currency *Currency `json:"currency,omitempty"`
	Value    float64   `json:"value"`
}

type NameContext string

const (
	NameContextPrimary            NameContext = "primary"
	NameContextGiven              NameContext = "given"
	NameContextFamily             NameContext = "family"
	NameContextAlias              NameContext = "alias"
	NameContextMachineTranslation NameContext = "machine_translation"
	NameContextTransliteration    NameContext = "transliteration"
)

func NewNameContextFromString(s string) (NameContext, error) {
	switch s {
	case "primary":
		return NameContextPrimary, nil
	case "given":
		return NameContextGiven, nil
	case "family":
		return NameContextFamily, nil
	case "alias":
		return NameContextAlias, nil
	case "machine_translation":
		return NameContextMachineTranslation, nil
	case "transliteration":
		return NameContextTransliteration, nil
	}
	var t NameContext
	return "", fmt.Errorf("%s is not a valid %T", s, t)
}

func (n NameContext) Ptr() *NameContext {
	return &n
}

type NameData struct {
	Record      []string        `json:"record,omitempty"`
	RecordCount int             `json:"record_count"`
	Properties  *NameProperties `json:"properties,omitempty"`
}

type NameInfo struct {
	Limit int         `json:"limit"`
	Size  *SizeInfo   `json:"size,omitempty"`
	Data  []*NameData `json:"data,omitempty"`
}

type NameProperties struct {
	Context        *string   `json:"context,omitempty"`
	Language       *Language `json:"language,omitempty"`
	Translated     *string   `json:"translated,omitempty"`
	Transliterated *string   `json:"transliterated,omitempty"`
	Value          string    `json:"value"`
}

type PersonStatus string

const (
	PersonStatusBorn    PersonStatus = "born"
	PersonStatusDied    PersonStatus = "died"
	PersonStatusMarried PersonStatus = "married"
)

func NewPersonStatusFromString(s string) (PersonStatus, error) {
	switch s {
	case "born":
		return PersonStatusBorn, nil
	case "died":
		return PersonStatusDied, nil
	case "married":
		return PersonStatusMarried, nil
	}
	var t PersonStatus
	return "", fmt.Errorf("%s is not a valid %T", s, t)
}

func (p PersonStatus) Ptr() *PersonStatus {
	return &p
}

type PersonStatusData struct {
	Record      []string                `json:"record,omitempty"`
	RecordCount int                     `json:"record_count"`
	Properties  *PersonStatusProperties `json:"properties,omitempty"`
}

type PersonStatusInfo struct {
	Limit int                 `json:"limit"`
	Size  *SizeInfo           `json:"size,omitempty"`
	Data  []*PersonStatusData `json:"data,omitempty"`
}

type PersonStatusProperties struct {
	Value PersonStatus `json:"value,omitempty"`
}

type PositionData struct {
	Record      []string            `json:"record,omitempty"`
	RecordCount int                 `json:"record_count"`
	Properties  *PositionProperties `json:"properties,omitempty"`
}

type PositionInfo struct {
	Limit int             `json:"limit"`
	Size  *SizeInfo       `json:"size,omitempty"`
	Data  []*PositionData `json:"data,omitempty"`
}

type PositionProperties struct {
	Value string `json:"value"`
}

type RiskIntelligenceData struct {
	Record      []string                    `json:"record,omitempty"`
	RecordCount int                         `json:"record_count"`
	Properties  *RiskIntelligenceProperties `json:"properties,omitempty"`
}

type RiskIntelligenceInfo struct {
	Limit int                     `json:"limit"`
	Size  *SizeInfo               `json:"size,omitempty"`
	Data  []*RiskIntelligenceData `json:"data,omitempty"`
}

type RiskIntelligenceProperties struct {
	Authority *string `json:"authority,omitempty"`
	List      *string `json:"list,omitempty"`
	Program   *string `json:"program,omitempty"`
	Reason    *string `json:"reason,omitempty"`
	Type      Tag     `json:"type,omitempty"`
}

type SharesData struct {
	Record      []string          `json:"record,omitempty"`
	RecordCount int               `json:"record_count"`
	Properties  *SharesProperties `json:"properties,omitempty"`
}

type SharesInfo struct {
	Limit int           `json:"limit"`
	Size  *SizeInfo     `json:"size,omitempty"`
	Data  []*SharesData `json:"data,omitempty"`
}

type SharesProperties struct {
	Currency      *Currency `json:"currency,omitempty"`
	MonetaryValue *float64  `json:"monetary_value,omitempty"`
	NumShares     *float64  `json:"num_shares,omitempty"`
	Percentage    *float64  `json:"percentage,omitempty"`
	Type          *string   `json:"type,omitempty"`
}

type StatusContext string

const (
	StatusContextBrokerLicense                     StatusContext = "broker_license"
	StatusContextInvestmentAdvisorLicense          StatusContext = "investment_advisor_license"
	StatusContextSoleProprietorshipStatus          StatusContext = "sole_proprietorship_status"
	StatusContextGeneralPartnershipStatus          StatusContext = "general_partnership_status"
	StatusContextLimitedLiabilityPartnershipStatus StatusContext = "limited_liability_partnership_status"
)

func NewStatusContextFromString(s string) (StatusContext, error) {
	switch s {
	case "broker_license":
		return StatusContextBrokerLicense, nil
	case "investment_advisor_license":
		return StatusContextInvestmentAdvisorLicense, nil
	case "sole_proprietorship_status":
		return StatusContextSoleProprietorshipStatus, nil
	case "general_partnership_status":
		return StatusContextGeneralPartnershipStatus, nil
	case "limited_liability_partnership_status":
		return StatusContextLimitedLiabilityPartnershipStatus, nil
	}
	var t StatusContext
	return "", fmt.Errorf("%s is not a valid %T", s, t)
}

func (s StatusContext) Ptr() *StatusContext {
	return &s
}

type StatusData struct {
	Record      []string          `json:"record,omitempty"`
	RecordCount int               `json:"record_count"`
	Properties  *StatusProperties `json:"properties,omitempty"`
}

type StatusInfo struct {
	Limit int           `json:"limit"`
	Size  *SizeInfo     `json:"size,omitempty"`
	Data  []*StatusData `json:"data,omitempty"`
}

type StatusProperties struct {
	Context *StatusContext `json:"context,omitempty"`
	Text    *string        `json:"text,omitempty"`
	Value   *CompanyStatus `json:"value,omitempty"`
}

type Tag string

const (
	TagPep                                        Tag = "pep"
	TagStateOwned                                 Tag = "state_owned"
	TagFormerSoe                                  Tag = "former_soe"
	TagSanctioned                                 Tag = "sanctioned"
	TagFormerlySanctioned                         Tag = "formerly_sanctioned"
	TagReputationalRiskTerrorism                  Tag = "reputational_risk_terrorism"
	TagReputationalRiskOrganizedCrime             Tag = "reputational_risk_organized_crime"
	TagReputationalRiskFinancialCrime             Tag = "reputational_risk_financial_crime"
	TagReputationalRiskBriberyAndCorruption       Tag = "reputational_risk_bribery_and_corruption"
	TagReputationalRiskOther                      Tag = "reputational_risk_other"
	TagReputationalRiskCybercrime                 Tag = "reputational_risk_cybercrime"
	TagReputationalRiskModernSlavery              Tag = "reputational_risk_modern_slavery"
	TagRegulatoryAction                           Tag = "regulatory_action"
	TagLawEnforcementAction                       Tag = "law_enforcement_action"
	TagExportControls                             Tag = "export_controls"
	TagForcedLaborXinjiangContractors             Tag = "forced_labor_xinjiang_contractors"
	TagWroEntity                                  Tag = "wro_entity"
	TagUflpaEntity                                Tag = "uflpa_entity"
	TagSheffieldHallamUniversityForcedLaborEntity Tag = "sheffield_hallam_university_forced_labor_entity"
)

func NewTagFromString(s string) (Tag, error) {
	switch s {
	case "pep":
		return TagPep, nil
	case "state_owned":
		return TagStateOwned, nil
	case "former_soe":
		return TagFormerSoe, nil
	case "sanctioned":
		return TagSanctioned, nil
	case "formerly_sanctioned":
		return TagFormerlySanctioned, nil
	case "reputational_risk_terrorism":
		return TagReputationalRiskTerrorism, nil
	case "reputational_risk_organized_crime":
		return TagReputationalRiskOrganizedCrime, nil
	case "reputational_risk_financial_crime":
		return TagReputationalRiskFinancialCrime, nil
	case "reputational_risk_bribery_and_corruption":
		return TagReputationalRiskBriberyAndCorruption, nil
	case "reputational_risk_other":
		return TagReputationalRiskOther, nil
	case "reputational_risk_cybercrime":
		return TagReputationalRiskCybercrime, nil
	case "reputational_risk_modern_slavery":
		return TagReputationalRiskModernSlavery, nil
	case "regulatory_action":
		return TagRegulatoryAction, nil
	case "law_enforcement_action":
		return TagLawEnforcementAction, nil
	case "export_controls":
		return TagExportControls, nil
	case "forced_labor_xinjiang_contractors":
		return TagForcedLaborXinjiangContractors, nil
	case "wro_entity":
		return TagWroEntity, nil
	case "uflpa_entity":
		return TagUflpaEntity, nil
	case "sheffield_hallam_university_forced_labor_entity":
		return TagSheffieldHallamUniversityForcedLaborEntity, nil
	}
	var t Tag
	return "", fmt.Errorf("%s is not a valid %T", s, t)
}

func (t Tag) Ptr() *Tag {
	return &t
}

type TranslatedNameData struct {
	Record      []string                  `json:"record,omitempty"`
	RecordCount int                       `json:"record_count"`
	Properties  *TranslatedNameProperties `json:"properties,omitempty"`
}

type TranslatedNameInfo struct {
	Limit int                   `json:"limit"`
	Size  *SizeInfo             `json:"size,omitempty"`
	Data  []*TranslatedNameData `json:"data,omitempty"`
}

type TranslatedNameProperties struct {
	Context  *TranslationContext `json:"context,omitempty"`
	Original *string             `json:"original,omitempty"`
	Value    string              `json:"value"`
}

type TranslationContext string

const (
	TranslationContextSayariMachineTranslation TranslationContext = "sayari_machine_translation"
	TranslationContextPinyin                   TranslationContext = "pinyin"
	TranslationContextGoogleTranslate          TranslationContext = "google_translate"
)

func NewTranslationContextFromString(s string) (TranslationContext, error) {
	switch s {
	case "sayari_machine_translation":
		return TranslationContextSayariMachineTranslation, nil
	case "pinyin":
		return TranslationContextPinyin, nil
	case "google_translate":
		return TranslationContextGoogleTranslate, nil
	}
	var t TranslationContext
	return "", fmt.Errorf("%s is not a valid %T", s, t)
}

func (t TranslationContext) Ptr() *TranslationContext {
	return &t
}

type Unit string

const (
	UnitMetre    Unit = "metre"
	UnitKilogram Unit = "kilogram"
	UnitUnit     Unit = "unit"
)

func NewUnitFromString(s string) (Unit, error) {
	switch s {
	case "metre":
		return UnitMetre, nil
	case "kilogram":
		return UnitKilogram, nil
	case "unit":
		return UnitUnit, nil
	}
	var t Unit
	return "", fmt.Errorf("%s is not a valid %T", s, t)
}

func (u Unit) Ptr() *Unit {
	return &u
}

type WeakIdentifierData struct {
	Record      []string                  `json:"record,omitempty"`
	RecordCount int                       `json:"record_count"`
	Properties  *WeakIdentifierProperties `json:"properties,omitempty"`
}

type WeakIdentifierInfo struct {
	Limit int                   `json:"limit"`
	Size  *SizeInfo             `json:"size,omitempty"`
	Data  []*WeakIdentifierData `json:"data,omitempty"`
}

type WeakIdentifierProperties struct {
	Type  WeakIdentifierType `json:"type,omitempty"`
	Value string             `json:"value"`
}

type WeakIdentifierType string

const (
	WeakIdentifierTypeUnknown                       WeakIdentifierType = "unknown"
	WeakIdentifierTypeMxPartialRfcPerson            WeakIdentifierType = "mx_partial_rfc_person"
	WeakIdentifierTypeRuOktmo                       WeakIdentifierType = "ru_oktmo"
	WeakIdentifierTypeRuKpp                         WeakIdentifierType = "ru_kpp"
	WeakIdentifierTypeRuOkpo                        WeakIdentifierType = "ru_okpo"
	WeakIdentifierTypeUnknownPassport               WeakIdentifierType = "unknown_passport"
	WeakIdentifierTypeRksKtaNumber                  WeakIdentifierType = "rks_kta_number"
	WeakIdentifierTypeBraPartialCpf                 WeakIdentifierType = "bra_partial_cpf"
	WeakIdentifierTypeVenColegiadoNumber            WeakIdentifierType = "ven_colegiado_number"
	WeakIdentifierTypePanFolio                      WeakIdentifierType = "pan_folio"
	WeakIdentifierTypeKgzOkpo                       WeakIdentifierType = "kgz_okpo"
	WeakIdentifierTypeKgzInn                        WeakIdentifierType = "kgz_inn"
	WeakIdentifierTypeLbnRegistrationNumber         WeakIdentifierType = "lbn_registration_number"
	WeakIdentifierTypeItaEbrRegNumber               WeakIdentifierType = "ita_ebr_reg_number"
	WeakIdentifierTypeItaEbrShortSearchCode         WeakIdentifierType = "ita_ebr_short_search_code"
	WeakIdentifierTypeChlSantiagoGazetteCve         WeakIdentifierType = "chl_santiago_gazette_cve"
	WeakIdentifierTypeBmuRegistrationNumber         WeakIdentifierType = "bmu_registration_number"
	WeakIdentifierTypeBrazilianOab                  WeakIdentifierType = "brazilian_oab"
	WeakIdentifierTypeIrnRegNumber                  WeakIdentifierType = "irn_reg_number"
	WeakIdentifierTypeMxFme                         WeakIdentifierType = "mx_fme"
	WeakIdentifierTypeUkrEdrpou                     WeakIdentifierType = "ukr_edrpou"
	WeakIdentifierTypeRuLicenseNumber               WeakIdentifierType = "ru_license_number"
	WeakIdentifierTypeMaritimeCallSign              WeakIdentifierType = "maritime_call_sign"
	WeakIdentifierTypePrkShipRegNo                  WeakIdentifierType = "prk_ship_reg_no"
	WeakIdentifierTypeCofiCode                      WeakIdentifierType = "cofi_code"
	WeakIdentifierTypeRuNza                         WeakIdentifierType = "ru_nza"
	WeakIdentifierTypeArgIgjNumber                  WeakIdentifierType = "arg_igj_number"
	WeakIdentifierTypeUnknownBraCaseNumber          WeakIdentifierType = "unknown_bra_case_number"
	WeakIdentifierTypeIrqProvisionCard              WeakIdentifierType = "irq_provision_card"
	WeakIdentifierTypeMblHmSn                       WeakIdentifierType = "mbl_hm_sn"
	WeakIdentifierTypeMblHmHudNum                   WeakIdentifierType = "mbl_hm_hud_num"
	WeakIdentifierTypeMblHmTitleNum                 WeakIdentifierType = "mbl_hm_title_num"
	WeakIdentifierTypeMexDeclaranetAcuse            WeakIdentifierType = "mex_declaranet_acuse"
	WeakIdentifierTypeDeuRegisternummer             WeakIdentifierType = "deu_registernummer"
	WeakIdentifierTypeUnknownNationalIdNum          WeakIdentifierType = "unknown_national_id_num"
	WeakIdentifierTypeUnknownCivilRegNum            WeakIdentifierType = "unknown_civil_reg_num"
	WeakIdentifierTypeUnknownResidencyNum           WeakIdentifierType = "unknown_residency_num"
	WeakIdentifierTypeUnknownFolioIdNum             WeakIdentifierType = "unknown_folio_id_num"
	WeakIdentifierTypeUnknownCommercialRegisterId   WeakIdentifierType = "unknown_commercial_register_id"
	WeakIdentifierTypeUnknownChamberOfCommerceId    WeakIdentifierType = "unknown_chamber_of_commerce_id"
	WeakIdentifierTypeUnknownLicenseNum             WeakIdentifierType = "unknown_license_num"
	WeakIdentifierTypeUnknownIndustrialLicenseNum   WeakIdentifierType = "unknown_industrial_license_num"
	WeakIdentifierTypeCzeFileNumber                 WeakIdentifierType = "cze_file_number"
	WeakIdentifierTypeMexTmAppNo                    WeakIdentifierType = "mex_tm_app_no"
	WeakIdentifierTypeMexTmRegNo                    WeakIdentifierType = "mex_tm_reg_no"
	WeakIdentifierTypeJordanCompanyNo               WeakIdentifierType = "jordan_company_no"
	WeakIdentifierTypeCnQccInternalId               WeakIdentifierType = "cn_qcc_internal_id"
	WeakIdentifierTypeJorSolPropInstitutionNumber   WeakIdentifierType = "jor_sol_prop_institution_number"
	WeakIdentifierTypeUsaNcCorpNo                   WeakIdentifierType = "usa_nc_corp_no"
	WeakIdentifierTypeUsaNmLicenseId                WeakIdentifierType = "usa_nm_license_id"
	WeakIdentifierTypeKhmTinNumber                  WeakIdentifierType = "khm_tin_number"
	WeakIdentifierTypeUsaMoEntityId                 WeakIdentifierType = "usa_mo_entity_id"
	WeakIdentifierTypeUsaMoCorpNumber               WeakIdentifierType = "usa_mo_corp_number"
	WeakIdentifierTypeMacRaemCaseNumber             WeakIdentifierType = "mac_raem_case_number"
	WeakIdentifierTypeHndTegucigalpaNotary          WeakIdentifierType = "hnd_tegucigalpa_notary"
	WeakIdentifierTypeLbnFamilyNumber               WeakIdentifierType = "lbn_family_number"
	WeakIdentifierTypeTxBexarPropertyGeoId          WeakIdentifierType = "tx_bexar_property_geo_id"
	WeakIdentifierTypePakCnicFamilyNo               WeakIdentifierType = "pak_cnic_family_no"
	WeakIdentifierTypeRouCommercialRegisterId       WeakIdentifierType = "rou_commercial_register_id"
	WeakIdentifierTypeSouthAfricaPartialIdNumber    WeakIdentifierType = "south_africa_partial_id_number"
	WeakIdentifierTypePrkInternalTradeId            WeakIdentifierType = "prk_internal_trade_id"
	WeakIdentifierTypeChnCustomsRegistrationCode    WeakIdentifierType = "chn_customs_registration_code"
	WeakIdentifierTypeAutFormerCrNo                 WeakIdentifierType = "aut_former_cr_no"
	WeakIdentifierTypeAutNatlBankNo                 WeakIdentifierType = "aut_natl_bank_no"
	WeakIdentifierTypeLvaPersonIdMasked             WeakIdentifierType = "lva_person_id_masked"
	WeakIdentifierTypeLvaCourtCaseId                WeakIdentifierType = "lva_court_case_id"
	WeakIdentifierTypeChnCninfoLegalPersonId        WeakIdentifierType = "chn_cninfo_legal_person_id"
	WeakIdentifierTypeRksBusinessNumber             WeakIdentifierType = "rks_business_number"
	WeakIdentifierTypeRksFiscalNumber               WeakIdentifierType = "rks_fiscal_number"
	WeakIdentifierTypeMdgNifNumber                  WeakIdentifierType = "mdg_nif_number"
	WeakIdentifierTypeMdgRcsNumber                  WeakIdentifierType = "mdg_rcs_number"
	WeakIdentifierTypeVat                           WeakIdentifierType = "vat"
	WeakIdentifierTypeUsaIlChicagoSiteNumber        WeakIdentifierType = "usa_il_chicago_site_number"
	WeakIdentifierTypeUsaGenericTicker              WeakIdentifierType = "usa_generic_ticker"
	WeakIdentifierTypeVenRncNumber                  WeakIdentifierType = "ven_rnc_number"
	WeakIdentifierTypeUsaImportsSystemIdentityId    WeakIdentifierType = "usa_imports_system_identity_id"
	WeakIdentifierTypeColBillOfLading               WeakIdentifierType = "col_bill_of_lading"
	WeakIdentifierTypeColSecopNo                    WeakIdentifierType = "col_secop_no"
	WeakIdentifierTypePolRegonNumber                WeakIdentifierType = "pol_regon_number"
	WeakIdentifierTypePolNipNumber                  WeakIdentifierType = "pol_nip_number"
	WeakIdentifierTypeBillOfLading                  WeakIdentifierType = "bill_of_lading"
	WeakIdentifierTypePanIbcRuc                     WeakIdentifierType = "pan_ibc_ruc"
	WeakIdentifierTypePakOldCompanyCode             WeakIdentifierType = "pak_old_company_code"
	WeakIdentifierTypeJpnPermitNo                   WeakIdentifierType = "jpn_permit_no"
	WeakIdentifierTypeDmaCorporateRegistryEntityNum WeakIdentifierType = "dma_corporate_registry_entity_num"
	WeakIdentifierTypeAtgCorporateRegistryEntityNum WeakIdentifierType = "atg_corporate_registry_entity_num"
	WeakIdentifierTypeLcaCorporateRegistryEntityNum WeakIdentifierType = "lca_corporate_registry_entity_num"
	WeakIdentifierTypeVenManifiestoNumber           WeakIdentifierType = "ven_manifiesto_number"
	WeakIdentifierTypeColMatriculaMercantil         WeakIdentifierType = "col_matricula_mercantil"
	WeakIdentifierTypeMaritimeMobileServiceIdentity WeakIdentifierType = "maritime_mobile_service_identity"
	WeakIdentifierTypeUsaFormerFein                 WeakIdentifierType = "usa_former_fein"
	WeakIdentifierTypeUsaCbpWroId                   WeakIdentifierType = "usa_cbp_wro_id"
	WeakIdentifierTypeCcsShipClassNumber            WeakIdentifierType = "ccs_ship_class_number"
	WeakIdentifierTypeTurPartialMersisNumber        WeakIdentifierType = "tur_partial_mersis_number"
	WeakIdentifierTypeTurOfficeRegistrationNumber   WeakIdentifierType = "tur_office_registration_number"
	WeakIdentifierTypePartialVenCedula              WeakIdentifierType = "partial_ven_cedula"
	WeakIdentifierTypeRusCbrId                      WeakIdentifierType = "rus_cbr_id"
	WeakIdentifierTypeGeoStateRegistrationNumber    WeakIdentifierType = "geo_state_registration_number"
	WeakIdentifierTypeBihMbsNumber                  WeakIdentifierType = "bih_mbs_number"
)

func NewWeakIdentifierTypeFromString(s string) (WeakIdentifierType, error) {
	switch s {
	case "unknown":
		return WeakIdentifierTypeUnknown, nil
	case "mx_partial_rfc_person":
		return WeakIdentifierTypeMxPartialRfcPerson, nil
	case "ru_oktmo":
		return WeakIdentifierTypeRuOktmo, nil
	case "ru_kpp":
		return WeakIdentifierTypeRuKpp, nil
	case "ru_okpo":
		return WeakIdentifierTypeRuOkpo, nil
	case "unknown_passport":
		return WeakIdentifierTypeUnknownPassport, nil
	case "rks_kta_number":
		return WeakIdentifierTypeRksKtaNumber, nil
	case "bra_partial_cpf":
		return WeakIdentifierTypeBraPartialCpf, nil
	case "ven_colegiado_number":
		return WeakIdentifierTypeVenColegiadoNumber, nil
	case "pan_folio":
		return WeakIdentifierTypePanFolio, nil
	case "kgz_okpo":
		return WeakIdentifierTypeKgzOkpo, nil
	case "kgz_inn":
		return WeakIdentifierTypeKgzInn, nil
	case "lbn_registration_number":
		return WeakIdentifierTypeLbnRegistrationNumber, nil
	case "ita_ebr_reg_number":
		return WeakIdentifierTypeItaEbrRegNumber, nil
	case "ita_ebr_short_search_code":
		return WeakIdentifierTypeItaEbrShortSearchCode, nil
	case "chl_santiago_gazette_cve":
		return WeakIdentifierTypeChlSantiagoGazetteCve, nil
	case "bmu_registration_number":
		return WeakIdentifierTypeBmuRegistrationNumber, nil
	case "brazilian_oab":
		return WeakIdentifierTypeBrazilianOab, nil
	case "irn_reg_number":
		return WeakIdentifierTypeIrnRegNumber, nil
	case "mx_fme":
		return WeakIdentifierTypeMxFme, nil
	case "ukr_edrpou":
		return WeakIdentifierTypeUkrEdrpou, nil
	case "ru_license_number":
		return WeakIdentifierTypeRuLicenseNumber, nil
	case "maritime_call_sign":
		return WeakIdentifierTypeMaritimeCallSign, nil
	case "prk_ship_reg_no":
		return WeakIdentifierTypePrkShipRegNo, nil
	case "cofi_code":
		return WeakIdentifierTypeCofiCode, nil
	case "ru_nza":
		return WeakIdentifierTypeRuNza, nil
	case "arg_igj_number":
		return WeakIdentifierTypeArgIgjNumber, nil
	case "unknown_bra_case_number":
		return WeakIdentifierTypeUnknownBraCaseNumber, nil
	case "irq_provision_card":
		return WeakIdentifierTypeIrqProvisionCard, nil
	case "mbl_hm_sn":
		return WeakIdentifierTypeMblHmSn, nil
	case "mbl_hm_hud_num":
		return WeakIdentifierTypeMblHmHudNum, nil
	case "mbl_hm_title_num":
		return WeakIdentifierTypeMblHmTitleNum, nil
	case "mex_declaranet_acuse":
		return WeakIdentifierTypeMexDeclaranetAcuse, nil
	case "deu_registernummer":
		return WeakIdentifierTypeDeuRegisternummer, nil
	case "unknown_national_id_num":
		return WeakIdentifierTypeUnknownNationalIdNum, nil
	case "unknown_civil_reg_num":
		return WeakIdentifierTypeUnknownCivilRegNum, nil
	case "unknown_residency_num":
		return WeakIdentifierTypeUnknownResidencyNum, nil
	case "unknown_folio_id_num":
		return WeakIdentifierTypeUnknownFolioIdNum, nil
	case "unknown_commercial_register_id":
		return WeakIdentifierTypeUnknownCommercialRegisterId, nil
	case "unknown_chamber_of_commerce_id":
		return WeakIdentifierTypeUnknownChamberOfCommerceId, nil
	case "unknown_license_num":
		return WeakIdentifierTypeUnknownLicenseNum, nil
	case "unknown_industrial_license_num":
		return WeakIdentifierTypeUnknownIndustrialLicenseNum, nil
	case "cze_file_number":
		return WeakIdentifierTypeCzeFileNumber, nil
	case "mex_tm_app_no":
		return WeakIdentifierTypeMexTmAppNo, nil
	case "mex_tm_reg_no":
		return WeakIdentifierTypeMexTmRegNo, nil
	case "jordan_company_no":
		return WeakIdentifierTypeJordanCompanyNo, nil
	case "cn_qcc_internal_id":
		return WeakIdentifierTypeCnQccInternalId, nil
	case "jor_sol_prop_institution_number":
		return WeakIdentifierTypeJorSolPropInstitutionNumber, nil
	case "usa_nc_corp_no":
		return WeakIdentifierTypeUsaNcCorpNo, nil
	case "usa_nm_license_id":
		return WeakIdentifierTypeUsaNmLicenseId, nil
	case "khm_tin_number":
		return WeakIdentifierTypeKhmTinNumber, nil
	case "usa_mo_entity_id":
		return WeakIdentifierTypeUsaMoEntityId, nil
	case "usa_mo_corp_number":
		return WeakIdentifierTypeUsaMoCorpNumber, nil
	case "mac_raem_case_number":
		return WeakIdentifierTypeMacRaemCaseNumber, nil
	case "hnd_tegucigalpa_notary":
		return WeakIdentifierTypeHndTegucigalpaNotary, nil
	case "lbn_family_number":
		return WeakIdentifierTypeLbnFamilyNumber, nil
	case "tx_bexar_property_geo_id":
		return WeakIdentifierTypeTxBexarPropertyGeoId, nil
	case "pak_cnic_family_no":
		return WeakIdentifierTypePakCnicFamilyNo, nil
	case "rou_commercial_register_id":
		return WeakIdentifierTypeRouCommercialRegisterId, nil
	case "south_africa_partial_id_number":
		return WeakIdentifierTypeSouthAfricaPartialIdNumber, nil
	case "prk_internal_trade_id":
		return WeakIdentifierTypePrkInternalTradeId, nil
	case "chn_customs_registration_code":
		return WeakIdentifierTypeChnCustomsRegistrationCode, nil
	case "aut_former_cr_no":
		return WeakIdentifierTypeAutFormerCrNo, nil
	case "aut_natl_bank_no":
		return WeakIdentifierTypeAutNatlBankNo, nil
	case "lva_person_id_masked":
		return WeakIdentifierTypeLvaPersonIdMasked, nil
	case "lva_court_case_id":
		return WeakIdentifierTypeLvaCourtCaseId, nil
	case "chn_cninfo_legal_person_id":
		return WeakIdentifierTypeChnCninfoLegalPersonId, nil
	case "rks_business_number":
		return WeakIdentifierTypeRksBusinessNumber, nil
	case "rks_fiscal_number":
		return WeakIdentifierTypeRksFiscalNumber, nil
	case "mdg_nif_number":
		return WeakIdentifierTypeMdgNifNumber, nil
	case "mdg_rcs_number":
		return WeakIdentifierTypeMdgRcsNumber, nil
	case "vat":
		return WeakIdentifierTypeVat, nil
	case "usa_il_chicago_site_number":
		return WeakIdentifierTypeUsaIlChicagoSiteNumber, nil
	case "usa_generic_ticker":
		return WeakIdentifierTypeUsaGenericTicker, nil
	case "ven_rnc_number":
		return WeakIdentifierTypeVenRncNumber, nil
	case "usa_imports_system_identity_id":
		return WeakIdentifierTypeUsaImportsSystemIdentityId, nil
	case "col_bill_of_lading":
		return WeakIdentifierTypeColBillOfLading, nil
	case "col_secop_no":
		return WeakIdentifierTypeColSecopNo, nil
	case "pol_regon_number":
		return WeakIdentifierTypePolRegonNumber, nil
	case "pol_nip_number":
		return WeakIdentifierTypePolNipNumber, nil
	case "bill_of_lading":
		return WeakIdentifierTypeBillOfLading, nil
	case "pan_ibc_ruc":
		return WeakIdentifierTypePanIbcRuc, nil
	case "pak_old_company_code":
		return WeakIdentifierTypePakOldCompanyCode, nil
	case "jpn_permit_no":
		return WeakIdentifierTypeJpnPermitNo, nil
	case "dma_corporate_registry_entity_num":
		return WeakIdentifierTypeDmaCorporateRegistryEntityNum, nil
	case "atg_corporate_registry_entity_num":
		return WeakIdentifierTypeAtgCorporateRegistryEntityNum, nil
	case "lca_corporate_registry_entity_num":
		return WeakIdentifierTypeLcaCorporateRegistryEntityNum, nil
	case "ven_manifiesto_number":
		return WeakIdentifierTypeVenManifiestoNumber, nil
	case "col_matricula_mercantil":
		return WeakIdentifierTypeColMatriculaMercantil, nil
	case "maritime_mobile_service_identity":
		return WeakIdentifierTypeMaritimeMobileServiceIdentity, nil
	case "usa_former_fein":
		return WeakIdentifierTypeUsaFormerFein, nil
	case "usa_cbp_wro_id":
		return WeakIdentifierTypeUsaCbpWroId, nil
	case "ccs_ship_class_number":
		return WeakIdentifierTypeCcsShipClassNumber, nil
	case "tur_partial_mersis_number":
		return WeakIdentifierTypeTurPartialMersisNumber, nil
	case "tur_office_registration_number":
		return WeakIdentifierTypeTurOfficeRegistrationNumber, nil
	case "partial_ven_cedula":
		return WeakIdentifierTypePartialVenCedula, nil
	case "rus_cbr_id":
		return WeakIdentifierTypeRusCbrId, nil
	case "geo_state_registration_number":
		return WeakIdentifierTypeGeoStateRegistrationNumber, nil
	case "bih_mbs_number":
		return WeakIdentifierTypeBihMbsNumber, nil
	}
	var t WeakIdentifierType
	return "", fmt.Errorf("%s is not a valid %T", s, t)
}

func (w WeakIdentifierType) Ptr() *WeakIdentifierType {
	return &w
}

type MatchExplanation struct {
	Matched  *string `json:"matched,omitempty"`
	Uploaded *string `json:"uploaded,omitempty"`
}

type ResolutionResponseFields struct {
	Name        []string   `json:"name,omitempty"`
	Identifier  []string   `json:"identifier,omitempty"`
	Country     []Country  `json:"country,omitempty"`
	Address     []string   `json:"address,omitempty"`
	DateOfBirth []string   `json:"date_of_birth,omitempty"`
	Contact     []string   `json:"contact,omitempty"`
	Type        []Entities `json:"type,omitempty"`
}

type ResolutionResult struct {
	Score          float64                        `json:"score"`
	EntityId       string                         `json:"entity_id"`
	Label          string                         `json:"label"`
	Type           Entities                       `json:"type,omitempty"`
	Identifiers    []*Identifier                  `json:"identifiers,omitempty"`
	PsaId          *int                           `json:"psa_id,omitempty"`
	Addresses      []string                       `json:"addresses,omitempty"`
	Countries      []Country                      `json:"countries,omitempty"`
	Sources        []string                       `json:"sources,omitempty"`
	MatchedQueries []string                       `json:"matched_queries,omitempty"`
	Highlight      map[string][]string            `json:"highlight,omitempty"`
	Explanation    map[string][]*MatchExplanation `json:"explanation,omitempty"`
}

// Not Found Response
type NotFoundResponse struct {
	Status  int      `json:"status"`
	Message []string `json:"message,omitempty"`
	Success bool     `json:"success"`
}

// Unauthorized Response
type UnauthorizedResponse struct {
	Error            string `json:"error"`
	ErrorDescription string `json:"error_description"`
}

type Coordinate struct {
	Lat     float64 `json:"lat"`
	Lng     float64 `json:"lng"`
	Address string  `json:"address"`
}

type EmbeddedEntity struct {
	Id                EntityId              `json:"id"`
	Label             string                `json:"label"`
	Degree            int                   `json:"degree"`
	Closed            bool                  `json:"closed"`
	EntityUrl         string                `json:"entity_url"`
	Pep               bool                  `json:"pep"`
	PsaCount          int                   `json:"psa_count"`
	Sanctioned        bool                  `json:"sanctioned"`
	Type              Entities              `json:"type,omitempty"`
	Identifiers       []*Identifier         `json:"identifiers,omitempty"`
	Countries         []string              `json:"countries,omitempty"`
	PsaSanctioned     *string               `json:"psa_sanctioned,omitempty"`
	SourceCount       SourceCount           `json:"source_count,omitempty"`
	Addresses         []string              `json:"addresses,omitempty"`
	DateOfBirth       *string               `json:"date_of_birth,omitempty"`
	RelationshipCount map[Relationships]int `json:"relationship_count,omitempty"`
}

type EntityDetails struct {
	Id                EntityId              `json:"id"`
	Label             string                `json:"label"`
	Degree            int                   `json:"degree"`
	Closed            bool                  `json:"closed"`
	EntityUrl         string                `json:"entity_url"`
	Pep               bool                  `json:"pep"`
	PsaCount          int                   `json:"psa_count"`
	Sanctioned        bool                  `json:"sanctioned"`
	Type              Entities              `json:"type,omitempty"`
	Identifiers       []*Identifier         `json:"identifiers,omitempty"`
	Countries         []string              `json:"countries,omitempty"`
	PsaSanctioned     *string               `json:"psa_sanctioned,omitempty"`
	SourceCount       SourceCount           `json:"source_count,omitempty"`
	Addresses         []string              `json:"addresses,omitempty"`
	DateOfBirth       *string               `json:"date_of_birth,omitempty"`
	RelationshipCount map[Relationships]int `json:"relationship_count,omitempty"`
	RegistrationDate  *string               `json:"registration_date,omitempty"`
	TranslatedLabel   *string               `json:"translated_label,omitempty"`
	HsCode            *string               `json:"hs_code,omitempty"`
	ShipmentArrival   *string               `json:"shipment_arrival,omitempty"`
	ShipmentDeparture *string               `json:"shipment_departure,omitempty"`
	CompanyType       *string               `json:"company_type,omitempty"`
	LatestStatus      *Status               `json:"latest_status,omitempty"`
	Risk              map[Risk]*RiskData    `json:"risk,omitempty"`
	Attributes        *AttributeDetails     `json:"attributes,omitempty"`
	Relationships     *EntityRelationships  `json:"relationships,omitempty"`
	PossiblySameAs    *PossiblySameAs       `json:"possibly_same_as,omitempty"`
	ReferencedBy      *ReferencedBy         `json:"referenced_by,omitempty"`
	Matches           map[string][]string   `json:"matches,omitempty"`
}

// The unique identifier for an entity in the database
type EntityId = string

type EntityRelationships struct {
	Limit int                 `json:"limit"`
	Size  *SizeInfo           `json:"size,omitempty"`
	Data  []*RelationshipData `json:"data,omitempty"`
}

type Identifier struct {
	Value string `json:"value"`
	Type  string `json:"type"`
	Label string `json:"label"`
}

type PossiblySameAs struct {
	Limit int                  `json:"limit"`
	Size  *SizeInfo            `json:"size,omitempty"`
	Data  []PossiblySameAsData `json:"data,omitempty"`
}

type PossiblySameAsData = interface{}

type RecordDetails struct {
	Id              RecordId            `json:"id"`
	Label           string              `json:"label"`
	Source          SourceId            `json:"source"`
	PublicationDate *string             `json:"publication_date,omitempty"`
	AcquisitionDate string              `json:"acquisition_date"`
	ReferencesCount int                 `json:"references_count"`
	RecordUrl       string              `json:"record_url"`
	SourceUrl       *string             `json:"source_url,omitempty"`
	Matches         map[string][]string `json:"matches,omitempty"`
}

// The unique identifier for a record in the database
type RecordId = string

type ReferencedBy struct {
	Limit int                 `json:"limit"`
	Size  *SizeInfo           `json:"size,omitempty"`
	Data  []*ReferencedByData `json:"data,omitempty"`
}

type ReferencedByData struct {
	Record *RecordDetails `json:"record,omitempty"`
	Type   string         `json:"type"`
}

type RelationshipAttributeValue struct {
	Value     *string `json:"value,omitempty"`
	NumShares *int    `json:"num_shares,omitempty"`
}

type RelationshipData struct {
	Target        *EmbeddedEntity   `json:"target,omitempty"`
	Types         RelationshipTypes `json:"types,omitempty"`
	Dates         []string          `json:"dates,omitempty"`
	FirstObserved string            `json:"first_observed"`
	LastObserved  string            `json:"last_observed"`
	StartDate     *string           `json:"start_date,omitempty"`
}

type RelationshipInfo struct {
	Record          string                                       `json:"record"`
	Attributes      map[Attributes][]*RelationshipAttributeValue `json:"attributes,omitempty"`
	FromDate        *string                                      `json:"from_date,omitempty"`
	AcquisitionDate string                                       `json:"acquisition_date"`
	PublicationDate *string                                      `json:"publication_date,omitempty"`
}

type RelationshipTypes = map[Relationships][]*RelationshipInfo

type Risk string

const (
	RiskSheffieldHallamUniversityForcedLaborEntity                Risk = "sheffield_hallam_university_forced_labor_entity"
	RiskExportControls                                            Risk = "export_controls"
	RiskForcedLaborXinjiangUflpa                                  Risk = "forced_labor_xinjiang_uflpa"
	RiskPsaForcedLaborXinjiangUflpa                               Risk = "psa_forced_labor_xinjiang_uflpa"
	RiskPsaExportControls                                         Risk = "psa_export_controls"
	RiskPsaSheffieldHallamUniversityForcedLaborEntity             Risk = "psa_sheffield_hallam_university_forced_labor_entity"
	RiskPsaSanctioned                                             Risk = "psa_sanctioned"
	RiskPsaWroEntity                                              Risk = "psa_wro_entity"
	RiskSanctioned                                                Risk = "sanctioned"
	RiskWroEntity                                                 Risk = "wro_entity"
	RiskExportToSanctioned                                        Risk = "export_to_sanctioned"
	RiskExportToSoe                                               Risk = "export_to_soe"
	RiskExportsBisHighPriorityItems                               Risk = "exports_bis_high_priority_items"
	RiskForcedLaborSheffieldHallamUniversityReportsOriginDirect   Risk = "forced_labor_sheffield_hallam_university_reports_origin_direct"
	RiskForcedLaborWroOriginDirect                                Risk = "forced_labor_wro_origin_direct"
	RiskForcedLaborXinjiangOriginDirect                           Risk = "forced_labor_xinjiang_origin_direct"
	RiskForcedLaborUflpaOriginDirect                              Risk = "forced_labor_uflpa_origin_direct"
	RiskForcedLaborXinjiangGeospatial                             Risk = "forced_labor_xinjiang_geospatial"
	RiskForcedLaborXinjiangRegistration                           Risk = "forced_labor_xinjiang_registration"
	RiskForcedLaborChinaKeywords                                  Risk = "forced_labor_china_keywords"
	RiskOwnedByXinjiangEntity                                     Risk = "owned_by_xinjiang_entity"
	RiskOwnerOfForcedLaborXinjiangEntity                          Risk = "owner_of_forced_labor_xinjiang_entity"
	RiskForcedLaborSheffieldHallamUniversityReportsOriginSubtier  Risk = "forced_labor_sheffield_hallam_university_reports_origin_subtier"
	RiskForcedLaborWroOriginSubtier                               Risk = "forced_labor_wro_origin_subtier"
	RiskForcedLaborXinjiangOriginSubtier                          Risk = "forced_labor_xinjiang_origin_subtier"
	RiskForcedLaborUflpaOriginSubtier                             Risk = "forced_labor_uflpa_origin_subtier"
	RiskForcedLaborXinjiangContractors                            Risk = "forced_labor_xinjiang_contractors"
	RiskForcedLaborXinjiangName                                   Risk = "forced_labor_xinjiang_name"
	RiskFormerlySanctioned                                        Risk = "formerly_sanctioned"
	RiskFormerWroEntity                                           Risk = "former_wro_entity"
	RiskMeuListContractors                                        Risk = "meu_list_contractors"
	RiskImportsBisHighPriorityItems                               Risk = "imports_bis_high_priority_items"
	RiskOwnedBySheffieldHallamUniversityReportsForcedLaborEntity  Risk = "owned_by_sheffield_hallam_university_reports_forced_labor_entity"
	RiskOwnedByEntityInExportControls                             Risk = "owned_by_entity_in_export_controls"
	RiskOwnedByBisMeuEntity                                       Risk = "owned_by_bis_meu_entity"
	RiskOwnedBySection1260HEntity                                 Risk = "owned_by_section_1260h_entity"
	RiskOwnedByCmicEntity                                         Risk = "owned_by_cmic_entity"
	RiskOwnedByForcedLaborXinjiangUflpa                           Risk = "owned_by_forced_labor_xinjiang_uflpa"
	RiskOwnedBySanctionedEntity                                   Risk = "owned_by_sanctioned_entity"
	RiskOwnedBySoe                                                Risk = "owned_by_soe"
	RiskOwnedByWroEntity                                          Risk = "owned_by_wro_entity"
	RiskOwnerOfRegulatoryActionEntity                             Risk = "owner_of_regulatory_action_entity"
	RiskOwnerOfSheffieldHallamUniversityReportsForcedLaborEntity  Risk = "owner_of_sheffield_hallam_university_reports_forced_labor_entity"
	RiskOwnerOfForcedLaborXinjiangUflpa                           Risk = "owner_of_forced_labor_xinjiang_uflpa"
	RiskOwnerOfSanctionedEntity                                   Risk = "owner_of_sanctioned_entity"
	RiskOwnerOfSoe                                                Risk = "owner_of_soe"
	RiskOwnerOfWroEntity                                          Risk = "owner_of_wro_entity"
	RiskPep                                                       Risk = "pep"
	RiskPsaForcedLaborXinjiangGeospatial                          Risk = "psa_forced_labor_xinjiang_geospatial"
	RiskPsaForcedLaborXinjiangRegistration                        Risk = "psa_forced_labor_xinjiang_registration"
	RiskPsaForcedLaborXinjiangName                                Risk = "psa_forced_labor_xinjiang_name"
	RiskPsaRegulatoryAction                                       Risk = "psa_regulatory_action"
	RiskPsaStateOwned                                             Risk = "psa_state_owned"
	RiskPsaPep                                                    Risk = "psa_pep"
	RiskRegulatoryAction                                          Risk = "regulatory_action"
	RiskStateOwned                                                Risk = "state_owned"
	RiskReputationalRiskBriberyAndCorruption                      Risk = "reputational_risk_bribery_and_corruption"
	RiskReputationalRiskCybercrime                                Risk = "reputational_risk_cybercrime"
	RiskReputationalRiskFinancialCrime                            Risk = "reputational_risk_financial_crime"
	RiskReputationalRiskForcedLabor                               Risk = "reputational_risk_forced_labor"
	RiskFormerSoe                                                 Risk = "former_soe"
	RiskLawEnforcementAction                                      Risk = "law_enforcement_action"
	RiskReputationalRiskOrganizedCrime                            Risk = "reputational_risk_organized_crime"
	RiskReputationalRiskOther                                     Risk = "reputational_risk_other"
	RiskSheffieldHallamUniversityForcedLaborReportsEntityAdjacent Risk = "sheffield_hallam_university_forced_labor_reports_entity_adjacent"
	RiskExportControlsAdjacent                                    Risk = "export_controls_adjacent"
	RiskForcedLaborXinjiangUflpaAdjacent                          Risk = "forced_labor_xinjiang_uflpa_adjacent"
	RiskPepAdjacent                                               Risk = "pep_adjacent"
	RiskSanctionedAdjacent                                        Risk = "sanctioned_adjacent"
	RiskSoeAdjacent                                               Risk = "soe_adjacent"
	RiskWroEntityAdjacent                                         Risk = "wro_entity_adjacent"
	RiskReputationalRiskTerrorism                                 Risk = "reputational_risk_terrorism"
	RiskBaselAml                                                  Risk = "basel_aml"
	RiskCpiScore                                                  Risk = "cpi_score"
	RiskEuHighRiskThird                                           Risk = "eu_high_risk_third"
)

func NewRiskFromString(s string) (Risk, error) {
	switch s {
	case "sheffield_hallam_university_forced_labor_entity":
		return RiskSheffieldHallamUniversityForcedLaborEntity, nil
	case "export_controls":
		return RiskExportControls, nil
	case "forced_labor_xinjiang_uflpa":
		return RiskForcedLaborXinjiangUflpa, nil
	case "psa_forced_labor_xinjiang_uflpa":
		return RiskPsaForcedLaborXinjiangUflpa, nil
	case "psa_export_controls":
		return RiskPsaExportControls, nil
	case "psa_sheffield_hallam_university_forced_labor_entity":
		return RiskPsaSheffieldHallamUniversityForcedLaborEntity, nil
	case "psa_sanctioned":
		return RiskPsaSanctioned, nil
	case "psa_wro_entity":
		return RiskPsaWroEntity, nil
	case "sanctioned":
		return RiskSanctioned, nil
	case "wro_entity":
		return RiskWroEntity, nil
	case "export_to_sanctioned":
		return RiskExportToSanctioned, nil
	case "export_to_soe":
		return RiskExportToSoe, nil
	case "exports_bis_high_priority_items":
		return RiskExportsBisHighPriorityItems, nil
	case "forced_labor_sheffield_hallam_university_reports_origin_direct":
		return RiskForcedLaborSheffieldHallamUniversityReportsOriginDirect, nil
	case "forced_labor_wro_origin_direct":
		return RiskForcedLaborWroOriginDirect, nil
	case "forced_labor_xinjiang_origin_direct":
		return RiskForcedLaborXinjiangOriginDirect, nil
	case "forced_labor_uflpa_origin_direct":
		return RiskForcedLaborUflpaOriginDirect, nil
	case "forced_labor_xinjiang_geospatial":
		return RiskForcedLaborXinjiangGeospatial, nil
	case "forced_labor_xinjiang_registration":
		return RiskForcedLaborXinjiangRegistration, nil
	case "forced_labor_china_keywords":
		return RiskForcedLaborChinaKeywords, nil
	case "owned_by_xinjiang_entity":
		return RiskOwnedByXinjiangEntity, nil
	case "owner_of_forced_labor_xinjiang_entity":
		return RiskOwnerOfForcedLaborXinjiangEntity, nil
	case "forced_labor_sheffield_hallam_university_reports_origin_subtier":
		return RiskForcedLaborSheffieldHallamUniversityReportsOriginSubtier, nil
	case "forced_labor_wro_origin_subtier":
		return RiskForcedLaborWroOriginSubtier, nil
	case "forced_labor_xinjiang_origin_subtier":
		return RiskForcedLaborXinjiangOriginSubtier, nil
	case "forced_labor_uflpa_origin_subtier":
		return RiskForcedLaborUflpaOriginSubtier, nil
	case "forced_labor_xinjiang_contractors":
		return RiskForcedLaborXinjiangContractors, nil
	case "forced_labor_xinjiang_name":
		return RiskForcedLaborXinjiangName, nil
	case "formerly_sanctioned":
		return RiskFormerlySanctioned, nil
	case "former_wro_entity":
		return RiskFormerWroEntity, nil
	case "meu_list_contractors":
		return RiskMeuListContractors, nil
	case "imports_bis_high_priority_items":
		return RiskImportsBisHighPriorityItems, nil
	case "owned_by_sheffield_hallam_university_reports_forced_labor_entity":
		return RiskOwnedBySheffieldHallamUniversityReportsForcedLaborEntity, nil
	case "owned_by_entity_in_export_controls":
		return RiskOwnedByEntityInExportControls, nil
	case "owned_by_bis_meu_entity":
		return RiskOwnedByBisMeuEntity, nil
	case "owned_by_section_1260h_entity":
		return RiskOwnedBySection1260HEntity, nil
	case "owned_by_cmic_entity":
		return RiskOwnedByCmicEntity, nil
	case "owned_by_forced_labor_xinjiang_uflpa":
		return RiskOwnedByForcedLaborXinjiangUflpa, nil
	case "owned_by_sanctioned_entity":
		return RiskOwnedBySanctionedEntity, nil
	case "owned_by_soe":
		return RiskOwnedBySoe, nil
	case "owned_by_wro_entity":
		return RiskOwnedByWroEntity, nil
	case "owner_of_regulatory_action_entity":
		return RiskOwnerOfRegulatoryActionEntity, nil
	case "owner_of_sheffield_hallam_university_reports_forced_labor_entity":
		return RiskOwnerOfSheffieldHallamUniversityReportsForcedLaborEntity, nil
	case "owner_of_forced_labor_xinjiang_uflpa":
		return RiskOwnerOfForcedLaborXinjiangUflpa, nil
	case "owner_of_sanctioned_entity":
		return RiskOwnerOfSanctionedEntity, nil
	case "owner_of_soe":
		return RiskOwnerOfSoe, nil
	case "owner_of_wro_entity":
		return RiskOwnerOfWroEntity, nil
	case "pep":
		return RiskPep, nil
	case "psa_forced_labor_xinjiang_geospatial":
		return RiskPsaForcedLaborXinjiangGeospatial, nil
	case "psa_forced_labor_xinjiang_registration":
		return RiskPsaForcedLaborXinjiangRegistration, nil
	case "psa_forced_labor_xinjiang_name":
		return RiskPsaForcedLaborXinjiangName, nil
	case "psa_regulatory_action":
		return RiskPsaRegulatoryAction, nil
	case "psa_state_owned":
		return RiskPsaStateOwned, nil
	case "psa_pep":
		return RiskPsaPep, nil
	case "regulatory_action":
		return RiskRegulatoryAction, nil
	case "state_owned":
		return RiskStateOwned, nil
	case "reputational_risk_bribery_and_corruption":
		return RiskReputationalRiskBriberyAndCorruption, nil
	case "reputational_risk_cybercrime":
		return RiskReputationalRiskCybercrime, nil
	case "reputational_risk_financial_crime":
		return RiskReputationalRiskFinancialCrime, nil
	case "reputational_risk_forced_labor":
		return RiskReputationalRiskForcedLabor, nil
	case "former_soe":
		return RiskFormerSoe, nil
	case "law_enforcement_action":
		return RiskLawEnforcementAction, nil
	case "reputational_risk_organized_crime":
		return RiskReputationalRiskOrganizedCrime, nil
	case "reputational_risk_other":
		return RiskReputationalRiskOther, nil
	case "sheffield_hallam_university_forced_labor_reports_entity_adjacent":
		return RiskSheffieldHallamUniversityForcedLaborReportsEntityAdjacent, nil
	case "export_controls_adjacent":
		return RiskExportControlsAdjacent, nil
	case "forced_labor_xinjiang_uflpa_adjacent":
		return RiskForcedLaborXinjiangUflpaAdjacent, nil
	case "pep_adjacent":
		return RiskPepAdjacent, nil
	case "sanctioned_adjacent":
		return RiskSanctionedAdjacent, nil
	case "soe_adjacent":
		return RiskSoeAdjacent, nil
	case "wro_entity_adjacent":
		return RiskWroEntityAdjacent, nil
	case "reputational_risk_terrorism":
		return RiskReputationalRiskTerrorism, nil
	case "basel_aml":
		return RiskBaselAml, nil
	case "cpi_score":
		return RiskCpiScore, nil
	case "eu_high_risk_third":
		return RiskEuHighRiskThird, nil
	}
	var t Risk
	return "", fmt.Errorf("%s is not a valid %T", s, t)
}

func (r Risk) Ptr() *Risk {
	return &r
}

type RiskData struct {
	Value    interface{}            `json:"value,omitempty"`
	Metadata map[string]interface{} `json:"metadata,omitempty"`
	Level    RiskLevel              `json:"level,omitempty"`
}

type RiskLevel string

const (
	RiskLevelCritical RiskLevel = "critical"
	RiskLevelHigh     RiskLevel = "high"
	RiskLevelElevated RiskLevel = "elevated"
	RiskLevelRelevant RiskLevel = "relevant"
)

func NewRiskLevelFromString(s string) (RiskLevel, error) {
	switch s {
	case "critical":
		return RiskLevelCritical, nil
	case "high":
		return RiskLevelHigh, nil
	case "elevated":
		return RiskLevelElevated, nil
	case "relevant":
		return RiskLevelRelevant, nil
	}
	var t RiskLevel
	return "", fmt.Errorf("%s is not a valid %T", s, t)
}

func (r RiskLevel) Ptr() *RiskLevel {
	return &r
}

type SearchField string

const (
	SearchFieldName            SearchField = "name"
	SearchFieldIdentifier      SearchField = "identifier"
	SearchFieldAddress         SearchField = "address"
	SearchFieldBusinessPurpose SearchField = "business_purpose"
	SearchFieldDateOfBirth     SearchField = "date_of_birth"
	SearchFieldContact         SearchField = "contact"
)

func NewSearchFieldFromString(s string) (SearchField, error) {
	switch s {
	case "name":
		return SearchFieldName, nil
	case "identifier":
		return SearchFieldIdentifier, nil
	case "address":
		return SearchFieldAddress, nil
	case "business_purpose":
		return SearchFieldBusinessPurpose, nil
	case "date_of_birth":
		return SearchFieldDateOfBirth, nil
	case "contact":
		return SearchFieldContact, nil
	}
	var t SearchField
	return "", fmt.Errorf("%s is not a valid %T", s, t)
}

func (s SearchField) Ptr() *SearchField {
	return &s
}

type SourceCount = map[string]*SourceCountInfo

type SourceCountInfo struct {
	Count int    `json:"count"`
	Label string `json:"label"`
}

type Status struct {
	Status string  `json:"status"`
	Date   *string `json:"date,omitempty"`
}

type Aggregations struct {
	ByVolume []*VolumeAggregates `json:"byVolume,omitempty"`
}

type Bucket struct {
	Key      string `json:"key"`
	DocCount int    `json:"doc_count"`
}

type BusinessPurpose struct {
	Value *string `json:"value,omitempty"`
	Code  *string `json:"code,omitempty"`
}

type LatestShipmentDate struct {
	DocCountErrorUpperBound int       `json:"doc_count_error_upper_bound"`
	SumOtherDocCount        int       `json:"sum_other_doc_count"`
	Buckets                 []*Bucket `json:"buckets,omitempty"`
}

type Shipment struct {
	MonetaryValue   []interface{}                `json:"monetary_value,omitempty"`
	Dst             []*SourceOrDestinationEntity `json:"dst,omitempty"`
	Weight          []interface{}                `json:"weight,omitempty"`
	BusinessPurpose []*BusinessPurpose           `json:"business_purpose,omitempty"`
	Identifier      []*ShipmentIdentifier        `json:"identifier,omitempty"`
	Country         []*ShipmentCountry           `json:"country,omitempty"`
	Src             []*SourceOrDestinationEntity `json:"src,omitempty"`
	Metadata        *ShipmentMetadata            `json:"metadata,omitempty"`
}

type ShipmentCountry struct {
	Value Country `json:"value,omitempty"`
}

type ShipmentHits struct {
	Hits []*Shipment `json:"hits,omitempty"`
}

type ShipmentIdentifier struct {
	Value string               `json:"value"`
	Type  *BothIdentifierTypes `json:"type,omitempty"`
}

type ShipmentMetadata struct {
	ArrivalCountry   []Country          `json:"arrival_country,omitempty"`
	Jurisdiction     []Country          `json:"jurisdiction,omitempty"`
	ReferenceId      string             `json:"reference_id"`
	EntityId         EntityId           `json:"entity_id"`
	DepartureAddress *AddressProperties `json:"departure_address,omitempty"`
	Type             string             `json:"type"`
	Sources          []string           `json:"sources,omitempty"`
	DepartureCountry []Country          `json:"departure_country,omitempty"`
}

type SourceOrDestinationEntity struct {
	RiskFactors     map[Risk]interface{} `json:"risk_factors,omitempty"`
	Name            []string             `json:"name,omitempty"`
	BusinessPurpose []*BusinessPurpose   `json:"business_purpose,omitempty"`
	Country         []Country            `json:"country,omitempty"`
	EntityId        EntityId             `json:"entity_id"`
	Type            Relationships        `json:"type,omitempty"`
}

type Supplier struct {
	Id                EntityId              `json:"id"`
	Label             string                `json:"label"`
	Degree            int                   `json:"degree"`
	Closed            bool                  `json:"closed"`
	EntityUrl         string                `json:"entity_url"`
	Pep               bool                  `json:"pep"`
	PsaCount          int                   `json:"psa_count"`
	Sanctioned        bool                  `json:"sanctioned"`
	Type              Entities              `json:"type,omitempty"`
	Identifiers       []*Identifier         `json:"identifiers,omitempty"`
	Countries         []string              `json:"countries,omitempty"`
	PsaSanctioned     *string               `json:"psa_sanctioned,omitempty"`
	SourceCount       SourceCount           `json:"source_count,omitempty"`
	Addresses         []string              `json:"addresses,omitempty"`
	DateOfBirth       *string               `json:"date_of_birth,omitempty"`
	RelationshipCount map[Relationships]int `json:"relationship_count,omitempty"`
	RegistrationDate  *string               `json:"registration_date,omitempty"`
	TranslatedLabel   *string               `json:"translated_label,omitempty"`
	HsCode            *string               `json:"hs_code,omitempty"`
	ShipmentArrival   *string               `json:"shipment_arrival,omitempty"`
	ShipmentDeparture *string               `json:"shipment_departure,omitempty"`
	CompanyType       *string               `json:"company_type,omitempty"`
	LatestStatus      *Status               `json:"latest_status,omitempty"`
	Risk              map[Risk]*RiskData    `json:"risk,omitempty"`
	Attributes        *AttributeDetails     `json:"attributes,omitempty"`
	Relationships     *EntityRelationships  `json:"relationships,omitempty"`
	PossiblySameAs    *PossiblySameAs       `json:"possibly_same_as,omitempty"`
	ReferencedBy      *ReferencedBy         `json:"referenced_by,omitempty"`
	Matches           map[string][]string   `json:"matches,omitempty"`
	Metadata          *SupplierMetadata     `json:"metadata,omitempty"`
}

type SupplierMetadata struct {
	LatestShipmentDate *string `json:"latestShipmentDate,omitempty"`
	Shipments          int     `json:"shipments"`
}

type SupplierOrBuyerHits struct {
	Hits         []*Supplier   `json:"hits,omitempty"`
	Aggregations *Aggregations `json:"aggregations,omitempty"`
}

type VolumeAggregates struct {
	Key                string              `json:"key"`
	DocCount           int                 `json:"doc_count"`
	LatestShipmentDate *LatestShipmentDate `json:"latest_shipment_date,omitempty"`
}

type ShortestPathData struct {
	Target *EntityDetails   `json:"target,omitempty"`
	Path   []*TraversalPath `json:"path,omitempty"`
}

type TraversalData struct {
	Source string           `json:"source"`
	Target *EntityDetails   `json:"target,omitempty"`
	Path   []*TraversalPath `json:"path,omitempty"`
}

type TraversalPath struct {
	Field         string                                `json:"field"`
	Entity        *EntityDetails                        `json:"entity,omitempty"`
	Relationships map[string]*TraversalRelationshipData `json:"relationships,omitempty"`
}

type TraversalRelationshipData struct {
	Values       []*RelationshipInfo `json:"values,omitempty"`
	LastObserved *string             `json:"last_observed,omitempty"`
}
